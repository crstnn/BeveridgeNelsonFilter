{"version":3,"sources":["components/StartMenu.js","components/Error.js","utils/utils.js","components/ParametersForm.js","pickers/CustomDatePicker.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","minHeight","minWidth","margin","Error","Alert","severity","onClose","close","tagName","confIntZip","cycle","ci","bound","map","x","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","fetchWithTimeout","_callee","url","controller","timeoutID","f","regenerator_default","wrap","_context","prev","next","AbortController","setTimeout","abort","fetch","signal","sent","clearTimeout","abrupt","stop","createMenuItems","option","item","MenuItem","text","createHoverText","hoverText","forEach","fieldItem","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","_this$props","getResults","getFREDResults","handlers","cancelLoad","dataInputType","handleChange","target","back","prevStep","preAnalysisTransformations","_this$props2","handleCheckboxChange","Fragment","Divider","fontSize","Grid","container","direction","justifyContent","alignItems","spacing","xs","FormControl","FormControlLabel","label","title","control","Checkbox","size","onChange","checked","takeLog","disabled","transform","sx","InputLabel","Select","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","marginTop","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","loading","components_Error","alertErrors","alertErrorType","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","console","log","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","FREDDataForm","mnemonicTimeoutID","state","mnemonic","timeoutError","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","handleMnemonic","setState","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","asyncToGenerator","mark","setErrorMessage","deleteErrorMessage","responseSuccess","catch","then","response","status","json","result","parsedStartDate","split","Number","parsedEndDate","startDate","Date","endDate","mnemonicInput","marginBottom","FormGroup","row","color","onKeyDown","keyCode","endAdornment","react_loader_spinner_esm","height","FormHelperText","rel","href","pickers_CustomDatePicker","startDateFRED","endDateFRED","dispCycleCI","UserDataForm","handleTimeSeriesChange","timeSeries","notNumberReg","RegExp","arrayFormReg","seriesFormReg","nonNumberTest","test","arrayFormTest","seriesFormTest","errorMessage","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesUserData","valuesFREDData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","window","screen","l","b","t","pad","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","toFixed","react_csv","textDecoration","filename","getCSVData","Loading","DateAbstract","nextTimePeriod","getDateSeries","periods","currDate","assertThisInitialized","retDate","from","createDate","AnnualDate","QuarterlyDate","MonthlyDate","WeeklyDate","toFixedTwoDigits","d","truncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","fieldErrorMessages","cancelLoading","input","defineProperty","message","fieldErrorMessagesTemp","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","handleChangeValidation","validationArr","bnfParamArr","fetchResultWithErrorHandling","_ref","_x","getResultsForFREDData","_callee3","_context3","bnfFredDataSlug","_callee2","_context2","cycleRes","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee5","_context5","replace","bnfUserSpecifiedDataSlug","_callee4","_context4","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","backgroundColor","borderTop","textAlign","padding","position","overflowX","left","bottom","zIndex","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.65c81afa.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic, or</li>\r\n                            <li>A time series of your choosing, to be pasted into a field</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row);\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&';\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nasync function fetchWithTimeout(url) {\r\n    const\r\n        controller = new AbortController(),\r\n        timeoutID = setTimeout(() => controller.abort(), 20000), // 20 second timeout\r\n        f = await fetch(url, {signal: controller.signal});\r\n    clearTimeout(timeoutID);\r\n    return f;\r\n}\r\n\r\nconst createMenuItems = option => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nconst createHoverText = option => {\r\n    const hoverText = {};\r\n    option.forEach(x => hoverText[x.value] = x.hoverText);\r\n    return fieldItem => hoverText[fieldItem];\r\n}\r\n\r\nexport {colsToRows, confIntZip, fetchWithTimeout, pairArrayToParamStr, createMenuItems, createHoverText}","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field, alertErrors} from \"../config.json\";\r\nimport Error from \"./Error\";\r\nimport {createHoverText, createMenuItems} from \"../utils/utils\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && (this.isDisabled[field] === undefined || !this.isDisabled[field]());\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length;\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, handlers, values, errors, cancelLoad} = this.props;\r\n\r\n        if (values.dataInputType === \"FRED\" && errors[\"mnemonic\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_M\"}});\r\n            cancelLoad();\r\n        } else if (values.dataInputType === \"USER\" && errors[\"unprocessedY\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_S\"}});\r\n            cancelLoad();\r\n        }\r\n        else if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\") getFREDResults();\r\n            else if (values.dataInputType === \"USER\") getResults();\r\n            this.props.nextStep();\r\n        } else {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_PARAM\"}});\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Transformations</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                value={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                value={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\" style={{marginTop: \"35px\"}}>\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{ width: 280 }}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title={createHoverText(field.optionField.deltaSelect.option)(values.deltaSelect)}\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    value={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{width: 140}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search (with grid increments of 0.0005)\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    value={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 280}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning\"\r\n                                    title={createHoverText(field.optionField.iterativeDynamicDemeaning.option)(values.demean)}\r\n                                    onChange={handleChange('demean')}\r\n                                    value={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 140}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only active when using dynamic demeaning. Upper bound is two less than the number of observations\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    value={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={alertErrors[this.props.values.alertErrorType]}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n\r\n    const handleDateChange = newValue => {\r\n        console.log(\"pre-handleDateChange: \", newValue)\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleDateChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   title={props.title}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {createMenuItems, fetchWithTimeout, pairArrayToParamStr} from \"../utils/utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    mnemonicTimeoutID = null;\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        loading: false,\r\n        timeoutError: false,\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    handleMnemonic = (e) => {\r\n        this.setState({mnemonic: e.target.value});\r\n\r\n        if (this.mnemonicTimeoutID) clearTimeout(this.mnemonicTimeoutID);\r\n\r\n        this.mnemonicTimeoutID = setTimeout(() => {\r\n            this.checkAvailability();\r\n        }, 600);  // 0.6-second debounce timer\r\n    }\r\n\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n\r\n            const {handleChange, setErrorMessage, deleteErrorMessage} = this.props;\r\n\r\n            const responseSuccess = () => {\r\n                this.setState(\r\n                    {\r\n                        timeoutError: false,\r\n                        loading: false,\r\n                    });\r\n            }\r\n\r\n            fetchWithTimeout(finalURL)\r\n                .catch(e => {\r\n                    this.setState(\r\n                        {\r\n                            timeoutError: true,\r\n                            loading: false,\r\n                        });\r\n                    setErrorMessage(\"mnemonic\", \"Internal error: Come back later\");\r\n                    throw e;\r\n                })\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        responseSuccess();\r\n                        setErrorMessage(\"mnemonic\", \"mnemonic is not available\");\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        parsedStartDate = result[\"start_date\"].split(\"-\").map(x => Number(x)),\r\n                        parsedEndDate = result[\"end_date\"].split(\"-\").map(x => Number(x)),\r\n                        startDate = new Date(parsedStartDate[0], parsedStartDate[1] - 1, parsedStartDate[2]),\r\n                        endDate = new Date(parsedEndDate[0], parsedEndDate[1] - 1, parsedEndDate[2]);\r\n\r\n                    console.log(\"response: startDate: \", startDate)\r\n                    console.log(\"response: endDate: \", endDate)\r\n\r\n                    deleteErrorMessage(\"mnemonic\");\r\n                    handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n                    handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    handleChange('startDateFRED')({target: {value: startDate}});\r\n                    handleChange('endDateFRED')({target: {value: endDate}});\r\n                    handleChange('minDate')({target: {value: startDate}});\r\n                    handleChange('maxDate')({target: {value: endDate}});\r\n                    responseSuccess();\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const\r\n            {values, errors} = this.props,\r\n            showText = () => !(errors[\"mnemonic\"] === undefined && values.mnemonic === \"\") || this.state.timeoutError === true,\r\n            mnemonicHelperText = () => {\r\n                if (!showText()) return \"​\";\r\n                return errors['mnemonic'] !== undefined ? errors['mnemonic'] : \"mnemonic is available\";\r\n            };\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 80, marginBottom: 1}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <TextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         title=\"Press enter or click 'check' to check the availability of the mnemonic\"\r\n                                         color={errors[\"mnemonic\"] === undefined && values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={e => this.handleMnemonic(e) }\r\n                                         onKeyDown={e => e.keyCode === 13 /* 'enter' key */ ? this.checkAvailability(e) : null}\r\n                                         value={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <div className=\"dataInformation\">\r\n                        <Divider\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Options</Divider>\r\n                    </div>\r\n                    <Grid container direction=\"column\" sx={{minHeight: 340,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              title={\"Series' start date (inclusive). Determined by FRED\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              title={\"Series' end date (inclusive). Determined by FRED\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: averaging)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    value={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to report 95% confidence intervals in graph and CSV\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport {field} from \"../config.json\";\r\nimport {createMenuItems} from \"../utils/utils\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    handleTimeSeriesChange = e => {\r\n        e.preventDefault();\r\n        const\r\n            timeSeries = e.target.value,\r\n            {setErrorMessage, deleteErrorMessage, handleChange} = this.props;\r\n\r\n        const\r\n            notNumberReg = new RegExp(/[^\\d.,\\s]+/),\r\n            arrayFormReg = new RegExp(/^((\\d*(.\\d+)?),\\s*)+(\\d*(.\\d+)?)\\s*$/),\r\n            seriesFormReg = new RegExp(/^((\\d*(.\\d+)?)(\\r\\n|\\n|\\r))*((\\d*(.\\d+)?)(\\r\\n|\\n|\\r)?)$/);\r\n\r\n        const\r\n            nonNumberTest = notNumberReg.test(timeSeries),\r\n            arrayFormTest = arrayFormReg.test(timeSeries),\r\n            seriesFormTest = seriesFormReg.test(timeSeries);\r\n\r\n        let errorMessage = null;\r\n\r\n        if (timeSeries === \"\" || arrayFormTest || seriesFormTest) {\r\n            deleteErrorMessage(\"unprocessedY\");\r\n        }\r\n        else if (nonNumberTest) {\r\n            errorMessage = \"only accepts numbers, commas, and periods\";\r\n        } else if (!arrayFormTest && !seriesFormTest) {\r\n            errorMessage = \"bad input format\";\r\n        }\r\n        if (errorMessage !== null) setErrorMessage(\"unprocessedY\", errorMessage);\r\n\r\n        handleChange('unprocessedY')(e);\r\n    }\r\n\r\n    render() {\r\n        const {values, errors, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below.\r\n                    Pasting a time series from a CSV or array will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={this.handleTimeSeriesChange}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers (newline/line break not functioning in Safari)\r\n                    placeholder={\"e.g. \" + (new Array(100).join(\" \")) +\r\n                                \"101.2, 104.8, 102.4, ...\" + (new Array(100).join(\" \")) +\r\n                                \"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    value={values.unprocessedY}\r\n                    error={errors[\"unprocessedY\"] !== undefined}\r\n                    helperText={errors[\"unprocessedY\"] !== undefined ?\r\n                        errors['unprocessedY'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"420px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <div className=\"dataInformation\">\r\n                <Divider\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      title={\"Series' start date (inclusive). The end date is determined based on frequency\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                value={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = e => {\r\n        const {errors, valuesUserData, valuesFREDData, handleChange, deleteErrorMessage,} = this.props;\r\n\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => errors[\"mnemonic\"] !== undefined && valuesFREDData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => errors[\"unprocessedY\"] !== undefined && valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) deleteErrorMessage(\"unprocessedY\");\r\n\r\n        handleChange('dataInputType')(e);\r\n    }\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {valuesUserData, valuesFREDData, setErrorMessage, nextStep,} = this.props;\r\n        nextStep();\r\n        if (valuesFREDData.dataInputType === \"FRED\" && valuesFREDData.mnemonic === \"\") {\r\n            setErrorMessage(\"mnemonic\", \"mnemonic cannot be empty\");\r\n        }\r\n        if (valuesUserData.dataInputType === \"USER\" && valuesUserData.unprocessedY === \"\") {\r\n            setErrorMessage(\"unprocessedY\", \"time series field cannot be empty\");\r\n        }\r\n        console.log(valuesUserData)\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        setErrorMessage={setErrorMessage}\r\n                                        deleteErrorMessage={deleteErrorMessage}\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}\r\n                                        errors={errors}\r\n                                    />\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.continue}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [(plotPageValues.dataInputType === \"FRED\" ? `${plotPageValues.mnemonic}_` : \"\" ) + \"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'},\r\n                width: window.screen.width <= 700 ? 450 : 700, // fit to window size\r\n                margin: {l: 20, r: 20, b: 20, t: 20, pad: 5}\r\n                }}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc.toFixed(4) /* delta reported to 4 d.p. */} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateAbstract extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new AnnualDate(date);\r\n            case \"q\":\r\n                return new QuarterlyDate(date);\r\n            case \"m\":\r\n                return new MonthlyDate(date);\r\n            case \"w\":\r\n                return new WeeklyDate(date);\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static toFixedTwoDigits = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static truncatedDate = date => `${date.getFullYear()}-${DateAbstract.toFixedTwoDigits(date.getMonth() + 1)}-${DateAbstract.toFixedTwoDigits(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {throw new Error(\"Child class must implement this method\");};\r\n\r\n    getDateSeries = periods => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: periods}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass AnnualDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new AnnualDate(this);\r\n        return new AnnualDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateAbstract, WeeklyDate, MonthlyDate, QuarterlyDate, AnnualDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateAbstract} from \"../utils/date\";\r\nimport {confIntZip, fetchWithTimeout, pairArrayToParamStr} from \"../utils/utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: true, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        alertErrorType: null, // overarching alert text\r\n        fieldErrorMessages: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            fieldErrorMessages: {\r\n                ...this.state.fieldErrorMessages,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let fieldErrorMessagesTemp = {...this.state.fieldErrorMessages};\r\n        delete fieldErrorMessagesTemp[input];\r\n        this.setState({fieldErrorMessages : fieldErrorMessagesTemp});\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (field.freeText[input].min !== null && v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (field.freeText[input].max !== null && v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleChangeValidation = input => e => validationArr => {\r\n        this.validateField(validationArr, input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    fetchResultWithErrorHandling = async (finalURL) => {\r\n        return fetchWithTimeout(finalURL)\r\n            .catch(e => {\r\n                this.setState({alertErrorType: \"TIMEOUT\"});\r\n                this.prevStep();\r\n                this.cancelLoading();\r\n                throw e;\r\n            })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    this.setState({alertErrorType: \"SERVER\"});\r\n                    this.prevStep();\r\n                    this.cancelLoading();\r\n                    throw new Error(\"bad status\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateAbstract.truncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateAbstract.truncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateAbstract.createDate(this.state.frequency, this.state.startDate).getDateSeries(cycleRes.length).map(DateAbstract.truncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            fieldErrorMessages,\r\n            loading,\r\n            serverError,\r\n            alertErrorType,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType,\r\n            alertErrorType,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate, dataInputType, mnemonic};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={fieldErrorMessages}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={fieldErrorMessages}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://crstnn.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n        zIndex: 1,\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}