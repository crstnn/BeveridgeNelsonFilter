{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/FormFilterParameters.js","utils/Date.js","pickers/CustomDatePicker.js","components/UserData.js","components/RenderedPlot.js","components/Loading.js","components/Error.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","createMenuItems","option","map","item","MenuItem","text","FormFilterParameters","_this$props","getResults","cancelLoad","errors","keys","back","prevStep","preAnalysisTransformations","_this$props2","values","handleChange","handleCheckboxChange","Fragment","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","spacing","alignItems","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","options","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","isRollingWindowDisabled","isAutomaticWindow","demean","isFixedDeltaDisabled","deltaSelect","width","display","paddingBottom","TextField","fixedDelta","error","undefined","helperText","iterativeDynamicDemeaning","rollingWindow","DateS","nextTimePeriod","Error","getDateArray","len","currDate","assertThisInitialized","retDate","from","_","idx","Date","createDate","date","YearlyDate","QuarterlyDate","MonthlyDate","WeeklyDate","getTruncatedDate","getDate","getMonth","getFullYear","oldDate","_this2","setDate","_this3","setMonth","_this4","_this5","setFullYear","CustomDatePicker","startDate","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","InputProps","newValue","updateDate","target","isDisabled","renderInput","params","UserData","m","paddingRight","multiline","rows","InputLabelProps","shrink","placeholder","join","unprocessedY","minHeight","paddingTop","pickers_CustomDatePicker","periodicity","periodicityManual","marginBottom","marginTop","dispCycleCI","headingFormControlLabel","RenderedPlot","plotPageValues","UserForm","colsToRows","x","cycle","cycleCILB","cycleCIUB","console","log","y","react_plotly_default","layout","autosize","b","data","type","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","filename","getCSVData","Loading","react_loader_spinner_esm","height","Alert","severity","onClose","close","tagName","state","step","iterativeBackcasting","cycleCI","loading","errorMessage","baseBackendURL","bnfUserSpecifiedDataSlug","bnfFredDataSlug","fredDataSlug","setState","input","defineProperty","setErrorMessage","message","objectSpread","isNaN","validation","min","max","asyncToGenerator","regenerator_default","mark","_callee2","statePairToParam","paramStr","finalURL","wrap","_context2","prev","next","replace","split","filter","paramName","currPair","toString","reduce","_callee","_context","fetch","then","response","status","json","result","cycleRes","Number","ciRes","deltaRes","i","confIntZip","catch","stop","_this$state","components_UserData","components_Error","components_FormFilterParameters","components_RenderedPlot","components_StartMenu","ci","bound","_len2","columns","_key2","rowLength","colLength","retArr","c","row","r","push","App","rel","href","components_UserForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ae062f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>We will guide you through the steps to perform trend-cycle decomposition on either (i) a time\r\n                        series of your choosing to be pasted into a field or (ii) a time series from the Federal Reserve\r\n                        Economic Database (FRED) using its mnemonic. Note that there is additional information provided\r\n                        when hovering over the options in the subsequent pages. The cycle is reported and can be\r\n                        downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map( (item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {options} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\n\r\nexport class FormFilterParameters extends Component {\r\n\r\n    continue = e => {\r\n        const {getResults, cancelLoad, errors} = this.props;\r\n        if (Object.keys(errors).length === 0) {\r\n            getResults();\r\n        } else {\r\n            cancelLoad();\r\n        }\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider light><FormControl variant=\"standard\">\r\n                        <FormControlLabel\r\n                            label={<Typography\r\n                                style={{fontSize: 'x-large'}}>Pre-Analysis Transformations</Typography>}\r\n                            title=\"Transformations are applied in the order below and are done prior to the BN Filter run\"\r\n                            control={<Checkbox\r\n                                onChange={handleCheckboxChange('transform')}\r\n                                checked={values.transform}/>}\r\n                        />\r\n                    </FormControl></Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" spacing={4}\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(options.dCode)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Percentage multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(options.pCode)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const {values, handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange, errors} = this.props;\r\n\r\n        const\r\n            isRollingWindowDisabled = values.isAutomaticWindow || values.demean === \"sm\",\r\n            isFixedDeltaDisabled = values.deltaSelect !== 0;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>BN Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={4}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(options.deltaSelect)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 50}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleNumberFieldChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={isFixedDeltaDisabled}\r\n                                    error={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled}\r\n                                    helperText={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled ?\r\n                                        errors['fixedDelta'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 250}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Iterative Dynamic Demeaning\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(options.iterativeDynamicDemeaning)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 100}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={isRollingWindowDisabled}\r\n                                    error={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled}\r\n                                    helperText={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled ?\r\n                                        errors['rollingWindow'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.preAnalysisTransformations()}\r\n                {this.bnFilterParameters()}\r\n                <br/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default FormFilterParameters","class DateS extends Date {\r\n\r\n    nextTimePeriod = () => { throw new Error(\"Child class must implement this method\"); };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map((_, idx) => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"y\": return new YearlyDate(date)\r\n            case \"q\": return new QuarterlyDate(date)\r\n            case \"m\": return new MonthlyDate(date)\r\n            case \"w\": return new WeeklyDate(date)\r\n            default: throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static getTruncatedDate = (date) => `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS{\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass YearlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new YearlyDate(this);\r\n        return new YearlyDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, YearlyDate}\r\n","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {options} from \"../config.json\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const startDate = props.startDate;\r\n    // const [startDate, setStartDate] = React.useState(props.startDate);\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue }})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Time Series Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={startDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {options} from \"../config.json\";\r\n\r\nexport class UserData extends Component {\r\n\r\n\r\n    continue = e => {\r\n\r\n        e.preventDefault();\r\n        // process form\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Data and Transformations</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. The next observation must start on the next line (and\r\n                        so on). For example, pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            // Hacky newline fix that works for all browsers\r\n                            // (newline or line break not functioning in Safari)\r\n                            placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Display Options</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop: 4}}\r\n                              justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={4}>\r\n                                <CustomDatePicker startDate={values.startDate}\r\n                                                  periodicity={values.periodicity}\r\n                                                  updateDate={handleChange(\"startDate\")}\r\n                                                  isDisabled={values.periodicity === \"n\"}/>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >{createMenuItems(options.periodicityManual)}</Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                    <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                      title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                          checked={values.dispCycleCI}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 30\r\n\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default UserData","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return UserForm.colsToRows(\r\n                [\"date\"].concat(plotPageValues.x),\r\n                [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, margin: {b: 20}}}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink\r\n                        filename={\"BNF_cycle.csv\"}\r\n                        data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 40\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport FormFilterParameters from \"./FormFilterParameters\";\r\nimport UserData from \"./UserData\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {validation} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        fixedDelta: 0.1,\r\n        deltaSelect: 2,\r\n        demean: 'sm',\r\n        iterativeBackcasting: true,\r\n        isAutomaticWindow: false,\r\n        rollingWindow: 40,\r\n        periodicity: 'q', // periodicity\r\n        startDate: null,\r\n        transform: false, // transforms to data before bnf\r\n        dCode: 'nd',\r\n        pCode: 'np',\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    loading = true;\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n    bnfUserSpecifiedDataSlug = \"/bnf/user-specified-time-series\";\r\n    bnfFredDataSlug = \"/bnf/fred-time-series\";\r\n    fredDataSlug = \"/fred-time-series\";\r\n\r\n    static confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\n    static colsToRows = (...columns) => {\r\n\r\n        columns = columns.filter(x => x !== undefined)\r\n\r\n        // Pre-condition: All arrays are same length\r\n        const\r\n            rowLength = columns.length,\r\n            colLength = columns[0].length;\r\n\r\n        const retArr = [];\r\n\r\n        for (let c = 0; c < colLength; c++) {\r\n            const row = [];\r\n            for (let r = 0; r < rowLength; r++) {\r\n                row.push(columns[r][c]);\r\n            }\r\n            retArr.push(row)\r\n        }\r\n\r\n        return retArr;\r\n\r\n\r\n    };\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoad = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            [\"errorMessage\"]: {\r\n                ...this.state.errorMessage,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        console.log(e.target.value)\r\n        if (isNaN(e.target.value)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n        } else if (e.target.value < validation[input].min) {\r\n            this.setErrorMessage(input, `too small. must be ≥ ${validation[input].min}`);\r\n        } else if (e.target.value > validation[input].max) {\r\n            this.setErrorMessage(input, `too large. must be ≤ ${validation[input].max}`);\r\n        } else {\r\n            let state = {...this.state};\r\n            delete state[\"errorMessage\"][input];\r\n            this.setState(state);\r\n        }\r\n        this.handleChange(input)(e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        if (e.target.value % 1 !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n        }\r\n        this.handleNumberFieldChange(input)(e);\r\n    }\r\n\r\n    getResults = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n        const statePairToParam = (paramName, currPair) =>\r\n            paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\n        const paramStr =\r\n            [['window', this.state.rollingWindow],\r\n                ['delta_select', this.state.deltaSelect],\r\n                ['fixed_delta', this.state.fixedDelta],\r\n                ['ib', this.state.iterativeBackcasting],\r\n                ['demean', this.state.demean],\r\n                ['processed_y', this.state.y]].concat(\r\n                [['transform', this.state.transform]].concat(\r\n                    this.state.transform ? [\r\n                            ['p_code', this.state.pCode],\r\n                            ['d_code', this.state.dCode],\r\n                            ['take_log', this.state.takeLog]]\r\n                        : []\r\n                )\r\n            )\r\n                .reduce(statePairToParam, '?');\r\n\r\n        const finalURL = this.baseBackendURL + this.bnfUserSpecifiedDataSlug + paramStr\r\n\r\n        console.log(finalURL)\r\n\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoad();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.periodicity !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.periodicity, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: UserForm.confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: UserForm.confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {\r\n            x,\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            periodicity,\r\n            startDate,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            dispCycleCI,\r\n            cycleCILB,\r\n            cycleCIUB,\r\n            errorMessage,\r\n        } = this.state;\r\n        const values = {\r\n            y,\r\n            unprocessedY,\r\n            startDate,\r\n            periodicity,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            dispCycleCI,\r\n        };\r\n\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, periodicity, startDate}\r\n\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <UserData\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                values={values}\r\n                            />\r\n\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading === null ?\r\n                                        <Error\r\n                                            tagName={\"During the running of the BN filter a problem occurred. Please check that the inputs are appropriate.\"}\r\n                                            close={() => {\r\n                                                this.setState({loading: false})\r\n                                            }}/>\r\n                                        : null}\r\n\r\n                                    <FormFilterParameters\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoad}\r\n                                        handleChange={this.handleChange}\r\n                                        handleNumberFieldChange={this.handleNumberFieldChange}\r\n                                        handleIntegerNumberFieldChange={this.handleIntegerNumberFieldChange}\r\n                                        handleCheckboxChange={this.handleCheckboxChange}\r\n                                        getResults={this.getResults}\r\n                                        values={values}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return Loading();\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserForm","import './styles/App.css';\r\nimport UserForm from './components/UserForm';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <UserForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}