{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/Error.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","createMenuItems","option","map","item","MenuItem","text","Error","Alert","severity","onClose","close","tagName","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","x","_this$props","getResults","getFREDResults","cancelLoad","console","log","dataInputType","back","prevStep","preAnalysisTransformations","_this$props2","handlers","handleChange","handleCheckboxChange","Fragment","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","alignItems","spacing","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","minHeight","loading","components_Error","target","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","FREDDataForm","state","mnemonic","isBadMnemonic","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","status","setErrorMessage","json","result","startDate","Date","endDate","deleteErrorMessage","catch","stop","mnemonicInput","FormGroup","row","JoinedTextField","color","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","rel","href","pickers_CustomDatePicker","startDateFRED","endDateFRED","marginBottom","marginTop","dispCycleCI","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesUserData","valuesFREDData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","textDecoration","filename","getCSVData","Loading","DateS","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","YearlyDate","QuarterlyDate","MonthlyDate","WeeklyDate","packWithZero","d","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","errorMessage","cancelLoading","input","defineProperty","message","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","bnfParamArr","getResultsForFREDData","_callee2","_context2","bnfFredDataSlug","cycleRes","Number","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee4","_context4","replace","split","bnfUserSpecifiedDataSlug","_callee3","_context3","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97457e7e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series of your choosing to be pasted into a field, or</li>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport Error from \"./Error\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && !this.isDisabled[field]();\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, values, cancelLoad} = this.props;\r\n\r\n        console.log(\"errors\", this.errorsDisplayedCount());\r\n\r\n        if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\"){\r\n                getFREDResults();\r\n            } else if (values.dataInputType === \"USER\"){\r\n                getResults();\r\n            }\r\n            this.props.nextStep();\r\n        }\r\n        else {\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider light><FormControl variant=\"standard\">\r\n                        <FormControlLabel\r\n                            label={<Typography\r\n                                style={{fontSize: 'x-large'}}>Transformations</Typography>}\r\n                            title=\"Transformations are applied in the order below and are done prior to estimation. Check this box to apply them.\"\r\n                            control={<Checkbox\r\n                                onChange={handleCheckboxChange('transform')}\r\n                                // style={{transform: \"scale(1.25)\"}}\r\n                                checked={values.transform}/>}\r\n                        />\r\n                    </FormControl></Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    defaultValue={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 290}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning method\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer.\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={\"During the running of the BN filter a problem occurred. Please check that the inputs are appropriate.\"}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n    // const [startDate, setStartDate] = React.useState(props.startDate);\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row)\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nexport {colsToRows, confIntZip, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        isBadMnemonic: this.props.errors['mnemonic'],\r\n        loading: false,\r\n    }\r\n\r\n\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.setState(\r\n                            {\r\n                                isBadMnemonic: true,\r\n                                loading: false,\r\n                                });\r\n                        this.props.setErrorMessage(\"mnemonic\", \"The mnemonic is not available\")\r\n\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        startDate = new Date(result[\"start_date\"]),\r\n                        endDate = new Date(result[\"end_date\"]);\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        isBadMnemonic: false,\r\n                    });\r\n                    this.props.deleteErrorMessage(\"mnemonic\")\r\n                    this.props.handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    this.props.handleChange('startDateFRED')({target: {value: startDate}});\r\n                    this.props.handleChange('endDateFRED')({target: {value: endDate}});\r\n                    this.props.handleChange('minDate')({target: {value: startDate}});\r\n                    this.props.handleChange('maxDate')({target: {value: endDate}});\r\n                    this.props.handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    this.props.handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const noText = () => this.props.errors[\"mnemonic\"] === undefined && this.props.values.mnemonic === \"\"\r\n        const mnemonicHelperText = () => {\r\n            if (noText()) {\r\n                return \"​\"\r\n            }\r\n            else if(this.props.errors['mnemonic'] !== undefined) {\r\n                return this.props.errors['mnemonic']\r\n            } else return \"The mnemonic is available\"\r\n        }\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         color={this.props.errors[\"mnemonic\"] === undefined && this.props.values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={this.props.errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={(e) => this.setState({mnemonic: e.target.value}) }\r\n                                         defaultValue={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <Divider light\r\n                             title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                             style={{fontSize: 'large'}}>Options</Divider>\r\n\r\n                    <Grid container direction=\"column\" sx={{minHeight: 350,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: average)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    defaultValue={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below. Each observation must start on the next line. Pasting a time series from a CSV will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={handleChange('unprocessedY')}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers\r\n                    // (newline or line break not functioning in Safari)\r\n                    placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    defaultValue={values.unprocessedY}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"450px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <Divider light\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                defaultValue={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = (e) => {\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => this.props.errors[\"mnemonic\"] !== undefined && this.props.valuesUserData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => this.props.errors[\"unprocessedY\"] !== undefined && this.props.valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) this.props.deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) this.props.deleteErrorMessage(\"unprocessedY\");\r\n\r\n        this.props.handleChange('dataInputType')(e);\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}/>\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.props.nextStep}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [\"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'}}}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateS extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new YearlyDate(date)\r\n            case \"q\":\r\n                return new QuarterlyDate(date)\r\n            case \"m\":\r\n                return new MonthlyDate(date)\r\n            case \"w\":\r\n                return new WeeklyDate(date)\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static packWithZero = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = (date) => `${date.getFullYear()}-${DateS.packWithZero(date.getMonth() + 1)}-${DateS.packWithZero(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {\r\n        throw new Error(\"Child class must implement this method\");\r\n    };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass YearlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new YearlyDate(this);\r\n        return new YearlyDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, YearlyDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {confIntZip, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: false, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            errorMessage: {\r\n                ...this.state.errorMessage,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let state = {...this.state};\r\n        delete state[\"errorMessage\"][input];\r\n        this.setState(state);\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateS.getTruncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateS.getTruncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.prevStep();\r\n                        this.cancelLoading();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoading();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            errorMessage,\r\n            loading,\r\n            serverError,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate,};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={errorMessage}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that there may be some small bugs as the website is still in development.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://github.com/crstnn\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}