{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/Error.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","minHeight","minWidth","margin","createMenuItems","option","map","item","MenuItem","text","Error","Alert","severity","onClose","close","tagName","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","x","_this$props","getResults","getFREDResults","handlers","cancelLoad","dataInputType","handleChange","target","back","prevStep","preAnalysisTransformations","_this$props2","handleCheckboxChange","Fragment","Divider","fontSize","Grid","container","direction","justifyContent","alignItems","spacing","xs","FormControl","FormControlLabel","label","title","control","Checkbox","size","onChange","checked","takeLog","disabled","transform","sx","InputLabel","Select","defaultValue","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","loading","components_Error","alertErrors","alertErrorType","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","fetchWithTimeout","_callee","url","controller","timeoutID","f","regenerator_default","wrap","_context","prev","next","AbortController","setTimeout","abort","fetch","signal","sent","clearTimeout","abrupt","stop","FREDDataForm","state","mnemonic","timeoutError","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","mark","setErrorMessage","deleteErrorMessage","responseSuccess","catch","then","response","status","json","result","console","log","startDate","Date","endDate","mnemonicInput","marginBottom","FormGroup","row","JoinedTextField","color","onKeyDown","keyCode","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","rel","href","pickers_CustomDatePicker","startDateFRED","endDateFRED","marginTop","dispCycleCI","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesFREDData","valuesUserData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","window","screen","l","b","t","pad","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","toFixed","react_csv","textDecoration","filename","getCSVData","Loading","DateS","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","AnnualDate","QuarterlyDate","MonthlyDate","WeeklyDate","toFixedTwoDigits","d","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","fieldErrorMessages","cancelLoading","input","defineProperty","message","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","bnfParamArr","fetchResultWithErrorHandling","_ref","_x","getResultsForFREDData","_callee3","_context3","bnfFredDataSlug","_callee2","_context2","cycleRes","Number","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee5","_context5","replace","split","bnfUserSpecifiedDataSlug","_callee4","_context4","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.37c8c07c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic, or</li>\r\n                            <li>A time series of your choosing, to be pasted into a field</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field, alertErrors} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport Error from \"./Error\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && !this.isDisabled[field]();\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length;\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, handlers, values, errors, cancelLoad} = this.props;\r\n\r\n        if (values.dataInputType === \"FRED\" && errors[\"mnemonic\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_M\"}});\r\n            cancelLoad();\r\n        } else if (values.dataInputType === \"USER\" && errors[\"unprocessedY\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_S\"}});\r\n            cancelLoad();\r\n        }\r\n        else if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\") getFREDResults();\r\n            else if (values.dataInputType === \"USER\") getResults();\r\n            this.props.nextStep();\r\n        } else {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_PARAM\"}});\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Transformations</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        const handleRollingWindowChange = () => {\r\n            return handleIntegerNumberFieldChange('rollingWindow');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{ width: 280 }}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title={(() => {\r\n                                        if(values.deltaSelect === 0) {\r\n                                            return \"Signal-to-Noise Ratio according to user input\";\r\n                                        } else if(values.deltaSelect === 1) {\r\n                                            return \"Signal-to-Noise Ratio according to benchmark KMW approach\";\r\n                                        } else if(values.deltaSelect === 2) {\r\n                                            return \"Signal-to-Noise Ratio according to KMW refinement\";\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{width: 140}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search (with grid increments of 0.0005)\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    defaultValue={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 280}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning\"\r\n                                    title={(() => {\r\n                                        if(values.demean === 'sm') {\r\n                                            return \"Estimate constant drift\";\r\n                                        } else if(values.demean === 'dm') {\r\n                                            return \"Estimate time-varying drift using rolling window\";\r\n                                        } else if(values.demean === 'idm') {\r\n                                            return \"Iteratively estimate time-varying drift removing cycle and using rolling window according to KMW refinement\";\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 140}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only active when using dynamic demeaning\"\r\n                                    onChange={handleRollingWindowChange()}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={alertErrors[this.props.values.alertErrorType]}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   title={props.title}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row)\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nasync function fetchWithTimeout(url) {\r\n    const\r\n        controller = new AbortController(),\r\n        timeoutID = setTimeout(() => controller.abort(), 20000), // 20 second timeout\r\n        f = await fetch(url, {signal: controller.signal});\r\n    clearTimeout(timeoutID);\r\n    return f\r\n}\r\n\r\nexport {colsToRows, confIntZip, fetchWithTimeout, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        loading: false,\r\n        timeoutError: false,\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n\r\n            const {handleChange, setErrorMessage, deleteErrorMessage, errors} = this.props;\r\n\r\n            const responseSuccess = () => {\r\n                this.setState(\r\n                    {\r\n                        timeoutError: false,\r\n                        loading: false,\r\n                    });\r\n            }\r\n\r\n            fetchWithTimeout(finalURL)\r\n                .catch(e => {\r\n                    this.setState(\r\n                        {\r\n                            timeoutError: true,\r\n                            loading: false,\r\n                        });\r\n                    setErrorMessage(\"mnemonic\", \"Internal error: Come back later\");\r\n                    throw e;\r\n                })\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        responseSuccess();\r\n                        setErrorMessage(\"mnemonic\", \"mnemonic is not available\");\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        startDate = new Date(result[\"start_date\"]),\r\n                        endDate = new Date(result[\"end_date\"]);\r\n\r\n                    deleteErrorMessage(\"mnemonic\");\r\n                    handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n                    handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    handleChange('startDateFRED')({target: {value: startDate}});\r\n                    handleChange('endDateFRED')({target: {value: endDate}});\r\n                    handleChange('minDate')({target: {value: startDate}});\r\n                    handleChange('maxDate')({target: {value: endDate}});\r\n                    responseSuccess();\r\n\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const {values, errors} = this.props;\r\n\r\n        const showText = () => !(errors[\"mnemonic\"] === undefined && values.mnemonic === \"\") || this.state.timeoutError === true;\r\n        const mnemonicHelperText = () => {\r\n            if (!showText()) {\r\n                return \"​\";\r\n            }\r\n            if(errors['mnemonic'] !== undefined) {\r\n                return errors['mnemonic'];\r\n            } else return \"mnemonic is available\";\r\n        };\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100, marginBottom: 1}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         title=\"Press enter or click 'check' to check the availability of the mnemonic\"\r\n                                         color={errors[\"mnemonic\"] === undefined && values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={e => this.setState({mnemonic: e.target.value}) }\r\n                                         onKeyDown={e => e.keyCode === 13 /* 'enter' key */ ? this.checkAvailability(e) : null}\r\n                                         defaultValue={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <div className=\"dataInformation\">\r\n                        <Divider\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Options</Divider>\r\n                    </div>\r\n                    <Grid container direction=\"column\" sx={{minHeight: 340,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              title={\"Series' start date (inclusive). Determined by FRED\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              title={\"Series' end date (inclusive). Determined by FRED\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: averaging)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    defaultValue={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to report 95% confidence intervals in graph and CSV\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    render() {\r\n        const {values, errors, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below. Each observation must start on the next line. Pasting a time series from a CSV will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={handleChange('unprocessedY')}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers\r\n                    // (newline or line break not functioning in Safari)\r\n                    placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    defaultValue={values.unprocessedY}\r\n                    error={errors[\"unprocessedY\"] !== undefined}\r\n                    helperText={errors[\"unprocessedY\"] !== undefined ?\r\n                        errors['unprocessedY'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"420px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <div className=\"dataInformation\">\r\n                <Divider\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      title={\"Series' start date (inclusive). The end date is determined based on frequency\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                defaultValue={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = (e) => {\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => this.props.errors[\"mnemonic\"] !== undefined && this.props.valuesFREDData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => this.props.errors[\"unprocessedY\"] !== undefined && this.props.valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) this.props.deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) this.props.deleteErrorMessage(\"unprocessedY\");\r\n\r\n        this.props.handleChange('dataInputType')(e);\r\n    }\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n        if (this.props.valuesFREDData.dataInputType === \"FRED\" && this.props.valuesFREDData.mnemonic === \"\") {\r\n            this.props.setErrorMessage(\"mnemonic\", \"mnemonic cannot be empty\");\r\n        }\r\n        if (this.props.valuesUserData.dataInputType === \"USER\" && this.props.valuesUserData.unprocessedY === \"\") {\r\n            this.props.setErrorMessage(\"unprocessedY\", \"time series field cannot be empty\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}\r\n                                        errors={errors}/>\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.continue}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [(plotPageValues.dataInputType === \"FRED\" ? `${plotPageValues.mnemonic}_` : \"\" ) + \"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'},\r\n                width: window.screen.width <= 700 ? 450 : 700, // fit to window size\r\n                margin: {l: 20, r: 20, b: 20, t: 20, pad: 5}\r\n                }}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc.toFixed(4) /* delta reported to 4 d.p. */} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateS extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new AnnualDate(date);\r\n            case \"q\":\r\n                return new QuarterlyDate(date);\r\n            case \"m\":\r\n                return new MonthlyDate(date);\r\n            case \"w\":\r\n                return new WeeklyDate(date);\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static toFixedTwoDigits = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = (date) => `${date.getFullYear()}-${DateS.toFixedTwoDigits(date.getMonth() + 1)}-${DateS.toFixedTwoDigits(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {\r\n        throw new Error(\"Child class must implement this method\");\r\n    };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass AnnualDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new AnnualDate(this);\r\n        return new AnnualDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, AnnualDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {confIntZip, fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: true, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        alertErrorType: null, // overarching alert text\r\n        fieldErrorMessages: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            fieldErrorMessages: {\r\n                ...this.state.fieldErrorMessages,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let state = {...this.state};\r\n        delete state[\"fieldErrorMessages\"][input];\r\n        this.setState(state);\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (field.freeText[input].min !== null && v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (field.freeText[input].max !== null && v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    fetchResultWithErrorHandling = async (finalURL) => {\r\n        return fetchWithTimeout(finalURL)\r\n            .catch(e => {\r\n                this.setState({alertErrorType: \"TIMEOUT\"});\r\n                this.prevStep();\r\n                this.cancelLoading();\r\n                throw e;\r\n            })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    this.setState({alertErrorType: \"SERVER\"});\r\n                    this.prevStep();\r\n                    this.cancelLoading();\r\n                    throw new Error(\"bad status\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateS.getTruncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateS.getTruncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            fieldErrorMessages,\r\n            loading,\r\n            serverError,\r\n            alertErrorType,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType,\r\n            alertErrorType,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate, dataInputType, mnemonic};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={fieldErrorMessages}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={fieldErrorMessages}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://github.com/crstnn\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}