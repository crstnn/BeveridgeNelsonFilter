{"version":3,"sources":["components/StartMenu.js","utils/createItems.js","components/Error.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","minHeight","minWidth","margin","createMenuItems","option","map","item","MenuItem","text","createHoverText","hoverText","forEach","x","fieldItem","Error","Alert","severity","onClose","close","tagName","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","_this$props","getResults","getFREDResults","handlers","cancelLoad","dataInputType","handleChange","target","back","prevStep","preAnalysisTransformations","_this$props2","handleCheckboxChange","Fragment","Divider","fontSize","Grid","container","direction","justifyContent","alignItems","spacing","xs","FormControl","FormControlLabel","label","title","control","Checkbox","size","onChange","checked","takeLog","disabled","transform","sx","InputLabel","Select","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","loading","components_Error","alertErrors","alertErrorType","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","console","log","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","fetchWithTimeout","_callee","url","controller","timeoutID","f","regenerator_default","wrap","_context","prev","next","AbortController","setTimeout","abort","fetch","signal","sent","clearTimeout","abrupt","stop","FREDDataForm","state","mnemonic","timeoutError","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","mark","setErrorMessage","deleteErrorMessage","responseSuccess","catch","then","response","status","json","result","parsedStartDate","split","Number","parsedEndDate","startDate","Date","endDate","mnemonicInput","marginBottom","FormGroup","row","JoinedTextField","color","onKeyDown","keyCode","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","rel","href","pickers_CustomDatePicker","startDateFRED","endDateFRED","marginTop","dispCycleCI","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","handleTimeSeriesChange","timeSeries","notNumberReg","RegExp","arrayFormReg","seriesFormReg","nonNumberTest","test","arrayFormTest","seriesFormTest","errorMessage","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesUserData","valuesFREDData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","window","screen","l","b","t","pad","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","toFixed","react_csv","textDecoration","filename","getCSVData","Loading","DateAbstract","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","AnnualDate","QuarterlyDate","MonthlyDate","WeeklyDate","toFixedTwoDigits","d","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","fieldErrorMessages","cancelLoading","input","defineProperty","message","fieldErrorMessagesTemp","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","handleChangeValidation","validationArr","bnfParamArr","fetchResultWithErrorHandling","_ref","_x","getResultsForFREDData","_callee3","_context3","bnfFredDataSlug","_callee2","_context2","cycleRes","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee5","_context5","replace","bnfUserSpecifiedDataSlug","_callee4","_context4","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","zIndex","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.aa051ff2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic, or</li>\r\n                            <li>A time series of your choosing, to be pasted into a field</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = option => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nconst createHoverText = option => {\r\n    const hoverText = {};\r\n    option.forEach(x => hoverText[x.value] = x.hoverText);\r\n    return fieldItem => hoverText[fieldItem];\r\n}\r\n\r\nexport {createMenuItems, createHoverText}","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field, alertErrors} from \"../config.json\";\r\nimport {createMenuItems, createHoverText} from \"../utils/createItems\";\r\nimport Error from \"./Error\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && (this.isDisabled[field] === undefined || !this.isDisabled[field]());\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length;\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, handlers, values, errors, cancelLoad} = this.props;\r\n\r\n        if (values.dataInputType === \"FRED\" && errors[\"mnemonic\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_M\"}});\r\n            cancelLoad();\r\n        } else if (values.dataInputType === \"USER\" && errors[\"unprocessedY\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_S\"}});\r\n            cancelLoad();\r\n        }\r\n        else if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\") getFREDResults();\r\n            else if (values.dataInputType === \"USER\") getResults();\r\n            this.props.nextStep();\r\n        } else {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_PARAM\"}});\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Transformations</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                value={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                value={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        const handleRollingWindowChange = () => {\r\n            return handleIntegerNumberFieldChange('rollingWindow');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{ width: 280 }}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title={createHoverText(field.optionField.deltaSelect.option)(values.deltaSelect)}\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    value={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{width: 140}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search (with grid increments of 0.0005)\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    value={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 280}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning\"\r\n                                    title={createHoverText(field.optionField.iterativeDynamicDemeaning.option)(values.demean)}\r\n                                    onChange={handleChange('demean')}\r\n                                    value={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 140}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only active when using dynamic demeaning. Upper bound is two less than the number of observations\"\r\n                                    onChange={handleRollingWindowChange()}\r\n                                    value={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={alertErrors[this.props.values.alertErrorType]}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n\r\n    const handleDateChange = newValue => {\r\n        console.log(\"pre-handleDateChange: \", newValue)\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleDateChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   title={props.title}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row);\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&';\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nasync function fetchWithTimeout(url) {\r\n    const\r\n        controller = new AbortController(),\r\n        timeoutID = setTimeout(() => controller.abort(), 20000), // 20 second timeout\r\n        f = await fetch(url, {signal: controller.signal});\r\n    clearTimeout(timeoutID);\r\n    return f;\r\n}\r\n\r\nexport {colsToRows, confIntZip, fetchWithTimeout, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport {createMenuItems} from \"../utils/createItems\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        loading: false,\r\n        timeoutError: false,\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n\r\n            const {handleChange, setErrorMessage, deleteErrorMessage} = this.props;\r\n\r\n            const responseSuccess = () => {\r\n                this.setState(\r\n                    {\r\n                        timeoutError: false,\r\n                        loading: false,\r\n                    });\r\n            }\r\n\r\n            fetchWithTimeout(finalURL)\r\n                .catch(e => {\r\n                    this.setState(\r\n                        {\r\n                            timeoutError: true,\r\n                            loading: false,\r\n                        });\r\n                    setErrorMessage(\"mnemonic\", \"Internal error: Come back later\");\r\n                    throw e;\r\n                })\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        responseSuccess();\r\n                        setErrorMessage(\"mnemonic\", \"mnemonic is not available\");\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        parsedStartDate = result[\"start_date\"].split(\"-\").map(x => Number(x)),\r\n                        parsedEndDate = result[\"end_date\"].split(\"-\").map(x => Number(x)),\r\n                        startDate = new Date(parsedStartDate[0], parsedStartDate[1] - 1, parsedStartDate[2]),\r\n                        endDate = new Date(parsedEndDate[0], parsedEndDate[1] - 1, parsedEndDate[2]);\r\n\r\n                    console.log(\"response: startDate: \", startDate)\r\n                    console.log(\"response: endDate: \", endDate)\r\n\r\n                    deleteErrorMessage(\"mnemonic\");\r\n                    handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n                    handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    handleChange('startDateFRED')({target: {value: startDate}});\r\n                    handleChange('endDateFRED')({target: {value: endDate}});\r\n                    handleChange('minDate')({target: {value: startDate}});\r\n                    handleChange('maxDate')({target: {value: endDate}});\r\n                    responseSuccess();\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const\r\n            {values, errors} = this.props,\r\n            showText = () => !(errors[\"mnemonic\"] === undefined && values.mnemonic === \"\") || this.state.timeoutError === true,\r\n            mnemonicHelperText = () => {\r\n                if (!showText()) return \"​\";\r\n                return errors['mnemonic'] !== undefined ? errors['mnemonic'] : \"mnemonic is available\";\r\n            };\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100, marginBottom: 1}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         title=\"Press enter or click 'check' to check the availability of the mnemonic\"\r\n                                         color={errors[\"mnemonic\"] === undefined && values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={e => this.setState({mnemonic: e.target.value}) }\r\n                                         onKeyDown={e => e.keyCode === 13 /* 'enter' key */ ? this.checkAvailability(e) : null}\r\n                                         value={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <div className=\"dataInformation\">\r\n                        <Divider\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Options</Divider>\r\n                    </div>\r\n                    <Grid container direction=\"column\" sx={{minHeight: 340,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              title={\"Series' start date (inclusive). Determined by FRED\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              title={\"Series' end date (inclusive). Determined by FRED\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: averaging)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    value={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to report 95% confidence intervals in graph and CSV\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport {createMenuItems} from \"../utils/createItems\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    handleTimeSeriesChange = e => {\r\n        e.preventDefault();\r\n        const\r\n            timeSeries = e.target.value,\r\n            {setErrorMessage, deleteErrorMessage, handleChange} = this.props;\r\n\r\n        const\r\n            notNumberReg = new RegExp(/[^\\d.,\\s]+/),\r\n            arrayFormReg = new RegExp(/^((\\d*(.\\d+)?),\\s*)+(\\d*(.\\d+)?)\\s*$/),\r\n            seriesFormReg = new RegExp(/^((\\d*(.\\d+)?)(\\r\\n|\\n|\\r))*((\\d*(.\\d+)?)(\\r\\n|\\n|\\r)?)$/);\r\n\r\n        const\r\n            nonNumberTest = notNumberReg.test(timeSeries),\r\n            arrayFormTest = arrayFormReg.test(timeSeries),\r\n            seriesFormTest = seriesFormReg.test(timeSeries);\r\n\r\n        let errorMessage = null;\r\n\r\n        if (timeSeries === \"\" || arrayFormTest || seriesFormTest) {\r\n            deleteErrorMessage(\"unprocessedY\");\r\n        }\r\n        else if (nonNumberTest) {\r\n            errorMessage = \"only accepts numbers, commas, and periods\";\r\n        } else if (!arrayFormTest && !seriesFormTest) {\r\n            errorMessage = \"bad input format\";\r\n        }\r\n        if (errorMessage !== null) setErrorMessage(\"unprocessedY\", errorMessage);\r\n\r\n        handleChange('unprocessedY')(e);\r\n    }\r\n\r\n    render() {\r\n        const {values, errors, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below.\r\n                    Pasting a time series from a CSV or array will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={this.handleTimeSeriesChange}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers (newline/line break not functioning in Safari)\r\n                    placeholder={\"e.g. \" + (new Array(100).join(\" \")) +\r\n                                \"101.2, 104.8, 102.4, ...\" + (new Array(100).join(\" \")) +\r\n                                \"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    value={values.unprocessedY}\r\n                    error={errors[\"unprocessedY\"] !== undefined}\r\n                    helperText={errors[\"unprocessedY\"] !== undefined ?\r\n                        errors['unprocessedY'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"420px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <div className=\"dataInformation\">\r\n                <Divider\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      title={\"Series' start date (inclusive). The end date is determined based on frequency\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                value={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = e => {\r\n        const {errors, valuesUserData, valuesFREDData, handleChange, deleteErrorMessage,} = this.props;\r\n\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => errors[\"mnemonic\"] !== undefined && valuesFREDData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => errors[\"unprocessedY\"] !== undefined && valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) deleteErrorMessage(\"unprocessedY\");\r\n\r\n        handleChange('dataInputType')(e);\r\n    }\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {valuesUserData, valuesFREDData, setErrorMessage, nextStep,} = this.props;\r\n        nextStep();\r\n        if (valuesFREDData.dataInputType === \"FRED\" && valuesFREDData.mnemonic === \"\") {\r\n            setErrorMessage(\"mnemonic\", \"mnemonic cannot be empty\");\r\n        }\r\n        if (valuesUserData.dataInputType === \"USER\" && valuesUserData.unprocessedY === \"\") {\r\n            setErrorMessage(\"unprocessedY\", \"time series field cannot be empty\");\r\n        }\r\n        console.log(valuesUserData)\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        setErrorMessage={setErrorMessage}\r\n                                        deleteErrorMessage={deleteErrorMessage}\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}\r\n                                        errors={errors}\r\n                                    />\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.continue}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [(plotPageValues.dataInputType === \"FRED\" ? `${plotPageValues.mnemonic}_` : \"\" ) + \"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'},\r\n                width: window.screen.width <= 700 ? 450 : 700, // fit to window size\r\n                margin: {l: 20, r: 20, b: 20, t: 20, pad: 5}\r\n                }}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc.toFixed(4) /* delta reported to 4 d.p. */} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateAbstract extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new AnnualDate(date);\r\n            case \"q\":\r\n                return new QuarterlyDate(date);\r\n            case \"m\":\r\n                return new MonthlyDate(date);\r\n            case \"w\":\r\n                return new WeeklyDate(date);\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static toFixedTwoDigits = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = date => `${date.getFullYear()}-${DateAbstract.toFixedTwoDigits(date.getMonth() + 1)}-${DateAbstract.toFixedTwoDigits(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {throw new Error(\"Child class must implement this method\");};\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass AnnualDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new AnnualDate(this);\r\n        return new AnnualDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateAbstract, WeeklyDate, MonthlyDate, QuarterlyDate, AnnualDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateAbstract} from \"../utils/Date\";\r\nimport {confIntZip, fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: true, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        alertErrorType: null, // overarching alert text\r\n        fieldErrorMessages: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            fieldErrorMessages: {\r\n                ...this.state.fieldErrorMessages,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let fieldErrorMessagesTemp = {...this.state.fieldErrorMessages};\r\n        delete fieldErrorMessagesTemp[input];\r\n        this.setState({fieldErrorMessages : fieldErrorMessagesTemp});\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (field.freeText[input].min !== null && v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (field.freeText[input].max !== null && v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleChangeValidation = input => e => validationArr => {\r\n        this.validateField(validationArr, input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    fetchResultWithErrorHandling = async (finalURL) => {\r\n        return fetchWithTimeout(finalURL)\r\n            .catch(e => {\r\n                this.setState({alertErrorType: \"TIMEOUT\"});\r\n                this.prevStep();\r\n                this.cancelLoading();\r\n                throw e;\r\n            })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    this.setState({alertErrorType: \"SERVER\"});\r\n                    this.prevStep();\r\n                    this.cancelLoading();\r\n                    throw new Error(\"bad status\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateAbstract.getTruncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateAbstract.getTruncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateAbstract.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateAbstract.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            fieldErrorMessages,\r\n            loading,\r\n            serverError,\r\n            alertErrorType,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType,\r\n            alertErrorType,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate, dataInputType, mnemonic};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={fieldErrorMessages}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={fieldErrorMessages}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://crstnn.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n        zIndex: 1,\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}