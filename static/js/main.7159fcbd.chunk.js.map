{"version":3,"sources":["components/StartMenu.js","components/FormFilterParameters.js","pickers/CustomDatePicker.js","components/UserData.js","components/RenderedPlot.js","components/Loading.js","components/Error.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","FormFilterParameters","_this$props","getResults","cancelLoad","errors","keys","back","prevStep","preAnalysisTransformations","_this$props2","values","handleChange","handleCheckboxChange","Fragment","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","spacing","alignItems","item","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","MenuItem","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","isRollingWindowDisabled","isAutomaticWindow","demean","isFixedDeltaDisabled","deltaSelect","width","display","paddingBottom","TextField","fixedDelta","error","undefined","helperText","rollingWindow","CustomDatePicker","_React$useState","React","useState","Date","_React$useState2","slicedToArray","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","InputProps","newValue","isDisabled","renderInput","params","UserData","getState","m","paddingRight","multiline","rows","InputLabelProps","shrink","placeholder","join","unprocessedY","minHeight","paddingTop","pickers_CustomDatePicker","periodicity","marginBottom","marginTop","dispCycleCI","headingFormControlLabel","RenderedPlot","plotPageValues","UserForm","colsToRows","cycle","cycleCILB","cycleCIUB","xAxis","from","_","i","react_plotly_default","layout","autosize","b","data","x","y","type","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","filename","getCSVData","Loading","react_loader_spinner_esm","height","Error","Alert","severity","onClose","close","tagName","state","step","iterativeBackcasting","dateObj","cycleCI","loading","errorMessage","baseBackendURL","bnfUserSpecifiedDataSlug","bnfFredDataSlug","fredDataSlug","setState","input","defineProperty","target","setErrorMessage","message","objectSpread","console","log","isNaN","validationConfig","min","max","asyncToGenerator","regenerator_default","mark","_callee2","processedY","statePairToParam","paramStr","finalURL","wrap","_context2","prev","next","replace","split","filter","paramName","currPair","toString","reduce","_callee","_context","fetch","then","response","status","json","result","cycleRes","map","Number","ciRes","deltaRes","confIntZip","catch","stop","_this2","_this$state","components_UserData","components_Error","components_FormFilterParameters","components_RenderedPlot","components_StartMenu","ci","bound","_len2","columns","_key2","rowLength","colLength","retArr","c","row","r","push","App","rel","href","components_UserForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7159fcbd.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>We will guide you through the steps to perform trend-cycle decomposition on either (i) a time\r\n                        series of your choosing to be pasted into a field or (ii) a time series from the Federal Reserve\r\n                        Economic Database (FRED) using its mnemonic. Note that there is additional information provided\r\n                        when hovering over the options in the subsequent pages. The cycle is reported and can be\r\n                        downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\n\r\nexport class FormFilterParameters extends Component {\r\n\r\n    continue = e => {\r\n        const {getResults, cancelLoad, errors} = this.props;\r\n        if (Object.keys(errors).length === 0) {\r\n            getResults();\r\n        } else {\r\n            cancelLoad();\r\n        }\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return(\r\n            <>\r\n            <div className=\"information\">\r\n                <Divider light><FormControl variant=\"standard\">\r\n                    <FormControlLabel\r\n                        label={<Typography\r\n                            style={{fontSize: 'x-large'}}>Pre-Analysis Transformations</Typography>}\r\n                        title=\"Transformations are applied in the order below and are done prior to the BN Filter run\"\r\n                        control={<Checkbox\r\n                            onChange={handleCheckboxChange('transform')}\r\n                            checked={values.transform}/>}\r\n                    />\r\n                </FormControl></Divider>\r\n            </div>\r\n        <Grid container direction=\"column\" justifyContent=\"space-evenly\" spacing={4}\r\n              alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n                <FormControl variant=\"standard\">\r\n                    <FormControlLabel label=\"Natural Logarithm\"\r\n                                      title=\"Logarithm to the base of Euler's number\"\r\n                                      control={<Checkbox\r\n                                          size=\"small\"\r\n                                          onChange={handleCheckboxChange('takeLog')}\r\n                                          checked={values.takeLog}\r\n                                          disabled={!values.transform}/>}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                    <InputLabel>Differencing Method</InputLabel>\r\n                    <Select\r\n                        title=\"Differencing method applied\"\r\n                        onChange={handleChange('dCode')}\r\n                        defaultValue={values.dCode}\r\n                        disabled={!values.transform}\r\n                    >\r\n                        <MenuItem value={'nd'}>No Differencing (Levels)</MenuItem>\r\n                        <MenuItem value={'d1'}>1 Period Difference</MenuItem>\r\n                        <MenuItem value={'d4'}>4 Period Difference (for Quarterly Data)</MenuItem>\r\n                        <MenuItem value={'d12'}>12 Period Difference (for Monthly Data)</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                    <InputLabel>Computed Percentages</InputLabel>\r\n                    <Select\r\n                        title=\"Percentage multiple applied\"\r\n                        onChange={handleChange('pCode')}\r\n                        defaultValue={values.pCode}\r\n                        disabled={!values.transform}\r\n                    >\r\n                        <MenuItem value={'np'}>No Change</MenuItem>\r\n                        <MenuItem value={'p1'}>Multiply by 100</MenuItem>\r\n                        <MenuItem value={'p4'}>Multiply by 400 (Annualized Quarterly Rate)</MenuItem>\r\n                        <MenuItem value={'p12'}>Multiply by 1200 (Annualized Monthly Rate)</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const {values, handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange, errors} = this.props;\r\n\r\n        const\r\n            isRollingWindowDisabled = values.isAutomaticWindow || values.demean === \"sm\",\r\n            isFixedDeltaDisabled = values.deltaSelect !== 0;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>BN Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={4}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >\r\n                                    <MenuItem value={0}>Fixed Delta</MenuItem>\r\n                                    <MenuItem value={1}>Maximize Amplitude-to-Noise Ratio</MenuItem>\r\n                                    <MenuItem value={2}>Minimize Stochastic Trend Volatility</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 50}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleNumberFieldChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={isFixedDeltaDisabled}\r\n                                    error={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled}\r\n                                    helperText={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled ?\r\n                                        errors['fixedDelta'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 250}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Iterative Dynamic Demeaning\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >\r\n                                    <MenuItem value={\"sm\"}>Constant (Static Demeaning)</MenuItem>\r\n                                    <MenuItem value={\"dm\"}>Dynamic Demeaning</MenuItem>\r\n                                    <MenuItem value={\"idm\"}>Iterative Dynamic Demeaning</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 100}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={isRollingWindowDisabled}\r\n                                    error={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled}\r\n                                    helperText={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled ?\r\n                                        errors['rollingWindow'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.preAnalysisTransformations()}\r\n                {this.bnFilterParameters()}\r\n                <br/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default FormFilterParameters","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Time Series Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={value}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\n\r\nexport class UserData extends Component {\r\n\r\n\r\n    continue = e => {\r\n\r\n        e.preventDefault();\r\n        // process form\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange, getState} = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Data and Transformations</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. The next observation must start on the next line (and\r\n                        so on). For example, pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            // Hacky newline fix that works for all browsers\r\n                            // (newline or line break not functioning in Safari)\r\n                            placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Display Options</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop: 4}}\r\n                              justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={4}>\r\n                                <CustomDatePicker isDisabled={getState(\"periodicity\") === 0}/>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >\r\n                                        <MenuItem value={'y'}>Yearly</MenuItem>\r\n                                        <MenuItem value={'q'}>Quarterly</MenuItem>\r\n                                        <MenuItem value={'m'}>Monthly</MenuItem>\r\n                                        <MenuItem value={'w'}>Weekly</MenuItem>\r\n                                        <MenuItem value={0}>Undated/Unspecified</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                    <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                      title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                          checked={values.dispCycleCI}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 30\r\n\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default UserData","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return UserForm.colsToRows(\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        const xAxis = Array.from({length: plotPageValues.cycle.length}, (_, i) => i + 1);\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, margin: {b: 20}}}\r\n                  data={[\r\n\r\n                      {\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink\r\n                        filename={\"BNF_cycle.csv\"}\r\n                        data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 40\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport FormFilterParameters from \"./FormFilterParameters\";\r\nimport UserData from \"./UserData\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport validationConfig from \"../validationConfig.json\";\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        y: [], // time series\r\n        fixedDelta: 0.1,\r\n        deltaSelect: 2,\r\n        demean: 'sm',\r\n        iterativeBackcasting: true,\r\n        isAutomaticWindow: false,\r\n        rollingWindow: 40,\r\n        periodicity: 'q', // periodicity\r\n        dateObj: Object(),\r\n        transform: false, // transforms to data before bnf\r\n        dCode: 'nd',\r\n        pCode: 'np',\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    loading = true;\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n    bnfUserSpecifiedDataSlug = \"/bnf/user-specified-time-series\";\r\n    bnfFredDataSlug = \"/bnf/fred-time-series\";\r\n    fredDataSlug = \"/fred-time-series\";\r\n\r\n    static confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\n    static colsToRows = (...columns) => {\r\n\r\n        columns = columns.filter(x => x !== undefined)\r\n\r\n        // Pre-condition: All arrays are same length\r\n        const\r\n            rowLength = columns.length,\r\n            colLength = columns[0].length;\r\n\r\n        const retArr = [];\r\n\r\n        for (let c = 0; c < colLength; c++) {\r\n            const row = [];\r\n            for (let r = 0; r < rowLength; r++) {\r\n                row.push(columns[r][c]);\r\n            }\r\n            retArr.push(row)\r\n        }\r\n\r\n        return retArr;\r\n\r\n\r\n    };\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoad = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({[\"errorMessage\"]: {...this.state.errorMessage,\r\n                [input]: message\r\n            }});\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        console.log(e.target.value)\r\n        if (isNaN(e.target.value)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n        }\r\n        else if (e.target.value < validationConfig[input].min){\r\n            this.setErrorMessage(input, `too small. must be ≥ ${validationConfig[input].min}`);\r\n        }\r\n        else if (e.target.value > validationConfig[input].max) {\r\n            this.setErrorMessage(input, `too large. must be ≤ ${validationConfig[input].max}`);\r\n        }\r\n        else{\r\n            let state = {...this.state};\r\n            delete state[\"errorMessage\"][input];\r\n            this.setState(state);\r\n        }\r\n        this.handleChange(input)(e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        if (e.target.value % 1 !== 0) {\r\n            this.setErrorMessage(input,\"must be an integer\");\r\n        }\r\n        this.handleNumberFieldChange(input)(e);\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    getState = input => {\r\n        return this.state[input];\r\n    }\r\n\r\n\r\n    getResults = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        const processedY = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n        console.log(processedY)\r\n\r\n        const statePairToParam = (paramName, currPair) =>\r\n            paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\n        const paramStr =\r\n            [['window', this.state.rollingWindow],\r\n                ['delta_select', this.state.deltaSelect],\r\n                ['fixed_delta', this.state.fixedDelta],\r\n                ['ib', this.state.iterativeBackcasting],\r\n                ['demean', this.state.demean],\r\n                ['processed_y', processedY]].concat(\r\n                [['transform', this.state.transform]].concat(\r\n                    this.state.transform ? [\r\n                            ['p_code', this.state.pCode],\r\n                            ['d_code', this.state.dCode],\r\n                            ['take_log', this.state.takeLog]]\r\n                        : []\r\n                )\r\n            )\r\n                .reduce(statePairToParam, '?');\r\n\r\n        const finalURL = this.baseBackendURL + this.bnfUserSpecifiedDataSlug + paramStr\r\n\r\n        console.log(finalURL)\r\n\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoad();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: UserForm.confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: UserForm.confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            periodicity,\r\n            dateObj,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            dispCycleCI,\r\n            cycleCILB,\r\n            cycleCIUB,\r\n            errorMessage,\r\n        } = this.state;\r\n        const values = {\r\n            y,\r\n            unprocessedY,\r\n            periodicity,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            dispCycleCI,\r\n        };\r\n\r\n        const plotPageValues = {y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, periodicity, dateObj}\r\n\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <UserData\r\n                                    nextStep={this.nextStep}\r\n                                    prevStep={this.prevStep}\r\n                                    handleChange={this.handleChange}\r\n                                    handleCheckboxChange={this.handleCheckboxChange}\r\n                                    getState={this.getState}\r\n                                    values={values}\r\n                                    />\r\n\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading === null ?\r\n                                        <Error tagName={\"During the running of the BN filter a problem occurred. Please check that the inputs are appropriate.\"}\r\n                                               close={() => {this.setState({loading: false})}}/>\r\n                                        : null}\r\n\r\n                                    <FormFilterParameters\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoad}\r\n                                        handleChange={this.handleChange}\r\n                                        handleNumberFieldChange={this.handleNumberFieldChange}\r\n                                        handleIntegerNumberFieldChange={this.handleIntegerNumberFieldChange}\r\n                                        handleCheckboxChange={this.handleCheckboxChange}\r\n                                        getResults={this.getResults}\r\n                                        values={values}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return Loading();\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    handleChange={this.handleChange}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                    nextStep={this.nextStep}\r\n                                    handleChange={this.handleChange}\r\n                                    />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserForm","import './styles/App.css';\r\nimport UserForm from './components/UserForm';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <UserForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}