{"version":3,"sources":["components/StartMenu.js","components/FormFilterParameters.js","pickers/CustomDatePicker.js","components/UserData.js","components/RenderedPlot.js","components/Loading.js","components/ServerError.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","FormFilterParameters","_this$props","getResults","cancelLoad","errors","keys","back","prevStep","_this$props2","values","handleChange","handleNumberFieldChange","handleIntegerNumberFieldChange","handleCheckboxChange","isRollingWindowDisabled","isAutomaticWindow","demean","isFixedDeltaDisabled","deltaSelect","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","spacing","alignItems","item","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","MenuItem","pCode","width","display","paddingBottom","TextField","fixedDelta","error","undefined","helperText","rollingWindow","CustomDatePicker","_React$useState","React","useState","Date","_React$useState2","slicedToArray","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","InputProps","newValue","isDisabled","renderInput","params","UserData","getState","Fragment","m","paddingRight","multiline","rows","InputLabelProps","shrink","placeholder","join","unprocessedY","minHeight","paddingTop","pickers_CustomDatePicker","periodicity","marginBottom","marginTop","dispCycleCI","headingFormControlLabel","RenderedPlot","plotPageValues","UserForm","colsToRows","cycle","cycleCILB","cycleCIUB","xAxis","from","_","i","react_plotly_default","layout","autosize","b","data","x","y","type","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","filename","getCSVData","Loading","react_loader_spinner_esm","height","ServerError","Alert","severity","onClose","close","state","step","iterativeBackcasting","dateObj","cycleCI","loading","errorMessage","baseBackendURL","bnfUserSpecifiedDataSlug","bnfFredDataSlug","fredDataSlug","setState","input","defineProperty","target","setErrorMessage","message","objectSpread","console","log","isNaN","validationConfig","min","max","asyncToGenerator","regenerator_default","mark","_callee2","processedY","statePairToParam","paramStr","finalURL","wrap","_context2","prev","next","replace","split","filter","paramName","currPair","toString","reduce","_callee","_context","fetch","then","response","status","Error","json","result","cycleRes","map","Number","ciRes","deltaRes","confIntZip","catch","stop","_this2","_this$state","components_UserData","components_ServerError","components_FormFilterParameters","components_RenderedPlot","components_StartMenu","ci","bound","_len2","columns","_key2","rowLength","colLength","retArr","c","row","r","push","App","rel","href","components_UserForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b495ccca.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>We will guide you through the steps to perform trend-cycle decomposition on either (i) a time\r\n                        series of your choosing to be pasted into a field or (ii) a time series from the Federal Reserve\r\n                        Economic Database (FRED) using its mnemonic. Note that there is additional information provided\r\n                        when hovering over the options in the subsequent pages. The cycle is reported and can be\r\n                        downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\n\r\nexport class FormFilterParameters extends Component {\r\n\r\n    continue = e => {\r\n        const {getResults, cancelLoad, errors} = this.props;\r\n        if (Object.keys(errors).length === 0) {\r\n            getResults();\r\n        } else {\r\n            cancelLoad();\r\n        }\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange, handleCheckboxChange, errors} = this.props;\r\n\r\n        const\r\n            isRollingWindowDisabled = values.isAutomaticWindow || values.demean === \"sm\",\r\n            isFixedDeltaDisabled = values.deltaSelect !== 0;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <Divider light><FormControl variant=\"standard\">\r\n                        <FormControlLabel\r\n                            label={<Typography\r\n                                style={{fontSize: 'x-large'}}>Pre-Analysis Transformations</Typography>}\r\n                            title=\"Transformations are applied in the order below and are done prior to the BN Filter run\"\r\n                            control={<Checkbox\r\n                                onChange={handleCheckboxChange('transform')}\r\n                                checked={values.transform}/>}\r\n                        />\r\n                    </FormControl></Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" spacing={4}\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >\r\n                                <MenuItem value={'nd'}>No Differencing (Levels)</MenuItem>\r\n                                <MenuItem value={'d1'}>1 Period Difference</MenuItem>\r\n                                <MenuItem value={'d4'}>4 Period Difference (for Quarterly Data)</MenuItem>\r\n                                <MenuItem value={'d12'}>12 Period Difference (for Monthly Data)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Percentage multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >\r\n                                <MenuItem value={'np'}>No Change</MenuItem>\r\n                                <MenuItem value={'p1'}>Multiply by 100</MenuItem>\r\n                                <MenuItem value={'p4'}>Multiply by 400 (Annualized Quarterly Rate)</MenuItem>\r\n                                <MenuItem value={'p12'}>Multiply by 1200 (Annualized Monthly Rate)</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>BN Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" spacing={4}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >\r\n                                    <MenuItem value={0}>Fixed Delta</MenuItem>\r\n                                    <MenuItem value={1}>Maximize Amplitude-to-Noise Ratio</MenuItem>\r\n                                    <MenuItem value={2}>Minimize Stochastic Trend Volatility</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 50}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleNumberFieldChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={isFixedDeltaDisabled}\r\n                                    error={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled}\r\n                                    helperText={errors['fixedDelta'] !== undefined && !isFixedDeltaDisabled ?\r\n                                        errors['fixedDelta'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 250}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Iterative Dynamic Demeaning\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >\r\n                                    <MenuItem value={\"sm\"}>Constant (Static Demeaning)</MenuItem>\r\n                                    <MenuItem value={\"dm\"}>Dynamic Demeaning</MenuItem>\r\n                                    <MenuItem value={\"idm\"}>Iterative Dynamic Demeaning</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 100}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={isRollingWindowDisabled}\r\n                                    error={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled}\r\n                                    helperText={errors['rollingWindow'] !== undefined && !isRollingWindowDisabled ?\r\n                                                errors['rollingWindow'] : \"\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n                <br/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default FormFilterParameters","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Time Series Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={value}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\n\r\nexport class UserData extends Component {\r\n\r\n\r\n    continue = e => {\r\n\r\n        e.preventDefault();\r\n        // process form\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange, getState} = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Data and Transformations</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. The next observation must start on the next line (and\r\n                        so on). For example, pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            // Hacky newline fix that works for all browsers\r\n                            // (newline or line break not functioning in Safari)\r\n                            placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Display Options</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop: 4}}\r\n                              justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={4}>\r\n                                <CustomDatePicker isDisabled={getState(\"periodicity\") === 0}/>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >\r\n                                        <MenuItem value={'y'}>Yearly</MenuItem>\r\n                                        <MenuItem value={'q'}>Quarterly</MenuItem>\r\n                                        <MenuItem value={'m'}>Monthly</MenuItem>\r\n                                        <MenuItem value={'w'}>Weekly</MenuItem>\r\n                                        <MenuItem value={0}>Undated/Unspecified</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                    <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                      title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                          checked={values.dispCycleCI}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 30\r\n\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default UserData","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return UserForm.colsToRows(\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        const xAxis = Array.from({length: plotPageValues.cycle.length}, (_, i) => i + 1);\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, margin: {b: 20}}}\r\n                  data={[\r\n\r\n                      {\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink\r\n                        filename={\"BNF_cycle.csv\"}\r\n                        data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 40\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class ServerError extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    During the running of the BN filter a problem occurred.\r\n                    Please check that the inputs are appropriate.\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ServerError\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport FormFilterParameters from \"./FormFilterParameters\";\r\nimport UserData from \"./UserData\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport ServerError from \"./ServerError\";\r\nimport validationConfig from \"./../config.json\";\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        y: [], // time series\r\n        fixedDelta: 0.1,\r\n        deltaSelect: 2,\r\n        demean: 'sm',\r\n        iterativeBackcasting: true,\r\n        isAutomaticWindow: false,\r\n        rollingWindow: 40,\r\n        periodicity: 'q', // periodicity\r\n        dateObj: Object(),\r\n        transform: false, // transforms to data before bnf\r\n        dCode: 'nd',\r\n        pCode: 'np',\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    loading = true;\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n    bnfUserSpecifiedDataSlug = \"/bnf/user-specified-time-series\";\r\n    bnfFredDataSlug = \"/bnf/fred-time-series\";\r\n    fredDataSlug = \"/fred-time-series\";\r\n\r\n    static confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\n    static colsToRows = (...columns) => {\r\n\r\n        columns = columns.filter(x => x !== undefined)\r\n\r\n        // Pre-condition: All arrays are same length\r\n        const\r\n            rowLength = columns.length,\r\n            colLength = columns[0].length;\r\n\r\n        const retArr = [];\r\n\r\n        for (let c = 0; c < colLength; c++) {\r\n            const row = [];\r\n            for (let r = 0; r < rowLength; r++) {\r\n                row.push(columns[r][c]);\r\n            }\r\n            retArr.push(row)\r\n        }\r\n\r\n        return retArr;\r\n\r\n\r\n    };\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoad = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({[\"errorMessage\"]: {...this.state.errorMessage,\r\n                [input]: message\r\n            }});\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        console.log(e.target.value)\r\n        if (isNaN(e.target.value)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n        }\r\n        else if (e.target.value < validationConfig[input].min){\r\n            this.setErrorMessage(input, `too small. must be ≥ ${validationConfig[input].min}`);\r\n        }\r\n        else if (e.target.value > validationConfig[input].max) {\r\n            this.setErrorMessage(input, `too large. must be ≤ ${validationConfig[input].max}`);\r\n        }\r\n        else{\r\n            let state = {...this.state};\r\n            delete state[\"errorMessage\"][input];\r\n            this.setState(state);\r\n        }\r\n        this.handleChange(input)(e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        if (e.target.value % 1 !== 0) {\r\n            this.setErrorMessage(input,\"must be an integer\");\r\n        }\r\n        this.handleNumberFieldChange(input)(e);\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    getState = input => {\r\n        return this.state[input];\r\n    }\r\n\r\n\r\n\r\n    getResults = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        const processedY = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n        console.log(processedY)\r\n\r\n        const statePairToParam = (paramName, currPair) =>\r\n            paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\n        const paramStr =\r\n            [['window', this.state.rollingWindow],\r\n                ['delta_select', this.state.deltaSelect],\r\n                ['fixed_delta', this.state.fixedDelta],\r\n                ['ib', this.state.iterativeBackcasting],\r\n                ['demean', this.state.demean],\r\n                ['processed_y', processedY]].concat(\r\n                [['transform', this.state.transform]].concat(\r\n                    this.state.transform ? [\r\n                            ['p_code', this.state.pCode],\r\n                            ['d_code', this.state.dCode],\r\n                            ['take_log', this.state.takeLog]]\r\n                        : []\r\n                )\r\n            )\r\n                .reduce(statePairToParam, '?');\r\n\r\n        const finalURL = this.baseBackendURL + this.bnfUserSpecifiedDataSlug + paramStr\r\n\r\n        console.log(finalURL)\r\n\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoad();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: UserForm.confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: UserForm.confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            periodicity,\r\n            dateObj,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            dispCycleCI,\r\n            cycleCILB,\r\n            cycleCIUB,\r\n            errorMessage,\r\n        } = this.state;\r\n        const values = {\r\n            y,\r\n            unprocessedY,\r\n            periodicity,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            dispCycleCI,\r\n        };\r\n\r\n        const plotPageValues = {y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, periodicity, dateObj}\r\n\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <UserData\r\n                                    nextStep={this.nextStep}\r\n                                    prevStep={this.prevStep}\r\n                                    handleChange={this.handleChange}\r\n                                    handleCheckboxChange={this.handleCheckboxChange}\r\n                                    getState={this.getState}\r\n                                    values={values}\r\n                                    />\r\n\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading === null ?\r\n                                        <ServerError close={() => {\r\n                                            this.setState({loading: false})\r\n                                        }}/>\r\n                                        : null}\r\n\r\n                                    <FormFilterParameters\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoad}\r\n                                        handleChange={this.handleChange}\r\n                                        handleNumberFieldChange={this.handleNumberFieldChange}\r\n                                        handleIntegerNumberFieldChange={this.handleIntegerNumberFieldChange}\r\n                                        handleCheckboxChange={this.handleCheckboxChange}\r\n                                        getResults={this.getResults}\r\n                                        values={values}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return Loading();\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    handleChange={this.handleChange}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                    nextStep={this.nextStep}\r\n                                    handleChange={this.handleChange}\r\n                                    />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserForm","import './styles/App.css';\r\nimport UserForm from './components/UserForm';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <UserForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}