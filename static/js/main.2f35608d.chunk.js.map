{"version":3,"sources":["components/StartMenu.js","components/FormFilterParameters.js","pickers/CustomDatePicker.js","components/UserData.js","components/RenderedPlot.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","FormFilterParameters","getResults","back","prevStep","_this$props","values","handleChange","handleCheckboxChange","Divider","fontSize","width","alignItems","display","paddingBottom","Grid","container","justifyContent","spacing","item","xs","FormControl","sx","minWidth","InputLabel","Select","label","title","onChange","defaultValue","deltaSelect","MenuItem","TextField","type","fixedDelta","disabled","demean","window","isAutomaticWindow","FormControlLabel","control","Checkbox","checked","iterativeBackcasting","CustomDatePicker","_React$useState","React","useState","Date","_React$useState2","slicedToArray","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","newValue","isDisabled","renderInput","params","UserData","getState","Fragment","m","paddingRight","multiline","rows","InputLabelProps","shrink","placeholder","unprocessedY","light","direction","minHeight","periodicity","pickers_CustomDatePicker","Typography","headingFormControlLabel","transform","size","takeLog","dCode","pCode","RenderedPlot","plotPageValues","UserForm","colsToRows","cycle","cycleCILB","cycleCIUB","xAxis","from","_","i","react_plotly_default","layout","autosize","data","x","y","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","react_csv","filename","getCSVData","state","step","dateObj","cycleCI","loading","baseBackendURL","setState","input","defineProperty","target","setCycle","d","asyncToGenerator","regenerator_default","mark","_callee2","processedY","paramsStr","wrap","_context2","prev","next","replace","split","filter","console","log","reduce","pStr","currA","toString","_callee","_context","fetch","then","response","status","Error","json","result","map","Number","confIntZip","catch","error","stop","_this2","_this$state","components_UserData","Alert","severity","onClose","components_FormFilterParameters","paddingTop","react_loader_spinner_esm","height","components_RenderedPlot","components_StartMenu","ci","bound","_len2","columns","_key2","rowLength","colLength","retArr","c","row","r","push","App","rel","href","components_UserForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f35608d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>We will guide you through the steps to perform trend-cycle decomposition on either (i) a time\r\n                        series of your choosing to be pasted into a field or (ii) a time series from the Federal Reserve\r\n                        Economic Database (FRED) using its mnemonic. Note that there is additional information provided\r\n                        when hovering over the options in the subsequent pages. The cycle is reported and can be\r\n                        downloaded as a CSV.\r\n                    </p>\r\n                    <p>Choose the source of the time series you would like to proceed with:</p>\r\n                </div>\r\n\r\n                {/*<Button*/}\r\n                {/*    variant=\"contained\"*/}\r\n                {/*    style={styles.button}*/}\r\n                {/*    onClick={this.continue}*/}\r\n                {/*>Proceed with FRED mnemonic</Button>*/}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Proceed with my own time series</Button>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\n\r\nexport class FormFilterParameters extends Component {\r\n\r\n    continue = e => {\r\n        const {getResults} = this.props;\r\n        e.preventDefault();\r\n        getResults();\r\n        this.props.nextStep();\r\n\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>BN Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" spacing={4}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >\r\n                                    <MenuItem value={0}>Fixed Delta</MenuItem>\r\n                                    <MenuItem value={1}>Maximize Amplitude-to-Noise Ratio</MenuItem>\r\n                                    <MenuItem value={2}>Minimize Stochastic Trend Volatility</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 50}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    type=\"number\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={values.deltaSelect !== 0}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 250}}>\r\n                                <InputLabel>Iterative Dynamic Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Iterative Dynamic Demeaning\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >\r\n                                    <MenuItem value={\"sm\"}>Static Demeaning</MenuItem>\r\n                                    <MenuItem value={\"dm\"}>Dynamic Demeaning</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={6}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 240}}>*/}\r\n                        {/*        <FormControlLabel label=\"Automatic Rolling Window or\"*/}\r\n                        {/*                          title=\"An algorithm is applied to make this automatic selection\"*/}\r\n                        {/*                          disabled={values.demean === \"sm\"}*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('isAutomaticWindow')}*/}\r\n                        {/*                              checked={values.isAutomaticWindow}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                        <Grid item xs={5}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 100}}>\r\n                                <TextField\r\n                                    label=\"Manual Rolling Window\"\r\n                                    type=\"number\"\r\n                                    title=\"Only necessary when the rolling window is not set to automatic. Must be an integer\"\r\n                                    onChange={handleChange('window')}\r\n                                    defaultValue={values.window}\r\n                                    disabled={values.isAutomaticWindow || values.demean === \"sm\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 450}}>\r\n                                <FormControlLabel label=\"Iterative Backcasting\"\r\n                                                  title=\"When unselected backcasting is based on unconditional mean\r\n                                                        (original KMW approach)\"\r\n                                                  control={<Checkbox\r\n                                                      onChange={handleCheckboxChange('iterativeBackcasting')}\r\n                                                      checked={values.iterativeBackcasting}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <br/>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default FormFilterParameters","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Time Series Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\n\r\nexport class UserData extends Component {\r\n\r\n\r\n    continue = e => {\r\n\r\n        e.preventDefault();\r\n        // process form\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange, getState} = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Time Series Input and Transformations</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. The next observation must start on the next line (and\r\n                        so on). For example, pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            placeholder=\r\n                                \"e.g.\r\n101.2\r\n104.8\r\n102.4\r\n                                ...\"\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display on the x-axis\"\r\n                                 style={{fontSize: 'large'}}>X-Axis Display</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 200}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n\r\n                            <Grid item xs={6}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >\r\n                                        <MenuItem value={'y'}>Yearly</MenuItem>\r\n                                        <MenuItem value={'q'}>Quarterly</MenuItem>\r\n                                        <MenuItem value={'m'}>Monthly</MenuItem>\r\n                                        <MenuItem value={'f'}>Fortnightly</MenuItem>\r\n                                        <MenuItem value={'w'}>Weekly</MenuItem>\r\n                                        <MenuItem value={'d'}>Daily</MenuItem>\r\n                                        <MenuItem value={'h'}>Hourly</MenuItem>\r\n                                        <MenuItem value={'m'}>By The Minute</MenuItem>\r\n                                        <MenuItem value={0}>Undated/Unspecified</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <CustomDatePicker isDisabled={getState(\"periodicity\") === 0}/>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Divider light><FormControl variant=\"standard\">\r\n                            <FormControlLabel\r\n                                label={<Typography style={styles.headingFormControlLabel}>Pre-Analysis\r\n                                    Transformations</Typography>}\r\n                                title=\"Transformations are applied in the order below and are done prior to the BN Filter run\"\r\n                                control={<Checkbox\r\n                                    onChange={handleCheckboxChange('transform')}\r\n                                    checked={values.transform}/>}\r\n                            />\r\n                        </FormControl></Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\">\r\n                                    <FormControlLabel label=\"Natural Logarithm\"\r\n                                                      title=\"Logarithm to the base of Euler's number\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('takeLog')}\r\n                                                          checked={values.takeLog}\r\n                                                          disabled={!values.transform}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 320}}>\r\n                                    <InputLabel>Differencing Method</InputLabel>\r\n                                    <Select\r\n                                        title=\"Differencing method applied\"\r\n                                        onChange={handleChange('dCode')}\r\n                                        defaultValue={values.dCode}\r\n                                        disabled={!values.transform}\r\n                                    >\r\n                                        <MenuItem value={'nd'}>No Differencing (Levels)</MenuItem>\r\n                                        <MenuItem value={'d1'}>1st Difference</MenuItem>\r\n                                        <MenuItem value={'d4'}>4th Difference (Ideal for Quarterly Data)</MenuItem>\r\n                                        <MenuItem value={'d12'}>12th Difference (Ideal for Monthly Data)</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 320}}>\r\n                                    <InputLabel>Computed Percentages</InputLabel>\r\n                                    <Select\r\n                                        title=\"Percentage multiple applied\"\r\n                                        onChange={handleChange('pCode')}\r\n                                        defaultValue={values.pCode}\r\n                                        disabled={!values.transform}\r\n                                    >\r\n                                        <MenuItem value={'np'}>No Change</MenuItem>\r\n                                        <MenuItem value={'p1'}>Multiply by 100</MenuItem>\r\n                                        <MenuItem value={'p4'}>Multiply by 400 (Annualised Quarterly Rate)</MenuItem>\r\n                                        <MenuItem value={'p12'}>Multiply by 1200 (Annualised Monthly Rate)</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 30\r\n\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default UserData","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport class RenderedPlot extends Component {\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return UserForm.colsToRows(\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB),\r\n            [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB));\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n        const xAxis = Array.from({length: plotPageValues.cycle.length}, (_, i) => i + 1);\r\n\r\n        return (\r\n            <Plot layout={{autosize: true}}\r\n                  data={[\r\n\r\n                      {\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      { // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      },\r\n                      { // confint upper bound\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      },\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                    </div>\r\n                    <CSVLink\r\n                        filename={\"BNF_cycle.csv\"}\r\n                        data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 40\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport FormFilterParameters from \"./FormFilterParameters\";\r\nimport UserData from \"./UserData\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport {Circles} from \"react-loader-spinner\";\r\nimport {Alert} from \"@mui/lab\";\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        y: [], // time series\r\n        fixedDelta: 0.1,\r\n        deltaSelect: 2,\r\n        demean: 'sm',\r\n        iterativeBackcasting: true,\r\n        isAutomaticWindow: false,\r\n        window: 40,\r\n        // periodicity\r\n        periodicity: 'q',\r\n        dateObj: Object(),\r\n        // transforms to data before bnf\r\n        transform: false,\r\n        dCode: 'nd',\r\n        pCode: 'np',\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        cycleCI: [],\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n    }\r\n\r\n    loading = true;\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n\r\n    static confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : x + ci[i] /* ub */);\r\n\r\n    static colsToRows = (...columns) => {\r\n\r\n        // Invariant: All arrays are same length\r\n        const\r\n            rowLength = columns.length,\r\n            colLength = columns[0].length;\r\n\r\n        const retArr = [];\r\n\r\n        for (let c = 0; c < colLength; c++) {\r\n            const row = [];\r\n            for (let r = 0; r < rowLength; r++) {\r\n                row.push(columns[r][c]);\r\n            }\r\n            retArr.push(row)\r\n        }\r\n\r\n        return retArr;\r\n\r\n\r\n    };\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    getState = input => {\r\n        return this.state[input];\r\n    }\r\n\r\n    setCycle = input => d => {\r\n        this.setState({[input]: d});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    getResults = async () => {\r\n\r\n        const processedY = this.state.unprocessedY.replace(/,?(\\r\\n|\\n|\\r)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n        console.log(processedY)\r\n\r\n        const paramsStr = [['window', this.state.window],\r\n            ['delta_select', this.state.deltaSelect],\r\n            ['fixed_delta', this.state.fixedDelta],\r\n            ['ib', this.state.iterativeBackcasting],\r\n            ['demean', this.state.demean],\r\n            ['processed_y', processedY],\r\n            // dealing with all operating system's newline characters\r\n            ['transform', this.state.transform],\r\n            ['p_code', this.state.pCode],\r\n            ['d_code', this.state.dCode],\r\n            ['take_log', this.state.takeLog]]\r\n            .reduce((pStr, currA) => {\r\n                return pStr + currA[0].toString() + '=' + currA[1].toString() + '&'\r\n            }, '?');\r\n\r\n\r\n        console.log(this.baseBackendURL + \"/user-specified-time-series\" + paramsStr)\r\n\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(this.baseBackendURL + \"/user-specified-time-series\" + paramsStr)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.setState({\r\n                            loading: null,\r\n                        })\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n                    this.setState({\r\n                        cycle: (result[\"cycle\"].map(x => Number(x))),\r\n                        cycleCI: (result[\"ci\"].map(x => Number(x))),\r\n                    })\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        cycleCILB: UserForm.confIntZip(this.state.cycle, this.state.cycleCI, \"lb\"),\r\n                        cycleCIUB: UserForm.confIntZip(this.state.cycle, this.state.cycleCI, \"ub\"),\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            window,\r\n            periodicity,\r\n            dateObj,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            cycleCILB,\r\n            cycleCIUB,\r\n        } = this.state;\r\n        const values = {\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            window,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n        };\r\n\r\n        const plotPageValues = {y, cycle, cycleCILB, cycleCIUB, periodicity, dateObj}\r\n\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return (\r\n                                <UserData\r\n                                    nextStep={this.nextStep}\r\n                                    prevStep={this.prevStep}\r\n                                    handleChange={this.handleChange}\r\n                                    handleCheckboxChange={this.handleCheckboxChange}\r\n                                    getState={this.getState}\r\n                                    values={values}\r\n                                />\r\n                            )\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === null) {\r\n                                            return (\r\n                                                <div style={{margin: \"2px 20%\"}}>\r\n                                                    <Alert variant=\"filled\" severity=\"error\"\r\n                                                           onClose={() => {\r\n                                                               this.setState({loading: false})\r\n                                                           }}>\r\n                                                        During the running of the BN filter a problem occurred.\r\n                                                        Please check that the inputs are appropriate.\r\n                                                    </Alert>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })()}\r\n                                    <FormFilterParameters\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        handleChange={this.handleChange}\r\n                                        handleCheckboxChange={this.handleCheckboxChange}\r\n                                        getResults={this.getResults}\r\n                                        values={values}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return (\r\n                                                <div style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"space-around\",\r\n                                                    paddingTop: \"30vh\"\r\n                                                }}>\r\n                                                    <Circles height={75} width={75} color='grey'/>\r\n                                                </div>\r\n                                            )\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    handleChange={this.handleChange}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // also case 1\r\n                            return (\r\n\r\n                                <StartMenu\r\n                                    nextStep={this.nextStep}\r\n                                    handleChange={this.handleChange}\r\n                                />\r\n\r\n                            )\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserForm","import './styles/App.css';\r\nimport UserForm from './components/UserForm';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <UserForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}