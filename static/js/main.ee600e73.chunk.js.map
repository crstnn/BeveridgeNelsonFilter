{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/Error.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","createMenuItems","option","map","item","MenuItem","text","Error","Alert","severity","onClose","close","tagName","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","x","_this$props","getResults","getFREDResults","cancelLoad","console","log","dataInputType","handlers","handleChange","target","back","prevStep","preAnalysisTransformations","_this$props2","handleCheckboxChange","Fragment","Divider","fontSize","Grid","container","direction","justifyContent","alignItems","spacing","xs","FormControl","FormControlLabel","label","title","control","Checkbox","size","onChange","checked","takeLog","disabled","transform","sx","minWidth","InputLabel","Select","defaultValue","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","minHeight","loading","components_Error","alertErrors","alertErrorType","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","fetchWithTimeout","_callee","url","controller","timeoutID","f","regenerator_default","wrap","_context","prev","next","AbortController","setTimeout","abort","fetch","signal","sent","clearTimeout","abrupt","stop","FREDDataForm","state","mnemonic","timeoutError","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","mark","catch","setErrorMessage","then","response","status","json","result","startDate","Date","endDate","deleteErrorMessage","mnemonicInput","showText","FormGroup","row","JoinedTextField","color","onKeyDown","keyCode","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","rel","href","light","pickers_CustomDatePicker","startDateFRED","endDateFRED","marginBottom","marginTop","dispCycleCI","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesUserData","valuesFREDData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","toFixed","react_csv","textDecoration","filename","getCSVData","Loading","DateS","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","YearlyDate","QuarterlyDate","MonthlyDate","WeeklyDate","packWithZero","d","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","fieldErrorMessages","cancelLoading","input","defineProperty","message","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","bnfParamArr","fetchResultWithErrorHandling","_ref","_x","getResultsForFREDData","_callee3","_context3","bnfFredDataSlug","_callee2","_context2","cycleRes","Number","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee5","_context5","replace","split","bnfUserSpecifiedDataSlug","_callee4","_context4","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"0SAIaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,SAAW,SAAAC,GACPA,EAAEC,iBACFjB,EAAKkB,MAAMC,YAHnBnB,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAAC,GAAAG,OAAAoB,EAAA,EAAApB,CAAAJ,EAAA,EAAAyB,IAAA,SAAAC,MAAA,WAQQ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,iGACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oGACAF,EAAAC,EAAAC,cAAA,wEAERF,EAAAC,EAAAC,cAAA,8KAMJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAOC,EAAOC,OACdC,QAAS9B,KAAKY,UAHlB,YAKAS,EAAAC,EAAAC,cAAA,gBA3BhB7B,EAAA,CAA+BqC,aAkCzBH,EAAS,CACXC,OAAQ,CACJG,OAAQ,iBAIDtC,6FCvCAuC,EAFS,SAACC,GAAD,OAAYA,EAAOC,IAAI,SAACC,GAAD,OAAUf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAUjB,MAAOgB,EAAKhB,OAAQgB,EAAKE,kBCa7EC,EAbf,SAAA5C,GAAA,SAAA4C,IAAA,OAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,GAAAzC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAyC,GAAA7B,MAAAV,KAAAE,YAAA,OAAAJ,OAAAmB,EAAA,EAAAnB,CAAAyC,EAAA5C,GAAAG,OAAAoB,EAAA,EAAApB,CAAAyC,EAAA,EAAApB,IAAA,SAAAC,MAAA,WAGQ,OACIC,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAACK,OAAQ,YACjBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOd,QAAQ,SAASe,SAAS,QAC1BC,QAAS1C,KAAKe,MAAM4B,OACtB3C,KAAKe,MAAM6B,cAPhCL,EAAA,CAA2BR,aCcdc,EAAb,SAAAlD,GAAA,SAAAkD,IAAA,IAAAjD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,GAAA,QAAA5C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA+C,IAAApC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEI0C,WAAa,CACTC,cAAe,iBAAmC,OAA7BlD,EAAKkB,MAAMiC,OAAOC,QACvCC,MAAO,kBAAM,IAJrBrD,EAOIsD,QAAU,SAAAC,GAAK,YAAiCC,IAA7BxD,EAAKkB,MAAMuC,OAAOF,IAPzCvD,EASI0D,kBAAoB,SAAAH,GAAK,OAAIvD,EAAKsD,QAAQC,KAAWvD,EAAKiD,WAAWM,MATzEvD,EAWI2D,qBAAuB,kBAAM1D,OAAO2D,KAAK5D,EAAKkB,MAAMuC,QAAQnB,IAAI,SAAAhB,GAAG,OAAItB,EAAK0D,kBAAkBpC,KAAMuC,OAAO,SAAAC,GAAC,OAAIA,IAAGxD,QAXvHN,EAaIe,SAAW,SAAAC,GACPA,EAAEC,iBADU,IAAA8C,EAE6C/D,EAAKkB,MAAvD8C,EAFKD,EAELC,WAAYC,EAFPF,EAEOE,eAAgBd,EAFvBY,EAEuBZ,OAAQe,EAF/BH,EAE+BG,WAE3CC,QAAQC,IAAI,SAAUpE,EAAK2D,wBAES,IAAhC3D,EAAK2D,wBACwB,SAAzBR,EAAOkB,cAA0BJ,IACH,SAAzBd,EAAOkB,eAA0BL,IAC1ChE,EAAKkB,MAAMC,aAGXnB,EAAKkB,MAAMoD,SAASC,aAAa,iBAAjCvE,CAAmD,CAACwE,OAAQ,CAACjD,MAAO,aACpE2C,MA1BZlE,EA8BIyE,KAAO,SAAAzD,GACHA,EAAEC,iBACFjB,EAAKkB,MAAMwD,YAhCnB1E,EAmCI2E,2BAA6B,WAAM,IAAAC,EACJ5E,EAAKkB,MAAzBiC,EADwByB,EACxBzB,OAAQmB,EADgBM,EAChBN,SACRC,EAAsCD,EAAtCC,aAAcM,EAAwBP,EAAxBO,qBAErB,OACIrD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASjD,MAAO,CAACkD,SAAU,YAA3B,oBAEJxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,eAAeC,WAAW,SAASC,QAAS,GAC1F9D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,YACjBL,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAkBC,MAAM,oBACNC,MAAM,0CACNC,QAASpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACLC,KAAK,QACLC,SAAUlB,EAAqB,WAC/BmB,QAAS7C,EAAO8C,QAChBC,UAAW/C,EAAOgD,gBAIhD3E,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,4BACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIZ,MAAM,8BACNI,SAAUxB,EAAa,SACvBiC,aAAcrD,EAAOsD,MACrBP,UAAW/C,EAAOgD,WACpB/D,EAAgBmB,IAAMmD,YAAYD,MAAMpE,WAGlDb,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,6BACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIZ,MAAM,mBACNI,SAAUxB,EAAa,SACvBiC,aAAcrD,EAAOwD,MACrBT,UAAW/C,EAAOgD,WACpB/D,EAAgBmB,IAAMmD,YAAYC,MAAMtE,cA5EtErC,EAmFI4G,mBAAqB,WAAM,IAAAC,EAGE7G,EAAKkB,MAAzBiC,EAHkB0D,EAGlB1D,OAAQmB,EAHUuC,EAGVvC,SACRC,EAAyED,EAAzEC,aAAcuC,EAA2DxC,EAA3DwC,wBAAyBC,EAAkCzC,EAAlCyC,+BACxCtD,EAASzD,EAAKkB,MAAMuC,OAMxB,OACIjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASjD,MAAO,CAACkD,SAAU,YAA3B,sBAEJxD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CACRkF,MAAO,QACP3B,WAAY,SACZ4B,QAAS,iBAETzF,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,aAAaD,eAAe,eAAeE,QAAS,GAC3E9D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,sCACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIb,MAAM,gCACNC,MAC8B,IAAvBxC,EAAO+D,YACC,gDACsB,IAAvB/D,EAAO+D,YACN,4DACsB,IAAvB/D,EAAO+D,YACN,yDADJ,EAIXnB,SAAUxB,EAAa,eACvBiC,aAAcrD,EAAO+D,aACvB9E,EAAgBmB,IAAMmD,YAAYQ,YAAY7E,WAGxDb,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACIzB,MAA8B,IAAvBvC,EAAO+D,YAAoB,cAAgB,gBAClDvB,MAA8B,IAAvBxC,EAAO+D,YAAoB,6BAA+B,iFACjEnB,SAAUe,EAAwB,SAClCN,aAAcrD,EAAOE,MACrB6C,SAAUlG,EAAKiD,WAAL,QACVmE,MAAOpH,EAAK0D,kBAAkB,SAC9B2D,WAAYrH,EAAK0D,kBAAkB,SAC/BD,EAAM,MAAY,aAIlCjC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,kBACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIb,MAAM,YACNC,MACyB,OAAlBxC,EAAOC,OACC,0BACiB,OAAlBD,EAAOC,OACN,mDACiB,QAAlBD,EAAOC,OACN,mHADJ,EAIX2C,SAAUxB,EAAa,UACvBiC,aAAcrD,EAAOC,QACvBhB,EAAgBmB,IAAMmD,YAAYY,0BAA0BjF,WAGtEb,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACIzB,MAAO,iBACPC,MAAM,2CACNI,SAvEjBgB,EAA+B,iBAwEdP,aAAcrD,EAAOD,cACrBgD,SAAUlG,EAAKiD,WAAL,gBACVmE,MAAOpH,EAAK0D,kBAAkB,iBAC9B2D,WAAYrH,EAAK0D,kBAAkB,iBAC/BD,EAAM,cAAoB,iBAvKlEzD,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAA+C,EAAAlD,GAAAG,OAAAoB,EAAA,EAAApB,CAAA+C,EAAA,EAAA1B,IAAA,SAAAC,MAAA,WAiLa,IAAAgG,EAAApH,KACL,OACIqB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAC0F,UAAW,MACW,OAA9BrH,KAAKe,MAAMiC,OAAOsE,QACfjG,EAAAC,EAAAC,cAACgG,EAAD,CACI3E,QAAS4E,IAAYxH,KAAKe,MAAMiC,OAAOyE,gBACvC9E,MAAO,WAAOyE,EAAKrG,MAAMoD,SAASC,aAAa,UAAjCgD,CAA4C,CAAC/C,OAAQ,CAACjD,OAAO,QAC7E,KACLpB,KAAKwE,6BACLxE,KAAKyG,sBAEVpF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOC,EAAOC,OACdC,QAAS9B,KAAKsE,MAHlB,QAKAjD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAOC,EAAOC,OACdC,QAAS9B,KAAKY,UAHlB,gCAlMhBiC,EAAA,CAAoCd,aA6M9BH,EAAS,CACXC,OAAQ,CACJG,OAAQ,iBAIDa,4EChMA6E,MA/Bf,SAA0B3G,GACtB,IAAM4G,EAAO5G,EAAM4G,KAMnB,OACItG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAsBC,YAAaC,KAC/BzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACIxC,MAAOxE,EAAMwE,MAEbyC,YAAY,aACZ5G,MAAOuG,EACPM,QAASlH,EAAMkH,QACfC,QAASnH,EAAMmH,QACfC,WAAY,CAACxG,MAAO,CAACkF,MAAO,MAC5BjB,SAfK,SAACwC,GAClBrH,EAAMsH,WAAW,CAAChE,OAAQ,CAACjD,MAAOgH,MAetBrC,SAAUhF,EAAM+B,WAChBwF,YAAa,SAACC,GAAD,OACTlH,EAAAC,EAAAC,cAACyF,EAAA,EAADlH,OAAA0I,OAAA,GAAeD,EAAf,CACW/C,MAAOzE,EAAMyE,MACbiD,gBAAiB,CAACC,QAAQ,GAC1BC,WAAU7I,OAAA8I,EAAA,EAAA9I,CAAA,GAAMyI,EAAOI,WAAb,CAAyBE,YAAa,wBCR7EC,EAAa,SAACC,EAAOC,EAAIC,GAAZ,OAAsBF,EAAM5G,IAAI,SAACwB,EAAGuF,GAAJ,MAAoB,OAAVD,EAAiBtF,EAAIqF,EAAGE,GAAcvF,EAAIqF,EAAGE,MAEpGC,EAAc,SAACC,EAAWC,GAAZ,OAChBD,EAAYC,EAAS,GAAGC,WAAa,IAAMD,EAAS,GAAGC,WAAa,KAElEC,EAAsB,SAAAC,GAAG,OAAIA,EAAIC,OAAON,EAAa,eAE5CO,+EAAf,SAAAC,EAAgCC,GAAhC,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAA1I,EAAA2I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEQP,EAAa,IAAIQ,gBACjBP,EAAYQ,WAAW,kBAAMT,EAAWU,SAAS,KAHzDL,EAAAE,KAAA,EAIkBI,MAAMZ,EAAK,CAACa,OAAQZ,EAAWY,SAJjD,cAIQV,EAJRG,EAAAQ,KAKIC,aAAab,GALjBI,EAAAU,OAAA,SAMWb,GANX,wBAAAG,EAAAW,SAAAlB,yCCRamB,EAAb,SAAAnL,GAAA,SAAAmL,IAAA,IAAAlL,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8K,GAAA,QAAA7K,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgL,IAAArK,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEI2K,MAAQ,CACJC,SAAUnL,EAAKkB,MAAMiC,OAAOgI,SAC5B1D,SAAS,EACT2D,cAAc,GALtBpL,EAQIqL,0BAA4B,WACxB,IAAMC,EAAQ/H,IAAMmD,YAAY6E,cAAclJ,OAAOwB,OAAO,SAAAC,GAAC,OAAI9D,EAAKkB,MAAMiC,OAAOqI,qBAAqBC,SAAS3H,EAAEvC,SACnH,OAAOa,EAAgBkJ,IAV/BtL,EAaI0L,kBAAoB,WAChB,IACIC,EAAWjC,EAAoB,CAAC,CAAC,YAAa1J,EAAKkL,MAAMC,YACzDS,EAAWC,IAAIC,eAAiBD,IAAIE,aAAeJ,EAEvD3L,EAAKgM,SAAS,CAACvE,SAAS,GAAxBxH,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KAA+B,SAAApC,IAAA,OAAAK,EAAA1I,EAAA2I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3BV,EAAiB+B,GACZO,MAAM,SAAAnL,GAOH,MANAhB,EAAKgM,SACD,CACIZ,cAAc,EACd3D,SAAS,IAEjBzH,EAAKkB,MAAMkL,gBAAgB,WAAY,mCACjCpL,IAETqL,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAOT,MANAvM,EAAKgM,SACD,CACIZ,cAAc,EACd3D,SAAS,IAEjBzH,EAAKkB,MAAMkL,gBAAgB,WAAY,iCACjC,IAAI1J,EAAM,cAEhB,OAAO4J,IAGdD,KAAK,SAACC,GAAD,OAAcA,EAASE,SAC5BH,KAAK,SAAAI,GACFtI,QAAQC,IAAI,WAAYqI,GAExB,IACIC,EAAY,IAAIC,KAAKF,EAAM,YAC3BG,EAAU,IAAID,KAAKF,EAAM,UAE7BzM,EAAKgM,SAAS,CACVZ,cAAc,EACd3D,SAAS,IAEbzH,EAAKkB,MAAM2L,mBAAmB,YAC9B7M,EAAKkB,MAAMqD,aAAa,WAAxBvE,CAAoC,CAACwE,OAAQ,CAACjD,MAAOvB,EAAKkL,MAAMC,YAChEnL,EAAKkB,MAAMqD,aAAa,gBAAxBvE,CAAyC,CAACwE,OAAQ,CAACjD,MAAOmL,KAC1D1M,EAAKkB,MAAMqD,aAAa,cAAxBvE,CAAuC,CAACwE,OAAQ,CAACjD,MAAOqL,KACxD5M,EAAKkB,MAAMqD,aAAa,UAAxBvE,CAAmC,CAACwE,OAAQ,CAACjD,MAAOmL,KACpD1M,EAAKkB,MAAMqD,aAAa,UAAxBvE,CAAmC,CAACwE,OAAQ,CAACjD,MAAOqL,KACpD5M,EAAKkB,MAAMqD,aAAa,uBAAxBvE,CAAgD,CAACwE,OAAQ,CAACjD,MAAOkL,EAAM,yBACvEzM,EAAKkB,MAAMqD,aAAa,gBAAxBvE,CAAyC,CAACwE,OAAQ,CAACjD,MAAOkL,EAAM,sBAA0B,QAG3FN,MAAM,SAAC/E,GACVjD,QAAQC,IAAIgD,KA/CW,wBAAAiD,EAAAW,SAAAlB,QAlBvC9J,EAsEI8M,cAAgB,WAEZ,IAAMC,EAAW,wBAA0CvJ,IAAlCxD,EAAKkB,MAAMuC,OAAX,UAA8E,KAA/BzD,EAAKkB,MAAMiC,OAAOgI,YAAgD,IAA5BnL,EAAKkL,MAAME,cACzHjH,QAAQC,IAAI2I,KAaZ,OACIvL,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASiB,GAAI,CAACoB,UAAW,KAC7CpC,eAAe,eACfC,WAAW,UACb7D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,GACNf,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAWC,KAAG,GACVzL,EAAAC,EAAAC,cAACwL,EAAD,CAAiBrL,QAAQ,WAAW6D,MAAM,gBACzBC,MAAM,yEACNwH,WAAyC3J,IAAlCxD,EAAKkB,MAAMuC,OAAX,UAA8E,KAA/BzD,EAAKkB,MAAMiC,OAAOgI,SAAkB,UAAY,KAAMnC,YAAY,aAAa5C,GAAI,CAACY,MAAO,KACjJI,WAAyC5D,IAAlCxD,EAAKkB,MAAMuC,OAAX,SACPsC,SAAU,SAAA/E,GAAC,OAAIhB,EAAKgM,SAAS,CAACb,SAAUnK,EAAEwD,OAAOjD,SACjD6L,UAAW,SAAApM,GAAC,OAAkB,KAAdA,EAAEqM,QAAmCrN,EAAK0L,kBAAkB1K,GAAK,MACjFwF,aAAcxG,EAAKkL,MAAMC,SACzB7C,WAAY,CACRgF,aAActN,EAAKkL,MAAMzD,QAAUjG,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAWC,OAAQ,GAAIxG,MAAO,GAAImG,MAAM,SAAW,QAC3G3L,EAAAC,EAAAC,cAAC+L,GAAD,CAAcxL,QAASjC,EAAK0L,kBAAmB7J,QAAQ,YAAvD,UAEJL,EAAAC,EAAAC,cAACgM,EAAA,EAAD,KA5BHX,KAGL5I,QAAQC,IAAI,QACZD,QAAQC,IAAIpE,EAAKkB,MAAMuC,OAAX,eACyBD,IAAlCxD,EAAKkB,MAAMuC,OAAX,SACQzD,EAAKkB,MAAMuC,OAAX,SACG,6BANH,aA5EvBzD,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAgL,EAAAnL,GAAAG,OAAAoB,EAAA,EAAApB,CAAAgL,EAAA,EAAA3J,IAAA,SAAAC,MAAA,WA8Ga,IAAAwC,EACgD5D,KAAKe,MAAnDiC,EADFY,EACEZ,OAAQoB,EADVR,EACUQ,aAAcM,EADxBd,EACwBc,qBAE7B,OACIrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,KAAG8C,OAAO,SACMmJ,IAAI,sBACJC,KAAK,2CAFrB,iBAAZ,mDAKJpM,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CACRkF,MAAO,QACP3B,WAAY,SACZ4B,QAAS,iBAER9G,KAAK2M,gBACNtL,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAS8I,OAAK,EACLlI,MAAM,gGACN7D,MAAO,CAACkD,SAAU,UAF3B,WAIAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASiB,GAAI,CAACoB,UAAW,KAC7CpC,eAAe,eACfC,WAAW,UACb7D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAACoM,EAAD,CACkBpI,MAAO,aACPC,MAAO,qDACPmC,KAAM3E,EAAO4K,cACb3F,QAASjF,EAAOiF,QAChBC,QAASlF,EAAOkF,QAChBG,WAAYjE,EAAa,oBAE/C/C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAACoM,EAAD,CACkBpI,MAAO,WACPC,MAAO,mDACPmC,KAAM3E,EAAO6K,YACb5F,QAASjF,EAAOiF,QAChBC,QAASlF,EAAOkF,QAChBG,WAAYjE,EAAa,kBAE/C/C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,kBACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIZ,MAAM,gEACNI,SAAUxB,EAAa,iBACvBiC,aAAcrD,EAAOoI,eACvBpL,KAAKkL,+BAIf7J,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAaY,GAAI,CAAC6H,aAAc,EAAGC,UAAW,GAAIrM,QAAQ,YACtDL,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAkBC,MAAM,2BACNC,MAAM,6DACNC,QAASpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACLC,KAAK,QACLC,SAAUlB,EAAqB,eAC/BmB,QAAS7C,EAAOgL,yBA1KtElD,EAAA,CAAkC/I,aAqL5BgL,EAAkBkB,YAAW,CAC/BC,KAAM,CACFC,aAAc,CACVC,qBAAsB,EACtBC,wBAAyB,KAJbJ,CAOrBjH,KAEGsG,GAAeW,YAAW,CAC5BC,KAAM,CACFI,oBAAqB,EACrBC,uBAAwB,EACxBC,gBAAiB,UACjBC,YAAa,UACbzB,MAAO,UANMiB,CAQlBxM,KC3MUiN,GAAb,SAAA/O,GAAA,SAAA+O,IAAA,OAAA5O,OAAAC,EAAA,EAAAD,CAAAE,KAAA0O,GAAA5O,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA4O,GAAAhO,MAAAV,KAAAE,YAAA,OAAAJ,OAAAmB,EAAA,EAAAnB,CAAA4O,EAAA/O,GAAAG,OAAAoB,EAAA,EAAApB,CAAA4O,EAAA,EAAAvN,IAAA,SAAAC,MAAA,WAEa,IAAAwC,EACgD5D,KAAKe,MAAnDiC,EADFY,EACEZ,OAAQoB,EADVR,EACUQ,aAAcM,EADxBd,EACwBc,qBAE7B,OACArD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,sLAGJF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAAC0I,EAAG,EAAGzI,SAAU,IAAK0I,aAAc,IACpEvN,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACI6H,WAAS,EACTC,KAAM,GACNvJ,MAAM,kBACNC,MAAM,qCACNI,SAAUxB,EAAa,gBACvBqE,gBAAiB,CAACC,QAAQ,GAG1BG,YAAa,OAAU,IAAIxI,MAAM,KAAK0O,KAAK,KAC/B,QAAW,IAAI1O,MAAM,KAAK0O,KAAK,KAC/B,QAAW,IAAI1O,MAAM,KAAK0O,KAAK,KAC/B,QAAW,IAAI1O,MAAM,KAAK0O,KAAK,KAC/B,MACZ1I,aAAcrD,EAAOgM,gBAG7B3N,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CACRkF,MAAO,QACP3B,WAAY,SACZ4B,QAAS,iBAETzF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAS8I,OAAK,EACLlI,MAAM,gGACN7D,MAAO,CAACkD,SAAU,UAF3B,mBAGAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASiB,GAAI,CAACoB,UAAW,IAAK4H,WAAY,GAC9DhK,eAAe,eACfC,WAAW,UACb7D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAACoM,EAAD,CACcpI,MAAO,aACPC,MAAO,gFACPmC,KAAM3E,EAAOuJ,UACblE,WAAYrI,KAAKe,MAAMqD,aAAa,aACpCtB,WAAiC,MAArBE,EAAOkM,aAErC7N,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAa3D,QAAQ,WAAWuE,GAAI,CAACC,SAAU,MAC3C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,kBACA9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CACIZ,MAAM,wBACNI,SAAUxB,EAAa,aACvBiC,aAAcrD,EAAOkM,WACvBjN,EAAgBmB,IAAMmD,YAAY4I,gBAAgBjN,WAI5Db,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAaY,GAAI,CAAC6H,aAAc,EAAGC,UAAW,GAAIrM,QAAQ,YACtDL,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAkBC,MAAM,2BACNC,MAAM,6DACNC,QAASpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACLC,KAAK,QACLC,SAAUlB,EAAqB,eAC/BmB,QAAS7C,EAAOgL,yBAlElEU,EAAA,CAAkC3M,aCkEnBqN,GAvEf,SAAAzP,GAAA,SAAAyP,IAAA,IAAAxP,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoP,GAAA,QAAAnP,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAsP,IAAA3O,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIiP,oBAAsB,SAACxO,QAGyBwC,IAAlCxD,EAAKkB,MAAMuC,OAAX,UAA2F,SAA5CzD,EAAKkB,MAAMuO,eAAepL,eAIlDrE,EAAKkB,MAAM2L,mBAAmB,iBAFfrJ,IAAtCxD,EAAKkB,MAAMuC,OAAX,cAA+F,SAA5CzD,EAAKkB,MAAMuO,eAAepL,eAGpDrE,EAAKkB,MAAM2L,mBAAmB,gBAEjE7M,EAAKkB,MAAMqD,aAAa,gBAAxBvE,CAAyCgB,IAZjDhB,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAsP,EAAAzP,GAAAG,OAAAoB,EAAA,EAAApB,CAAAsP,EAAA,EAAAjO,IAAA,SAAAC,MAAA,WAea,IAAAwC,EACqH5D,KAAKe,MAAxHuO,EADF1L,EACE0L,eAAgBhM,EADlBM,EACkBN,OAAQiM,EAD1B3L,EAC0B2L,eAAgBtD,EAD1CrI,EAC0CqI,gBAAiBS,EAD3D9I,EAC2D8I,mBAAoBtI,EAD/ER,EAC+EQ,aAAcM,EAD7Fd,EAC6Fc,qBAElG,OACIrD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAC0F,UAAW,MACpBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASjD,MAAO,CAACkD,SAAU,YACvBxD,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CACIxC,MAAM,UACN5L,MAAOkO,EAAepL,cACtBuL,WAAS,EACT7J,SAAU5F,KAAKqP,qBAEfhO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAActO,MAAM,QAApB,eACAC,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAActO,MAAM,QAApB,kBAK6B,SAAjCkO,EAAepL,cACR7C,EAAAC,EAAAC,cAACoO,GAAD,CACKvL,aAAcA,EACdM,qBAAsBA,EACtB1B,OAAQsM,IACkB,SAAjCA,EAAepL,cACb7C,EAAAC,EAAAC,cAACqO,EAAD,CACC3D,gBAAiBA,EACjBS,mBAAoBA,EACpBtI,aAAcA,EACdM,qBAAsBA,EACtB1B,OAAQuM,EACRjM,OAAQA,SAPf,GAWbjC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,eAAe,eAC5CC,WAAW,UACb7D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAM1C,MAAI,EAACgD,GAAI,GACX/D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOC,GAAOC,OACdC,QAAS9B,KAAKe,MAAMwD,UAHxB,QAKAlD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAOC,GAAOC,OACdC,QAAS9B,KAAKe,MAAMC,UAHxB,mBA3DxBoO,EAAA,CAA8BrN,aAyExBH,GAAS,CACXC,OAAQ,CACJG,OAAQ,gBAEZ6N,wBAAyB,CAAChL,SAAU,wCCjF3BiL,GAAb,SAAAnQ,GAAA,SAAAmQ,IAAA,IAAAlQ,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8P,GAAA,QAAA7P,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgQ,IAAArP,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEI2P,SAAW,gBAFflQ,EAIIyE,KAAO,SAAAzD,GACHA,EAAEC,iBACFjB,EAAKkB,MAAMwD,YANnB1E,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAgQ,EAAAnQ,GAAAG,OAAAoB,EAAA,EAAApB,CAAAgQ,EAAA,EAAA3O,IAAA,aAAAC,MAAA,WAUiB,IACF4O,EAAkBhQ,KAAKe,MAAvBiP,eAEP,OJnBW,WAAgB,QAAA/P,EAAAC,UAAAC,OAAZ8P,EAAY,IAAA5P,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAZ2P,EAAY3P,GAAAJ,UAAAI,GAW/B,IANA,IACI4P,GAJJD,EAAUA,EAAQvM,OAAO,SAAAC,GAAC,YAAUN,IAANM,KAINxD,OACpBgQ,EAAYF,EAAQ,GAAG9P,OAErBiQ,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAEhC,IADA,IAAMvD,EAAM,GACHwD,EAAI,EAAGA,EAAIJ,EAAWI,IAC3BxD,EAAIyD,KAAKN,EAAQK,GAAGD,IAExBD,EAAOG,KAAKzD,GAEhB,OAAOsD,EICII,CACH,CAAC,QAAQ7P,OAAOqP,EAAerM,GAC/B,EAAmC,SAAjCqM,EAAe9L,cAAf,GAAAvD,OAA6CqP,EAAehF,SAA5D,KAA0E,IAAO,cAAcrK,OAAOqP,EAAeS,GACvH,CAAC,SAAS9P,OAAOqP,EAAejH,OAChCiH,EAAehC,YAAc,CAAC,wBAAwBrN,OAAOqP,EAAeU,gBAAarN,EACzF2M,EAAehC,YAAc,CAAC,wBAAwBrN,OAAOqP,EAAeW,gBAAatN,KAlBrG,CAAAlC,IAAA,UAAAC,MAAA,WAsBc,IACC4O,EAAkBhQ,KAAKe,MAAvBiP,eAKP,OAHAhM,QAAQC,IAAI+L,EAAerM,GAC3BK,QAAQC,IAAI+L,EAAeS,GAGvBpP,EAAAC,EAAAC,cAACqP,GAAAtP,EAAD,CAAMuP,OAAQ,CAACC,UAAU,EAAMC,MAAO,CAACC,YAAY,GAAOC,MAAO,CAACD,YAAY,EAAME,UAAW,SACzFC,KAAM,CACF,CACIxN,EAAGqM,EAAerM,EAClB8M,EAAGT,EAAejH,MAClBqI,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAACtE,MAAO,QAChBuE,KAAM,QACNC,YAAY,GAEhBxB,EAAehC,YAAc,CAEzBrK,EAAGqM,EAAerM,EAClB8M,EAAGT,EAAeU,UAClBe,KAAM,UACNC,UAAW,mBACXC,KAAM,CAAC3E,MAAO,eACdwE,YAAY,EACZJ,KAAM,UACNQ,UAAW,QACX,GACJ5B,EAAehC,YAAc,CACzBrK,EAAGqM,EAAerM,EAClB8M,EAAGT,EAAeW,UAClBc,KAAM,UACNC,UAAW,qBACXC,KAAM,CAAC3E,MAAO,eACdwE,YAAY,EACZJ,KAAM,UACNQ,UAAW,QACX,QA5D1B,CAAAzQ,IAAA,SAAAC,MAAA,WAkEa,IACE4O,EAAkBhQ,KAAKe,MAAvBiP,eACP,OACI3O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAC0F,UAAW,MACpBhG,EAAAC,EAAAC,cAAA,WACKvB,KAAK6R,UACNxQ,EAAAC,EAAAC,cAAA,oBAAYyO,EAAe8B,UAAUC,QAAQ,GAA7C,MAEJ1Q,EAAAC,EAAAC,cAACyQ,GAAA,QAAD,CAASrQ,MAAO,CAACsQ,eAAgB,aACxBC,SAAUlS,KAAK+P,SAAUoB,KAAMnR,KAAKmS,cAD7C,oBAGJ9Q,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOC,GAAOC,OACdC,QAAS9B,KAAKsE,MAHlB,aA9EhBwL,EAAA,CAAkC/N,aAyF5BH,GAAS,CACXC,OAAQ,CACJG,OAAQ,iBAID8N,MCvFAsC,OAXf,WACI,OACI/Q,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CACRmF,QAAS,OACT7B,eAAgB,eAChBgK,WAAY,SAEZ5N,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAASC,OAAQ,GAAIxG,MAAO,GAAImG,MAAM,8BCV5CqF,8MAqBFC,eAAiB,WACb,MAAM,IAAI/P,MAAM,6CAGpBgQ,aAAe,SAAAC,GACX,IAAIC,EAAQ3S,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAAD,IAAS8S,EAAO7S,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAAD,IAC5B,OAAOQ,MAAMuS,KAAK,CAACzS,OAAQqS,IAAMrQ,IAAI,WAGjC,OAFAwQ,EAAUF,EACVA,EAAWA,EAASH,iBACbK,+CA9BCnG,OAAd6F,GAEKQ,WAAa,SAAC1R,EAAKwG,GACtB,OAAQxG,GACJ,IAAK,IACD,OAAO,IAAI2R,GAAWnL,GAC1B,IAAK,IACD,OAAO,IAAIoL,GAAcpL,GAC7B,IAAK,IACD,OAAO,IAAIqL,GAAYrL,GAC3B,IAAK,IACD,OAAO,IAAIsL,GAAWtL,GAC1B,QACI,MAAM,IAAIpF,MAAM,sBAb1B8P,GAiBKa,aAAe,SAAAC,GAAC,OAA4B,IAAxBA,EAAE7J,WAAWnJ,OAAe,IAAMgT,EAAIA,GAjB/Dd,GAmBKe,iBAAmB,SAACzL,GAAD,SAAAhH,OAAagH,EAAK0L,cAAlB,KAAA1S,OAAmC0R,GAAMa,aAAavL,EAAK2L,WAAa,GAAxE,KAAA3S,OAA8E0R,GAAMa,aAAavL,EAAK4L,iBAgB9HN,8MACFX,eAAiB,WACb,IAAMkB,EAAU,IAAIP,EAAJnT,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAAsH,KAChB,OAAO,IAAI6L,EAAWO,EAAQC,QAAQrM,EAAKmM,UAAY,kCAHtClB,IAOnBW,8MACFV,eAAiB,WACb,IAAMkB,EAAU,IAAIR,EAAJlT,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAA4T,KAChB,OAAO,IAAIV,EAAYQ,EAAQG,SAASD,EAAKJ,WAAa,kCAHxCjB,IAOpBU,8MACFT,eAAiB,WACb,IAAMkB,EAAU,IAAIT,EAAJjT,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAA8T,KAChB,OAAO,IAAIb,EAAcS,EAAQG,SAASC,EAAKN,WAAa,kCAHxCjB,IAOtBS,8MACFR,eAAiB,WACb,IAAMkB,EAAU,IAAIV,EAAJhT,OAAA4S,GAAA,EAAA5S,QAAA4S,GAAA,EAAA5S,CAAA+T,KAChB,OAAO,IAAIf,EAAWU,EAAQM,YAAYD,EAAKR,cAAgB,kCAH9ChB,IC0TV0B,GAvWf,SAAApU,GAAA,SAAAoU,IAAA,IAAAnU,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+T,GAAA,QAAA9T,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAiU,IAAAtT,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACI2K,MAAQ,CACJiJ,KAAM,EACN9P,cAAe,OACf8G,SAAU,GACVgE,aAAc,GACdrL,EAAG,GACH8M,EAAG,GACHvN,MAAOE,IAAM6Q,SAAS/Q,MAAMgR,QAC5BnN,YAAa,EACb9D,OAAQG,IAAMmD,YAAYY,0BAA0B+M,QACpDC,sBAAsB,EACtBpR,cAAeK,IAAM6Q,SAASlR,cAAcmR,QAC5ChF,UAAW9L,IAAMmD,YAAY4I,gBAAgB+E,QAC7C3H,UAAW,KACXE,QAAS,KACTmB,cAAe,KACf3F,QAAS,KACTC,QAAS,KACT2F,YAAa,KACbxC,qBAAsB,GACtBD,cAAehI,IAAMmD,YAAY6E,cAAc8I,QAC/ClO,WAAW,EACXM,MAAOlD,IAAMmD,YAAYD,MAAM4N,QAC/B1N,MAAOpD,IAAMmD,YAAYC,MAAM0N,QAC/BpO,SAAS,EAETiD,MAAO,GACPiF,aAAa,EACboG,QAAS,GACTtC,eAAWzO,EACXqN,UAAW,GACXC,UAAW,GACXrJ,SAAS,EACTG,eAAgB,KAChB4M,mBAAoB,IAnC5BxU,EAsCImB,SAAW,WAAM,IACNgT,EAAQnU,EAAKkL,MAAbiJ,KACPnU,EAAKgM,SAAS,CACVmI,KAAMA,EAAO,KAzCzBnU,EA6CI0E,SAAW,WAAM,IACNyP,EAAQnU,EAAKkL,MAAbiJ,KACPnU,EAAKgM,SAAS,CACVmI,KAAMA,EAAO,KAhDzBnU,EAoDIyU,cAAgB,WACZzU,EAAKgM,SAAS,CAACvE,QAAS,QArDhCzH,EAwDIuE,aAAe,SAAAmQ,GAAK,OAAI,SAAA1T,GACpBhB,EAAKgM,SAAL/L,OAAA0U,EAAA,EAAA1U,CAAA,GAAgByU,EAAQ1T,EAAEwD,OAAOjD,UAzDzCvB,EA4DI6E,qBAAuB,SAAA6P,GAAK,OAAI,SAAA1T,GAC5BhB,EAAKgM,SAAL/L,OAAA0U,EAAA,EAAA1U,CAAA,GAAgByU,EAAQ1T,EAAEwD,OAAOwB,YA7DzChG,EAgEIoM,gBAAkB,SAACsI,EAAOE,GACtB5U,EAAKgM,SAAS,CACVwI,mBAAmBvU,OAAA8I,EAAA,EAAA9I,CAAA,GACZD,EAAKkL,MAAMsJ,mBADAvU,OAAA0U,EAAA,EAAA1U,CAAA,GAEbyU,EAAQE,OApEzB5U,EAyEI6M,mBAAqB,SAAA6H,GACjB,IAAIxJ,EAAKjL,OAAA8I,EAAA,EAAA9I,CAAA,GAAOD,EAAKkL,cACdA,EAAK,mBAAuBwJ,GACnC1U,EAAKgM,SAASd,IA5EtBlL,EA+EI6U,cAAgB,SAACC,EAAGJ,GAChB,MAAU,KAANI,IACA9U,EAAKoM,gBAAgBsI,EAAO,sBACrB,IAlFnB1U,EAuFI+U,UAAY,SAACD,EAAGJ,GACZ,QAAIM,MAAMF,KACN9U,EAAKoM,gBAAgBsI,EAAO,oBACrB,IA1FnB1U,EA+FIiV,WAAa,SAACH,EAAGJ,GACb,OAAKI,EAAI,IAAO,IACZ9U,EAAKoM,gBAAgBsI,EAAO,uBACrB,IAlGnB1U,EAuGIkV,gBAAkB,SAACJ,EAAGJ,GAClB,OAAkC,OAA9BnR,IAAM6Q,SAASM,GAAOS,KAAgBL,EAAIvR,IAAM6Q,SAASM,GAAOS,KAChEnV,EAAKoM,gBAAgBsI,EAArB,kBAAA5T,OAAyCyC,IAAM6Q,SAASM,GAAOS,OACxD,GAEuB,OAA9B5R,IAAM6Q,SAASM,GAAOU,KAAgBN,EAAIvR,IAAM6Q,SAASM,GAAOU,MAChEpV,EAAKoM,gBAAgBsI,EAArB,kBAAA5T,OAAyCyC,IAAM6Q,SAASM,GAAOU,OACxD,IA9GnBpV,EAmHIqV,iBAAmB,SAAAC,GAAc,OAAI,SAACZ,EAAOI,GACrCQ,GAAgBtV,EAAK6M,mBAAmB6H,GAC5C1U,EAAKgM,SAAL/L,OAAA0U,EAAA,EAAA1U,CAAA,GAAgByU,EAAQI,MArHhC9U,EAwHIuV,cAAgB,SAAC5L,EAAK+K,EAAO1T,GAEzB,IAAM8T,EAAI9T,EAAEwD,OAAOjD,MACbiU,EAAmB7L,EAAIC,OAAO,SAAC6L,EAAOC,GAAR,QAChCD,IAAeC,EAAaZ,EAAGJ,IAAUe,KAAO,GACpDzV,EAAKqV,kBAAkBG,EAAvBxV,CAAyC0U,EAAOI,IA7HxD9U,EAgII8G,wBAA0B,SAAA4N,GAAK,OAAI,SAAA1T,GAC/BhB,EAAKuV,cAAc,CAACvV,EAAK6U,cAAe7U,EAAK+U,UAAW/U,EAAKkV,iBAAmBR,EAAO1T,KAjI/FhB,EAoII+G,+BAAiC,SAAA2N,GAAK,OAAI,SAAA1T,GACtChB,EAAKuV,cAAc,CAACvV,EAAK6U,cAAe7U,EAAKiV,WAAYjV,EAAK+U,UAAW/U,EAAKkV,iBAAmBR,EAAO1T,KArIhHhB,EAwII2V,YAAc,iBAAM,CAAC,CAAC,SAAU3V,EAAKkL,MAAMhI,eACvC,CAAC,eAAgBlD,EAAKkL,MAAMhE,aAC5B,CAAC,QAASlH,EAAKkL,MAAM7H,OACrB,CAAC,KAAMrD,EAAKkL,MAAMoJ,sBAClB,CAAC,SAAUtU,EAAKkL,MAAM9H,SAAUtC,OAChC,CAAC,CAAC,YAAad,EAAKkL,MAAM/E,YAAYrF,OAClCd,EAAKkL,MAAM/E,UAAY,CACf,CAAC,SAAUnG,EAAKkL,MAAMvE,OACtB,CAAC,SAAU3G,EAAKkL,MAAMzE,OACtB,CAAC,WAAYzG,EAAKkL,MAAMjF,UAC1B,MAlJlBjG,EAsJI4V,6BAtJJ,eAAAC,EAAA5V,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KAsJmC,SAAApC,EAAO8B,GAAP,OAAAzB,EAAA1I,EAAA2I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAU,OAAA,SACpBlB,EAAiB+B,GACnBO,MAAM,SAAAnL,GAIH,MAHAhB,EAAKgM,SAAS,CAACpE,eAAgB,YAC/B5H,EAAK0E,WACL1E,EAAKyU,gBACCzT,IAETqL,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAIT,MAHAvM,EAAKgM,SAAS,CAACpE,eAAgB,WAC/B5H,EAAK0E,WACL1E,EAAKyU,gBACC,IAAI/R,EAAM,cAEhB,OAAO4J,EAASE,UAfD,wBAAAnC,EAAAW,SAAAlB,MAtJnC,gBAAAgM,GAAA,OAAAD,EAAAhV,MAAAV,KAAAE,YAAA,GAAAL,EA2KI+V,sBA3KJ9V,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KA2K4B,SAAA8J,IAAA,IAAArK,EAAAC,EAAA,OAAAzB,EAAA1I,EAAA2I,KAAA,SAAA6L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,OAEdoB,EAAWjC,EACb,CAAC,CAAC,YAAa1J,EAAKkL,MAAMC,UACtB,CAAC,OAAQnL,EAAKkL,MAAMK,eACpB,CAAC,YAAaiH,GAAMe,iBAAiBvT,EAAKkL,MAAM6C,gBAChD,CAAC,UAAWyE,GAAMe,iBAAiBvT,EAAKkL,MAAM8C,eAC5ClN,OAAOd,EAAK2V,gBAGhB/J,EAAWC,IAAIC,eAAiBD,IAAIqK,gBAAkBvK,EAE5DxH,QAAQC,IAAIwH,GAEZ5L,EAAKgM,SAAS,CAACvE,SAAS,GAAxBxH,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KAA+B,SAAAiK,IAAA,OAAAhM,EAAA1I,EAAA2I,KAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OAC3BvK,EAAK4V,6BAA6BhK,GAC7BS,KAAK,SAAAI,GACFtI,QAAQC,IAAI,WAAYqI,GAExB,IACI4J,EAAW5J,EAAM,MAAUnK,IAAI,SAAAwB,GAAC,OAAIwS,OAAOxS,KAC3CyS,EAAQ9J,EAAM,GAAOnK,IAAI,SAAAwB,GAAC,OAAIwS,OAAOxS,KACrC0S,EAAWF,OAAO7J,EAAM,OAE5BzM,EAAKgM,SAAS,CACVlI,EAAG2I,EAAM,MACTmE,EAAGnE,EAAM,EACTvD,MAAOmN,EACP9B,QAASgC,EACTtE,UAAWuE,EACX3F,UAAW5H,EAAWoN,EAAUE,EAAO,MACvCzF,UAAW7H,EAAWoN,EAAUE,EAAO,MACvC9O,SAAS,MAEd0E,MAAM,SAAC/E,GACVjD,QAAQC,IAAIgD,KArBW,wBAAAgP,EAAApL,SAAAmL,OAdX,wBAAAF,EAAAjL,SAAAgL,MA3K5BhW,EAmNIyW,+BAnNJxW,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KAmNqC,SAAAwK,IAAA,IAAA/K,EAAAC,EAAA,OAAAzB,EAAA1I,EAAA2I,KAAA,SAAAuM,GAAA,cAAAA,EAAArM,KAAAqM,EAAApM,MAAA,OAG7BvK,EAAKkL,MAAM0F,EAAI5Q,EAAKkL,MAAMiE,aAAayH,QAAQ,2BAA4B,KACtEC,MAAM,KACNhT,OAAO,SAAAC,GAAC,MAAU,KAANA,IAEX6H,EAAWjC,EAAoB,CAAC,CAAC,cAAe1J,EAAKkL,MAAM0F,IAAI9P,OAAOd,EAAK2V,gBAE3E/J,EAAWC,IAAIC,eAAiBD,IAAIiL,yBAA2BnL,EAErExH,QAAQC,IAAIwH,GAEZ5L,EAAKgM,SAAS,CAACvE,SAAS,GAAxBxH,OAAAgM,EAAA,EAAAhM,CAAAkK,EAAA1I,EAAAyK,KAA+B,SAAA6K,IAAA,OAAA5M,EAAA1I,EAAA2I,KAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,OAC3BvK,EAAK4V,6BAA6BhK,GAC7BS,KAAK,SAAAI,GACFtI,QAAQC,IAAI,WAAYqI,GAExB,IACI4J,EAAW5J,EAAM,MAAUnK,IAAI,SAAAwB,GAAC,OAAIwS,OAAOxS,KAC3CyS,EAAQ9J,EAAM,GAAOnK,IAAI,SAAAwB,GAAC,OAAIwS,OAAOxS,KACrC0S,EAAWF,OAAO7J,EAAM,OAE5BzM,EAAKgM,SAAS,CACVlI,EAA4B,MAAzB9D,EAAKkL,MAAMmE,UACVmD,GAAMQ,WAAWhT,EAAKkL,MAAMmE,UAAWrP,EAAKkL,MAAMwB,WAAWgG,aAAa2D,EAAS/V,QAAQgC,IAAIkQ,GAAMe,kBACnG/S,MAAMuS,KAAK,CAACzS,OAAQ+V,EAAS/V,QAAS,SAAC2W,EAAG5N,GAAJ,OAAUA,EAAI,IAC1DH,MAAOmN,EACP9B,QAASgC,EACTtE,UAAWuE,EACX3F,UAAW5H,EAAWoN,EAAUE,EAAO,MACvCzF,UAAW7H,EAAWoN,EAAUE,EAAO,MACvC9O,SAAS,MAEd0E,MAAM,SAAC/E,GACVjD,QAAQC,IAAIgD,KAtBW,wBAAA4P,EAAAhM,SAAA+L,OAbF,wBAAAJ,EAAA3L,SAAA0L,MAnNrC1W,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAiU,EAAApU,GAAAG,OAAAoB,EAAA,EAAApB,CAAAiU,EAAA,EAAA5S,IAAA,SAAAC,MAAA,WA4Pa,IAAAgG,EAAApH,KAAA+W,EAC6E/W,KAAK+K,MAAhFiE,EADF+H,EACE/H,aAAczC,EADhBwK,EACgBxK,UAAWE,EAD3BsK,EAC2BtK,QAASyC,EADpC6H,EACoC7H,UAAWhL,EAD/C6S,EAC+C7S,cAAe8J,EAD9D+I,EAC8D/I,YAD9DgJ,EAEiGhX,KAAK+K,MAApG6C,EAFFoJ,EAEEpJ,cAAeC,EAFjBmJ,EAEiBnJ,YAAa5F,EAF9B+O,EAE8B/O,QAASC,EAFvC8O,EAEuC9O,QAAS8C,EAFhDgM,EAEgDhM,SAAUI,EAF1D4L,EAE0D5L,cAAeC,EAFzE2L,EAEyE3L,qBACxE4L,EAAyB,CAACjI,eAAczC,YAAWE,UAASyC,YAAWhL,gBAAe8J,eACtFkJ,EAAyB,CAACtJ,gBAAeC,cAAa5F,UAASC,UAAS8C,WAAUI,gBAAelH,gBAAemH,uBAAsB2C,eAJvImJ,EAuBDnX,KAAK+K,MAhBLiJ,EAPCmD,EAODnD,KACA9Q,EARCiU,EAQDjU,MACA6D,EATCoQ,EASDpQ,YACA9D,EAVCkU,EAUDlU,OACAkR,EAXCgD,EAWDhD,qBACApR,EAZCoU,EAYDpU,cACAiD,EAbCmR,EAaDnR,UACAM,EAdC6Q,EAcD7Q,MACAE,EAfC2Q,EAeD3Q,MACAV,EAhBCqR,EAgBDrR,QACAiD,EAjBCoO,EAiBDpO,MACA+I,EAlBCqF,EAkBDrF,UACAuC,EAnBC8C,EAmBD9C,mBAKE+C,EAA2B,CAC7BpI,eACA9L,QACA6D,cACA9D,SACAkR,uBACApR,gBACAiD,YACAM,QACAE,QACAV,UACAwB,QAnCC6P,EAoBD7P,QAgBA+P,YApCCF,EAqBDE,YAgBAnT,gBACAuD,eAtCC0P,EAsBD1P,gBAuBEtD,EAAW,CACbC,aAFApE,KAFAoE,aAIcuC,wBAFd3G,KAFc2G,wBAIyBC,+BAFvC5G,KAFuC4G,+BAKvClC,qBAHA1E,KADA0E,qBAIsBwQ,iBAHtBlV,KADsBkV,kBA3CrBoC,EAkDiCtX,KAAK+K,MACrCiF,EAAiB,CAACrM,EAnDnB2T,EAkDE3T,EACoB8M,EAnDtB6G,EAkDK7G,EACoB1H,QAAO+I,YAAW9D,cAAa0C,UAnDxD4G,EAkDQ5G,UAC2DC,UAnDnE2G,EAkDmB3G,UAC2DzB,YAAW3C,YAAWrI,gBAAe8G,YAExH,OACI3J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACM,WACE,OAAQqP,GACJ,KAAK,EACD,OAAO3S,EAAAC,EAAAC,cAACgW,GAAD,CACHvW,SAAUoG,EAAKpG,SACfuD,SAAU6C,EAAK7C,SACf0H,gBAAiB7E,EAAK6E,gBACtBS,mBAAoBtF,EAAKsF,mBACzBtI,aAAcgD,EAAKhD,aACnBM,qBAAsB0C,EAAK1C,qBAC3B4K,eAAgB2H,EAChB1H,eAAgB2H,EAChB5T,OAAQ+Q,IAEhB,KAAK,EACD,OACIhT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACItD,EAAAC,EAAAC,cAACiW,EAAD,CACIxW,SAAUoG,EAAKpG,SACfuD,SAAU6C,EAAK7C,SACfR,WAAYqD,EAAKkN,cACjBnQ,SAAUA,EACVN,WAAYuD,EAAKkP,+BACjBxS,eAAgBsD,EAAKwO,sBACrB5S,OAAQoU,EACR9T,OAAQ+Q,KAIxB,KAAK,EACD,OACIhT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACKyC,EAAK2D,MAAMzD,QAAU8K,KAAY/Q,EAAAC,EAAAC,cAACkW,GAAD,CACMlT,SAAU6C,EAAK7C,SACfyL,eAAgBA,KAKpE,QACI,OAAO3O,EAAAC,EAAAC,cAACmW,EAAD,CACH1W,SAAUoG,EAAKpG,SACfoD,aAAcgD,EAAKhD,gBA1CjC,QAnTlB2P,EAAA,CAA8BhS,aC+B9B,IAAMH,GAAS,CACX+V,OAAQ,CACJ9S,SAAU,QACV2J,gBAAiB,UACjBoJ,UAAW,oBACXC,UAAW,SACXC,QAAS,OACT/J,UAAW,OACXgK,SAAU,QACVC,UAAW,SACXC,KAAM,IACNC,OAAQ,IACRrR,MAAO,QAEXsR,QAAS,CACLpK,UAAW,MACXlJ,SAAU,YAKHuT,GA1Df,WAEI,OACI/W,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACAtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAlB,uCAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,kIAC4EF,EAAAC,EAAAC,cAAA,KAAG8C,OAAO,SACPmJ,IAAI,sBACJC,KAAK,+DAFR,4BAD5E,MAQJpM,EAAAC,EAAAC,cAAC8W,GAAD,OAEJhX,EAAAC,EAAAC,cAAA,OAAKI,MAAOC,GAAO+V,QACftW,EAAAC,EAAAC,cAAA,KAAGkM,KAAK,4CAA4CD,IAAI,sBAAsBnJ,OAAO,UAArF,gBADJ,mBAGIhD,EAAAC,EAAAC,cAAA,KAAGkM,KAAK,6CAA6CD,IAAI,sBAAsBnJ,OAAO,UAAtF,gBAHJ,mBAKIhD,EAAAC,EAAAC,cAAA,KAAGkM,KAAK,mDAAmDD,IAAI,sBAC5DnJ,OAAO,UADV,iBAGAhD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,MAAOC,GAAOuW,SACf9W,EAAAC,EAAAC,cAAA,KAAGkM,KAAK,4BAA4BD,IAAI,sBAAsBnJ,OAAO,UAArE,iBCvBDiU,GAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtCC,EAAA5X,EAAA,GAAAqL,KAAAuM,EAAAC,KAAA,WAAqBxM,KAAK,SAAAwJ,GAA+C,IAA7CiD,EAA6CjD,EAA7CiD,OAAQC,EAAqClD,EAArCkD,OAAQC,EAA6BnD,EAA7BmD,OAAQC,EAAqBpD,EAArBoD,OAAQC,EAAarD,EAAbqD,QACxDJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDpBS,IAASC,OACL5X,EAAAC,EAAAC,cAACF,EAAAC,EAAM4X,WAAP,KACI7X,EAAAC,EAAAC,cAAC4X,GAAD,OAEJC,SAASC,eAAe,SAM5Bf","file":"static/js/main.ee600e73.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic, or</li>\r\n                            <li>A time series of your choosing, to be pasted into a field</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field, alertErrors} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport Error from \"./Error\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && !this.isDisabled[field]();\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, values, cancelLoad} = this.props;\r\n\r\n        console.log(\"errors\", this.errorsDisplayedCount());\r\n\r\n        if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\") getFREDResults();\r\n            else if (values.dataInputType === \"USER\") getResults();\r\n            this.props.nextStep();\r\n        }\r\n        else {\r\n            this.props.handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_P\"}});\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Transformations</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        const handleRollingWindowChange = () => {\r\n            return handleIntegerNumberFieldChange('rollingWindow')\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title={(() => {\r\n                                        if(values.deltaSelect === 0) {\r\n                                            return \"Signal-to-Noise Ratio according to user input\"\r\n                                        } else if(values.deltaSelect === 1) {\r\n                                            return \"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                        } else if(values.deltaSelect === 2) {\r\n                                            return \"Signal-to-Noise Ratio according to KMW refinement\"\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search (with grid increments of 0.0005)\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    defaultValue={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 290}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning\"\r\n                                    title={(() => {\r\n                                        if(values.demean === 'sm') {\r\n                                            return \"Estimate constant drift\"\r\n                                        } else if(values.demean === 'dm') {\r\n                                            return \"Estimate time-varying drift using rolling window\"\r\n                                        } else if(values.demean === 'idm') {\r\n                                            return \"Iteratively estimate time-varying drift removing cycle and using rolling window according to KMW refinement\"\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only active when using dynamic demeaning\"\r\n                                    onChange={handleRollingWindowChange()}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={alertErrors[this.props.values.alertErrorType]}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   title={props.title}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row)\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nasync function fetchWithTimeout(url) {\r\n    const\r\n        controller = new AbortController(),\r\n        timeoutID = setTimeout(() => controller.abort(), 20000), // 20 second timeout\r\n        f = await fetch(url, {signal: controller.signal});\r\n    clearTimeout(timeoutID);\r\n    return f\r\n}\r\n\r\nexport {colsToRows, confIntZip, fetchWithTimeout, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        loading: false,\r\n        timeoutError: false,\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetchWithTimeout(finalURL)\r\n                .catch(e => {\r\n                    this.setState(\r\n                        {\r\n                            timeoutError: true,\r\n                            loading: false,\r\n                        });\r\n                    this.props.setErrorMessage(\"mnemonic\", \"Internal error: Come back later\");\r\n                    throw e;\r\n                })\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.setState(\r\n                            {\r\n                                timeoutError: false,\r\n                                loading: false,\r\n                                });\r\n                        this.props.setErrorMessage(\"mnemonic\", \"The mnemonic is not available\");\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        startDate = new Date(result[\"start_date\"]),\r\n                        endDate = new Date(result[\"end_date\"]);\r\n\r\n                    this.setState({\r\n                        timeoutError: false,\r\n                        loading: false,\r\n                    });\r\n                    this.props.deleteErrorMessage(\"mnemonic\");\r\n                    this.props.handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    this.props.handleChange('startDateFRED')({target: {value: startDate}});\r\n                    this.props.handleChange('endDateFRED')({target: {value: endDate}});\r\n                    this.props.handleChange('minDate')({target: {value: startDate}});\r\n                    this.props.handleChange('maxDate')({target: {value: endDate}});\r\n                    this.props.handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    this.props.handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const showText = () => !(this.props.errors[\"mnemonic\"] === undefined && this.props.values.mnemonic === \"\") || this.state.timeoutError === true;\r\n        console.log(showText())\r\n        const mnemonicHelperText = () => {\r\n            if (!showText()) {\r\n                return \"​\";\r\n            }\r\n            console.log(\"test\")\r\n            console.log(this.props.errors['mnemonic'])\r\n            if(this.props.errors['mnemonic'] !== undefined) {\r\n                return this.props.errors['mnemonic'];\r\n            } else return \"The mnemonic is available\";\r\n        };\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         title=\"Press enter or click 'check' to check the availability of the mnemonic\"\r\n                                         color={this.props.errors[\"mnemonic\"] === undefined && this.props.values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={this.props.errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={e => this.setState({mnemonic: e.target.value}) }\r\n                                         onKeyDown={e => e.keyCode === 13 /* 'enter' key */ ? this.checkAvailability(e) : null}\r\n                                         defaultValue={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <Divider light\r\n                             title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                             style={{fontSize: 'large'}}>Options</Divider>\r\n\r\n                    <Grid container direction=\"column\" sx={{minHeight: 350,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              title={\"Series' start date (inclusive). Determined by FRED\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              title={\"Series' end date (inclusive). Determined by FRED\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: averaging)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    defaultValue={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to report 95% confidence intervals in graph and CSV\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below. Each observation must start on the next line. Pasting a time series from a CSV will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={handleChange('unprocessedY')}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers\r\n                    // (newline or line break not functioning in Safari)\r\n                    placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    defaultValue={values.unprocessedY}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"450px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <Divider light\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      title={\"Series' start date (inclusive). The end date is determined based on frequency\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                defaultValue={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = (e) => {\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => this.props.errors[\"mnemonic\"] !== undefined && this.props.valuesUserData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => this.props.errors[\"unprocessedY\"] !== undefined && this.props.valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) this.props.deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) this.props.deleteErrorMessage(\"unprocessedY\");\r\n\r\n        this.props.handleChange('dataInputType')(e);\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}/>\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.props.nextStep}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [(plotPageValues.dataInputType === \"FRED\" ? `${plotPageValues.mnemonic}_` : \"\" ) + \"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'}}}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc.toFixed(4) /* delta reported to 4 d.p. */} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateS extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new YearlyDate(date)\r\n            case \"q\":\r\n                return new QuarterlyDate(date)\r\n            case \"m\":\r\n                return new MonthlyDate(date)\r\n            case \"w\":\r\n                return new WeeklyDate(date)\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static packWithZero = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = (date) => `${date.getFullYear()}-${DateS.packWithZero(date.getMonth() + 1)}-${DateS.packWithZero(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {\r\n        throw new Error(\"Child class must implement this method\");\r\n    };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass YearlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new YearlyDate(this);\r\n        return new YearlyDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, YearlyDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {confIntZip, fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: true, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        alertErrorType: null, // overarching alert text\r\n        fieldErrorMessages: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            fieldErrorMessages: {\r\n                ...this.state.fieldErrorMessages,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let state = {...this.state};\r\n        delete state[\"fieldErrorMessages\"][input];\r\n        this.setState(state);\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (field.freeText[input].min !== null && v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (field.freeText[input].max !== null && v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    fetchResultWithErrorHandling = async (finalURL) => {\r\n        return fetchWithTimeout(finalURL)\r\n            .catch(e => {\r\n                this.setState({alertErrorType: \"TIMEOUT\"});\r\n                this.prevStep();\r\n                this.cancelLoading();\r\n                throw e;\r\n            })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    this.setState({alertErrorType: \"SERVER\"});\r\n                    this.prevStep();\r\n                    this.cancelLoading();\r\n                    throw new Error(\"bad status\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateS.getTruncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateS.getTruncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            fieldErrorMessages,\r\n            loading,\r\n            serverError,\r\n            alertErrorType,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType,\r\n            alertErrorType,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate, dataInputType, mnemonic};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={fieldErrorMessages}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={fieldErrorMessages}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://github.com/crstnn\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}