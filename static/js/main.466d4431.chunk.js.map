{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/Error.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","createMenuItems","option","map","item","MenuItem","text","ParametersForm","isDisabled","rollingWindow","values","demean","fixedDelta","deltaSelect","isError","field","undefined","errorMessage","isErrorDisplaying","errorsDisplayedCount","keys","errors","filter","x","_this$props","getResults","getFREDResults","cancelLoad","dataInputType","back","prevStep","preAnalysisTransformations","_this$props2","handlers","handleChange","handleCheckboxChange","Fragment","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","spacing","alignItems","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","paddingBottom","TextField","error","helperText","iterativeDynamicDemeaning","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","updateDate","target","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","Error","Alert","severity","onClose","close","tagName","FREDDataForm","state","mnemonic","isBadMnemonic","loading","frequency","startDate","endDate","availableFrequencies","createFilteredFrequencies","items","frequencyFRED","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","status","json","result","console","log","Date","catch","stop","mnemonicInput","minHeight","FormGroup","row","JoinedTextField","color","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","_this2","rel","href","pickers_CustomDatePicker","d","marginBottom","marginTop","dispCycleCI","headingFormControlLabel","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequencyManual","DataForm","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","textDecoration","filename","getCSVData","Loading","DateS","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","YearlyDate","QuarterlyDate","MonthlyDate","WeeklyDate","packWithZero","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","cancelLoading","input","defineProperty","setErrorMessage","message","deleteErrorMessage","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","bnfParamArr","getResultsForFREDData","_callee2","_context2","bnfFredDataSlug","cycleRes","Number","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee4","_context4","replace","split","bnfUserSpecifiedDataSlug","_callee3","_context3","_","_this$state","dataFormPageValues","_this$state2","serverError","parametersFormPageValues","_this$state3","components_DataForm","components_Error","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.466d4431.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series of your choosing to be pasted into a field, or</li>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        fixedDelta: () => this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.values.errorMessage[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && !this.isDisabled[field]();\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, values, cancelLoad} = this.props;\r\n\r\n        if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\"){\r\n                getFREDResults();\r\n            } else if (values.dataInputType === \"USER\"){\r\n                getResults();\r\n            }\r\n        }\r\n        else\r\n            cancelLoad();\r\n\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider light><FormControl variant=\"standard\">\r\n                        <FormControlLabel\r\n                            label={<Typography\r\n                                style={{fontSize: 'x-large'}}>Transformations</Typography>}\r\n                            title=\"Transformations are applied in the order below and are done prior to estimation. Check this box to apply them.\"\r\n                            control={<Checkbox\r\n                                onChange={handleCheckboxChange('transform')}\r\n                                // style={{transform: \"scale(1.25)\"}}\r\n                                checked={values.transform}/>}\r\n                        />\r\n                    </FormControl></Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" spacing={4}\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = values.errorMessage;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={2}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleNumberFieldChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={this.isDisabled['fixedDelta']()}\r\n                                    error={this.isErrorDisplaying('fixedDelta')}\r\n                                    helperText={this.isErrorDisplaying('fixedDelta') ?\r\n                                        errors['fixedDelta'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 290}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning method\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer.\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.preAnalysisTransformations()}\r\n                {this.bnFilterParameters()}\r\n                <br/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 30px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n    // const [startDate, setStartDate] = React.useState(props.startDate);\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row)\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nexport {colsToRows, confIntZip, pairArrayToParamStr}","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: \"\",\r\n        isBadMnemonic: true,\r\n        loading: false,\r\n        frequency: \"\",\r\n        minDate: null,\r\n        maxDate: null,\r\n        startDate: null,\r\n        endDate: null,\r\n        availableFrequencies: [],\r\n    }\r\n\r\n    continue = e => {\r\n        this.props.handleChange('mnemonic')({target: {value: this.state.mnemonic}})\r\n        this.props.handleChange('frequency')({target: {value: this.state.frequency}})\r\n        this.props.handleChange('startDate')({target: {value: this.state.startDate}})\r\n        this.props.handleChange('endDate')({target: {value: this.state.endDate}})\r\n        this.props.nextStep(e);\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.state.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            values = this.props.values,\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.setState(\r\n                            {\r\n                                isBadMnemonic: true,\r\n                                loading: false,\r\n                                });\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        startDate = new Date(result[\"start_date\"]),\r\n                        endDate = new Date(result[\"end_date\"]);\r\n\r\n                    this.setState({\r\n                        minDate: startDate,\r\n                        maxDate: endDate,\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        availableFrequencies: result[\"available_frequencies\"],\r\n                        loading: false,\r\n                        isBadMnemonic: false,\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const mnemonicHelperText = () => {return this.state.isBadMnemonic ? \"The mnemonic is not available\" : \"The mnemonic is available\"}\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         color={this.state.isBadMnemonic ? \"error\" : \"success\"} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         onChange={(e) => this.setState({mnemonic: e.target.value}) }\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <Divider light\r\n                             title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                             style={{fontSize: 'large'}}>Options</Divider>\r\n\r\n                    <Grid container direction=\"column\" sx={{minHeight: 500,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={2}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              date={this.state.startDate}\r\n                                              minDate={this.state.minDate}\r\n                                              maxDate={this.state.maxDate}\r\n                                              updateDate={d => this.setState({startDate: d.target.value})}/>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              date={this.state.endDate}\r\n                                              minDate={this.state.minDate}\r\n                                              maxDate={this.state.maxDate}\r\n                                              updateDate={d => this.setState({startDate: d.target.value})}/>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency\"\r\n                                    onChange={d => this.setState({frequency: d.target.value})}\r\n                                    defaultValue={this.state.frequency}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                style={styles.button}\r\n                                onClick={this.props.prevStep}\r\n                            >Back</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={styles.button}\r\n                                onClick={this.continue}\r\n                            >Continue</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 30px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below.\r\n                    <br/>\r\n                    Each line must contain a numerical value. Each observation must start on the next line.\r\n                    Pasting a time series from a CSV will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={20}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={handleChange('unprocessedY')}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers\r\n                    // (newline or line break not functioning in Safari)\r\n                    placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    defaultValue={values.unprocessedY}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"450px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <Divider light\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop: 4}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={d => this.props.handleChange('startDate')(d)}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                defaultValue={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.props.nextStep}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 30px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from 'react';\r\nimport {\r\n    Divider,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {ToggleButton, ToggleButtonGroup} from \"@mui/lab\";\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>\r\n                        <ToggleButtonGroup\r\n                            color=\"primary\"\r\n                            value={values.dataInputType}\r\n                            exclusive\r\n                            onChange={handleChange('dataInputType')}\r\n                        >\r\n                            <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                            <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Divider>\r\n                </div>\r\n\r\n                {(() => {\r\n                    switch (values.dataInputType) {\r\n                        case \"USER\":\r\n                            return <UserDataForm\r\n                                    nextStep={this.continue}\r\n                                    prevStep={this.back}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={values}/>\r\n                        case \"FRED\":\r\n                            return <FREDDataForm\r\n                                nextStep={this.continue}\r\n                                prevStep={this.back}\r\n                                handleChange={handleChange}\r\n                                handleCheckboxChange={handleCheckboxChange}\r\n                                values={values}/>\r\n                    }\r\n                })()}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DataForm","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [\"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'}}}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"20px 30px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateS extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"y\":\r\n                return new YearlyDate(date)\r\n            case \"q\":\r\n                return new QuarterlyDate(date)\r\n            case \"m\":\r\n                return new MonthlyDate(date)\r\n            case \"w\":\r\n                return new WeeklyDate(date)\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static packWithZero = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = (date) => `${date.getFullYear()}-${DateS.packWithZero(date.getMonth() + 1)}-${DateS.packWithZero(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {\r\n        throw new Error(\"Child class must implement this method\");\r\n    };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass YearlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new YearlyDate(this);\r\n        return new YearlyDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, YearlyDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {confIntZip, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        fixedDelta: field.freeText.fixedDelta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        transform: false, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.prevStep();\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            errorMessage: {\r\n                ...this.state.errorMessage,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let state = {...this.state};\r\n        delete state[\"errorMessage\"][input];\r\n        this.setState(state);\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['fixed_delta', this.state.fixedDelta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequency],\r\n                ['obs_start', DateS.getTruncatedDate(this.state.startDate)],\r\n                ['obs_end', DateS.getTruncatedDate(this.state.endDate)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoading();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoading();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, mnemonic, frequency, dataInputType} = this.state;\r\n        const dataFormPageValues = {unprocessedY, startDate, endDate, mnemonic, frequency, dataInputType};\r\n\r\n        const {\r\n            step,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            errorMessage,\r\n            loading,\r\n            serverError,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            errorMessage,\r\n            loading,\r\n            serverError,\r\n            dataInputType\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, dispCycleCI, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate,};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                values={dataFormPageValues}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading === null ?\r\n                                        <Error\r\n                                            tagName={\"During the running of the BN filter a problem occurred. Please check that the inputs are appropriate.\"}\r\n                                            close={() => {\r\n                                                this.setState({loading: false})\r\n                                            }}/>\r\n                                        : null}\r\n\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return Loading();\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {/* error */}\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some\r\n                    features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://github.com/crstnn\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}