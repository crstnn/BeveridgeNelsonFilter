{"version":3,"sources":["components/StartMenu.js","components/FormFilterParameters.js","pickers/CustomDatePicker.js","components/UserData.js","components/RenderedPlot.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","FormFilterParameters","getResults","back","prevStep","_this$props","values","handleChange","Divider","fontSize","width","alignItems","display","paddingBottom","Grid","container","justifyContent","spacing","item","xs","FormControl","sx","minWidth","InputLabel","Select","label","title","onChange","defaultValue","deltaSelect","MenuItem","TextField","fixedDelta","disabled","demean","type","window","isAutomaticWindow","CustomDatePicker","_React$useState","React","useState","Date","_React$useState2","slicedToArray","setValue","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","InputProps","newValue","isDisabled","renderInput","params","UserData","handleCheckboxChange","getState","Fragment","m","paddingRight","multiline","rows","InputLabelProps","shrink","placeholder","join","unprocessedY","light","direction","minHeight","paddingTop","pickers_CustomDatePicker","periodicity","marginBottom","marginTop","FormControlLabel","control","Checkbox","size","checked","dispCycleCI","Typography","headingFormControlLabel","transform","takeLog","dCode","pCode","RenderedPlot","plotPageValues","UserForm","colsToRows","cycle","cycleCILB","undefined","cycleCIUB","xAxis","from","_","i","console","log","react_plotly_default","layout","autosize","data","x","y","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","filename","getCSVData","state","step","iterativeBackcasting","dateObj","cycleCI","loading","baseBackendURL","bnfUserSpecifiedDataSlug","bnfFredDataSlug","fredDataSlug","setState","input","defineProperty","target","setCycle","d","asyncToGenerator","regenerator_default","mark","_callee2","processedY","statePairToParam","paramStr","finalURL","wrap","_context2","prev","next","replace","split","filter","paramName","currPair","toString","reduce","_callee","_context","fetch","then","response","status","Error","json","result","cycleRes","map","Number","ciRes","deltaRes","confIntZip","catch","error","stop","_this2","_this$state","components_UserData","Alert","severity","onClose","components_FormFilterParameters","react_loader_spinner_esm","height","components_RenderedPlot","components_StartMenu","ci","bound","_len2","columns","_key2","rowLength","colLength","retArr","c","row","r","push","App","rel","href","components_UserForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4ca5645a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>We will guide you through the steps to perform trend-cycle decomposition on either (i) a time\r\n                        series of your choosing to be pasted into a field or (ii) a time series from the Federal Reserve\r\n                        Economic Database (FRED) using its mnemonic. Note that there is additional information provided\r\n                        when hovering over the options in the subsequent pages. The cycle is reported and can be\r\n                        downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default StartMenu","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\n\r\nexport class FormFilterParameters extends Component {\r\n\r\n    continue = e => {\r\n        const {getResults} = this.props;\r\n        e.preventDefault();\r\n        getResults();\r\n        this.props.nextStep();\r\n\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>BN Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" spacing={4}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >\r\n                                    <MenuItem value={0}>Fixed Delta</MenuItem>\r\n                                    <MenuItem value={1}>Maximize Amplitude-to-Noise Ratio</MenuItem>\r\n                                    <MenuItem value={2}>Minimize Stochastic Trend Volatility</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 50}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={values.deltaSelect !== 0}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 250}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Iterative Dynamic Demeaning\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >\r\n                                    <MenuItem value={\"sm\"}>Constant (Static Demeaning)</MenuItem>\r\n                                    <MenuItem value={\"dm\"}>Dynamic Demeaning</MenuItem>\r\n                                    <MenuItem value={\"idm\"}>Iterative Dynamic Demeaning</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 100}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    type=\"number\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer\"\r\n                                    onChange={handleChange('window')}\r\n                                    defaultValue={values.window}\r\n                                    disabled={values.isAutomaticWindow || values.demean === \"sm\"}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n                <br/>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 20\r\n    }\r\n}\r\n\r\nexport default FormFilterParameters","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n    const handleChange = (newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Time Series Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={value}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\n\r\nexport class UserData extends Component {\r\n\r\n\r\n    continue = e => {\r\n\r\n        e.preventDefault();\r\n        // process form\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange, getState} = this.props;\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Data and Transformations</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. The next observation must start on the next line (and\r\n                        so on). For example, pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            // Hacky newline fix that works for all browsers\r\n                            // (newline or line break not functioning in Safari)\r\n                            placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Display Options</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop:4}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={4}>\r\n                                <CustomDatePicker isDisabled={getState(\"periodicity\") === 0}/>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >\r\n                                        <MenuItem value={'y'}>Yearly</MenuItem>\r\n                                        <MenuItem value={'q'}>Quarterly</MenuItem>\r\n                                        <MenuItem value={'m'}>Monthly</MenuItem>\r\n                                        <MenuItem value={'w'}>Weekly</MenuItem>\r\n                                        <MenuItem value={0}>Undated/Unspecified</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                    <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                      title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                          checked={values.dispCycleCI}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <Divider light><FormControl variant=\"standard\">\r\n                            <FormControlLabel\r\n                                label={<Typography\r\n                                    style={styles.headingFormControlLabel}>Pre-Analysis Transformations</Typography>}\r\n                                title=\"Transformations are applied in the order below and are done prior to the BN Filter run\"\r\n                                control={<Checkbox\r\n                                    onChange={handleCheckboxChange('transform')}\r\n                                    checked={values.transform}/>}\r\n                            />\r\n                        </FormControl></Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\">\r\n                                    <FormControlLabel label=\"Natural Logarithm\"\r\n                                                      title=\"Logarithm to the base of Euler's number\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('takeLog')}\r\n                                                          checked={values.takeLog}\r\n                                                          disabled={!values.transform}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 330}}>\r\n                                    <InputLabel>Differencing Method</InputLabel>\r\n                                    <Select\r\n                                        title=\"Differencing method applied\"\r\n                                        onChange={handleChange('dCode')}\r\n                                        defaultValue={values.dCode}\r\n                                        disabled={!values.transform}\r\n                                    >\r\n                                        <MenuItem value={'nd'}>No Differencing (Levels)</MenuItem>\r\n                                        <MenuItem value={'d1'}>1 Period Difference</MenuItem>\r\n                                        <MenuItem value={'d4'}>4 Period Difference (for Quarterly Data)</MenuItem>\r\n                                        <MenuItem value={'d12'}>12 Period Difference (for Monthly Data)</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 330}}>\r\n                                    <InputLabel>Computed Percentages</InputLabel>\r\n                                    <Select\r\n                                        title=\"Percentage multiple applied\"\r\n                                        onChange={handleChange('pCode')}\r\n                                        defaultValue={values.pCode}\r\n                                        disabled={!values.transform}\r\n                                    >\r\n                                        <MenuItem value={'np'}>No Change</MenuItem>\r\n                                        <MenuItem value={'p1'}>Multiply by 100</MenuItem>\r\n                                        <MenuItem value={'p4'}>Multiply by 400 (Annualized Quarterly Rate)</MenuItem>\r\n                                        <MenuItem value={'p12'}>Multiply by 1200 (Annualized Monthly Rate)</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 30\r\n\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default UserData","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return UserForm.colsToRows(\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        const xAxis = Array.from({length: plotPageValues.cycle.length}, (_, i) => i + 1);\r\n\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <Plot layout={{autosize: true}}\r\n                  data={[\r\n\r\n                      {\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: xAxis,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink\r\n                        filename={\"BNF_cycle.csv\"}\r\n                        data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: 40\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport FormFilterParameters from \"./FormFilterParameters\";\r\nimport UserData from \"./UserData\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport {Circles} from \"react-loader-spinner\";\r\nimport {Alert} from '@mui/material';\r\n\r\nexport class UserForm extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        y: [], // time series\r\n        fixedDelta: 0.1,\r\n        deltaSelect: 2,\r\n        demean: 'sm',\r\n        iterativeBackcasting: true,\r\n        isAutomaticWindow: false,\r\n        window: 40,\r\n        // periodicity\r\n        periodicity: 'q',\r\n        dateObj: Object(),\r\n        // transforms to data before bnf\r\n        transform: false,\r\n        dCode: 'nd',\r\n        pCode: 'np',\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n    }\r\n\r\n    loading = true;\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n    bnfUserSpecifiedDataSlug = \"/bnf/user-specified-time-series\";\r\n    bnfFredDataSlug = \"/bnf/fred-time-series\";\r\n    fredDataSlug = \"/fred-time-series\";\r\n\r\n    static confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\n    static colsToRows = (...columns) => {\r\n\r\n        columns = columns.filter(x => x !== undefined)\r\n\r\n        // Pre-condition: All arrays are same length\r\n        const\r\n            rowLength = columns.length,\r\n            colLength = columns[0].length;\r\n\r\n        const retArr = [];\r\n\r\n        for (let c = 0; c < colLength; c++) {\r\n            const row = [];\r\n            for (let r = 0; r < rowLength; r++) {\r\n                row.push(columns[r][c]);\r\n            }\r\n            retArr.push(row)\r\n        }\r\n\r\n        return retArr;\r\n\r\n\r\n    };\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    getState = input => {\r\n        return this.state[input];\r\n    }\r\n\r\n    setCycle = input => d => {\r\n        this.setState({[input]: d});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    getResults = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        const processedY = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n        console.log(processedY)\r\n\r\n        const statePairToParam = (paramName, currPair) =>\r\n            paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\n        const paramStr =\r\n            [['window', this.state.window],\r\n                ['delta_select', this.state.deltaSelect],\r\n                ['fixed_delta', this.state.fixedDelta],\r\n                ['ib', this.state.iterativeBackcasting],\r\n                ['demean', this.state.demean],\r\n                ['processed_y', processedY]].concat(\r\n                [['transform', this.state.transform]].concat(\r\n                    this.state.transform ? [\r\n                            ['p_code', this.state.pCode],\r\n                            ['d_code', this.state.dCode],\r\n                            ['take_log', this.state.takeLog]]\r\n                        : []\r\n                )\r\n            )\r\n                .reduce(statePairToParam, '?');\r\n\r\n        const finalURL = this.baseBackendURL + this.bnfUserSpecifiedDataSlug + paramStr\r\n\r\n        console.log(finalURL)\r\n\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.setState({\r\n                            loading: null,\r\n                        })\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: UserForm.confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: UserForm.confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {step} = this.state;\r\n        const {\r\n            y,\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            window,\r\n            periodicity,\r\n            dateObj,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            dispCycleCI,\r\n            cycleCILB,\r\n            cycleCIUB,\r\n        } = this.state;\r\n        const values = {\r\n            y,\r\n            unprocessedY,\r\n            periodicity,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            isAutomaticWindow,\r\n            window,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            dispCycleCI,\r\n        };\r\n\r\n        const plotPageValues = {y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, periodicity, dateObj}\r\n\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return (\r\n                                <UserData\r\n                                    nextStep={this.nextStep}\r\n                                    prevStep={this.prevStep}\r\n                                    handleChange={this.handleChange}\r\n                                    handleCheckboxChange={this.handleCheckboxChange}\r\n                                    getState={this.getState}\r\n                                    values={values}\r\n                                />\r\n                            )\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === null) {\r\n                                            return (\r\n                                                <div style={{margin: \"2px 20%\"}}>\r\n                                                    <Alert variant=\"filled\" severity=\"error\"\r\n                                                           onClose={() => {\r\n                                                               this.setState({loading: false})\r\n                                                           }}>\r\n                                                        During the running of the BN filter a problem occurred.\r\n                                                        Please check that the inputs are appropriate.\r\n                                                    </Alert>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })()}\r\n                                    <FormFilterParameters\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        handleChange={this.handleChange}\r\n                                        handleCheckboxChange={this.handleCheckboxChange}\r\n                                        getResults={this.getResults}\r\n                                        values={values}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return (\r\n                                                <div style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"space-around\",\r\n                                                    paddingTop: \"30vh\"\r\n                                                }}>\r\n                                                    <Circles height={75} width={75} color='grey'/>\r\n                                                </div>\r\n                                            )\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    handleChange={this.handleChange}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // also case 1\r\n                            return (\r\n\r\n                                <StartMenu\r\n                                    nextStep={this.nextStep}\r\n                                    handleChange={this.handleChange}\r\n                                />\r\n\r\n                            )\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default UserForm","import './styles/App.css';\r\nimport UserForm from './components/UserForm';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <UserForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}