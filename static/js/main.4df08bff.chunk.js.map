{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/ParametersForm.js","pickers/CustomDatePicker.js","components/DataForm.js","utils/Utils.js","components/RenderedPlot.js","components/Loading.js","components/Error.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","margin","createMenuItems","option","map","item","MenuItem","text","ParametersForm","isDisabled","rollingWindow","values","demean","fixedDelta","deltaSelect","isError","field","undefined","errorMessage","isErrorDisplaying","errorsDisplayedCount","keys","errors","filter","x","_this$props","getResults","cancelLoad","back","prevStep","preAnalysisTransformations","_this$props2","handlers","handleChange","handleCheckboxChange","Fragment","Divider","light","FormControl","FormControlLabel","label","Typography","fontSize","title","control","Checkbox","onChange","checked","transform","Grid","container","direction","justifyContent","spacing","alignItems","xs","size","takeLog","disabled","sx","minWidth","InputLabel","Select","defaultValue","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","paddingBottom","TextField","error","helperText","iterativeDynamicDemeaning","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","InputProps","newValue","updateDate","target","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","DataForm","_this2","m","paddingRight","multiline","rows","join","unprocessedY","minHeight","paddingTop","pickers_CustomDatePicker","startDate","periodicity","d","periodicityManual","marginBottom","marginTop","dispCycleCI","headingFormControlLabel","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","row","r","push","colsToRows","y","cycleCILB","cycleCIUB","console","log","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","data","type","mode","marker","color","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","react_csv","textDecoration","filename","getCSVData","Loading","react_loader_spinner_esm","height","Error","Alert","severity","onClose","close","tagName","DateS","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","Date","createDate","YearlyDate","QuarterlyDate","MonthlyDate","WeeklyDate","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","state","step","freeText","default","iterativeBackcasting","cycleCI","loading","baseBackendURL","bnfUserSpecifiedDataSlug","bnfFredDataSlug","fredDataSlug","setState","input","defineProperty","setErrorMessage","message","deleteErrorMessage","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","asyncToGenerator","regenerator_default","mark","_callee2","paramStr","finalURL","wrap","_context2","prev","next","replace","split","_callee","_context","fetch","then","response","status","json","result","cycleRes","Number","ciRes","deltaRes","_","catch","stop","_this$state","dataFormPageValues","_this$state2","serverError","parametersFormPageValues","_this$state3","components_DataForm","components_Error","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","backgroundColor","borderTop","textAlign","padding","position","overflowX","left","bottom","feature","App","rel","href","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4df08bff.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:\r\n                        <ol>\r\n                            <li>A time series of your choosing to be pasted into a field, or</li>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic</li>\r\n                        </ol>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        fixedDelta: () => this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.values.errorMessage[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && !this.isDisabled[field]();\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, cancelLoad} = this.props;\r\n\r\n        if (this.errorsDisplayedCount() === 0)\r\n            getResults();\r\n        else\r\n            cancelLoad();\r\n\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider light><FormControl variant=\"standard\">\r\n                        <FormControlLabel\r\n                            label={<Typography\r\n                                style={{fontSize: 'x-large'}}>Transformations</Typography>}\r\n                            title=\"Transformations are applied in the order below and are done prior to estimation. Check this box to apply them.\"\r\n                            control={<Checkbox\r\n                                onChange={handleCheckboxChange('transform')}\r\n                                // style={{transform: \"scale(1.25)\"}}\r\n                                checked={values.transform}/>}\r\n                        />\r\n                    </FormControl></Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" spacing={4}\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                defaultValue={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                defaultValue={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = values.errorMessage;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"450px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                    paddingBottom: \"50px\"\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={2}>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 300}}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title=\"Signal-to-Noise Ratio according to benchmark KMW approach\"\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    defaultValue={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label=\"Fixed Delta\"\r\n                                    title=\"Only necessary when Signal-to-noise ratio is set to 'Fixed Delta'\"\r\n                                    onChange={handleNumberFieldChange('fixedDelta')}\r\n                                    defaultValue={values.fixedDelta}\r\n                                    disabled={this.isDisabled['fixedDelta']()}\r\n                                    error={this.isErrorDisplaying('fixedDelta')}\r\n                                    helperText={this.isErrorDisplaying('fixedDelta') ?\r\n                                        errors['fixedDelta'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 290}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning method\"\r\n                                    onChange={handleChange('demean')}\r\n                                    defaultValue={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 170}}>\r\n                                <TextField\r\n                                    label=\"Rolling Window\"\r\n                                    title=\"Only necessary when the demeaning method is dynamic. Must be an integer.\"\r\n                                    onChange={handleIntegerNumberFieldChange('rollingWindow')}\r\n                                    defaultValue={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays*/}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/*<Grid item xs={12}>*/}\r\n                        {/*    <FormControl variant=\"standard\" sx={{minWidth: 450}}>*/}\r\n                        {/*        <FormControlLabel label=\"Iterative Backcasting\"*/}\r\n                        {/*                          title=\"When unselected backcasting is based on unconditional mean*/}\r\n                        {/*                                (original KMW approach)\"*/}\r\n                        {/*                          control={<Checkbox*/}\r\n                        {/*                              onChange={handleCheckboxChange('iterativeBackcasting')}*/}\r\n                        {/*                              checked={values.iterativeBackcasting}/>}*/}\r\n                        {/*        />*/}\r\n                        {/*    </FormControl>*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.preAnalysisTransformations()}\r\n                {this.bnFilterParameters()}\r\n                <br/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 30px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider} from \"@mui/lab\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n    // const [startDate, setStartDate] = React.useState(props.startDate);\r\n\r\n    const handleChange = (newValue) => {\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label=\"Start Date\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Data</Divider>\r\n                    <p>Enter or paste in your chosen time series below.\r\n                        <br/>\r\n                        Each line must contain a numerical value. Each observation must start on the next line.\r\n                        Pasting a time series from a CSV will achieve the appropriate formatting.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                        <TextField\r\n                            multiline\r\n                            rows={20}\r\n                            label=\"Time Series (y)\"\r\n                            title=\"Paste your chosen time series here\"\r\n                            onChange={handleChange('unprocessedY')}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            // Hacky newline fix that works for all browsers\r\n                            // (newline or line break not functioning in Safari)\r\n                            placeholder={\"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                            defaultValue={values.unprocessedY}\r\n                        />\r\n                    </FormControl>\r\n                    <div style={{\r\n                        width: \"450px\",\r\n                        alignItems: \"center\",\r\n                        display: \"inline-block\",\r\n                    }}>\r\n                        <Divider light\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Display Options</Divider>\r\n                        <Grid container direction=\"column\" sx={{minHeight: 250, paddingTop: 4}}\r\n                              justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n                            <Grid item xs={4}>\r\n                                <CustomDatePicker date={values.startDate}\r\n                                                  periodicity={values.periodicity}\r\n                                                  updateDate={d => this.props.handleChange('startDate')(d)}\r\n                                                  isDisabled={values.periodicity === \"n\"}/>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                    <InputLabel>Data Frequency</InputLabel>\r\n                                    <Select\r\n                                        title=\"Time-series frequency\"\r\n                                        onChange={handleChange('periodicity')}\r\n                                        defaultValue={values.periodicity}\r\n                                    >{createMenuItems(field.optionField.periodicityManual.option)}</Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                    <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                      title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                                      control={<Checkbox\r\n                                                          size=\"small\"\r\n                                                          onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                          checked={values.dispCycleCI}/>}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container direction=\"column\" sx={{minHeight: 340}} justifyContent=\"space-evenly\"\r\n                              alignItems=\"center\">\r\n\r\n                            <Grid item xs={3}>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    style={styles.button}\r\n                                    onClick={this.back}\r\n                                >Back</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={styles.button}\r\n                                    onClick={this.continue}\r\n                                >Continue</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"0 30px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}\r\n\r\n\r\nexport default DataForm","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row)\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&'\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nexport {colsToRows, confIntZip, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [\"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'}}}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        margin: \"20px 30px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","class DateS extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"y\":\r\n                return new YearlyDate(date)\r\n            case \"q\":\r\n                return new QuarterlyDate(date)\r\n            case \"m\":\r\n                return new MonthlyDate(date)\r\n            case \"w\":\r\n                return new WeeklyDate(date)\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static getTruncatedDate = (date) => `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n\r\n    nextTimePeriod = () => {\r\n        throw new Error(\"Child class must implement this method\");\r\n    };\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass YearlyDate extends DateS {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new YearlyDate(this);\r\n        return new YearlyDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateS, WeeklyDate, MonthlyDate, QuarterlyDate, YearlyDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field} from \"../config.json\";\r\nimport {DateS} from \"../utils/Date\";\r\nimport {confIntZip, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        fixedDelta: field.freeText.fixedDelta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        periodicity: field.optionField.periodicityManual.default, // periodicity\r\n        startDate: null,\r\n        transform: false, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        errorMessage: {},\r\n    }\r\n\r\n    baseBackendURL = 'https://bn-filtering.herokuapp.com';\r\n    bnfUserSpecifiedDataSlug = \"/bnf/user-specified-time-series\";\r\n    bnfFredDataSlug = \"/bnf/fred-time-series\";\r\n    fredDataSlug = \"/fred-time-series\";\r\n\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoad = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            errorMessage: {\r\n                ...this.state.errorMessage,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let state = {...this.state};\r\n        delete state[\"errorMessage\"][input];\r\n        this.setState(state);\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    getResults = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\")\r\n\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['window', this.state.rollingWindow],\r\n                ['delta_select', this.state.deltaSelect],\r\n                ['fixed_delta', this.state.fixedDelta],\r\n                ['ib', this.state.iterativeBackcasting],\r\n                ['demean', this.state.demean],\r\n                ['processed_y', this.state.y]].concat(\r\n                [['transform', this.state.transform]].concat(\r\n                    this.state.transform ? [\r\n                            ['p_code', this.state.pCode],\r\n                            ['d_code', this.state.dCode],\r\n                            ['take_log', this.state.takeLog]]\r\n                        : []\r\n                )\r\n            ));\r\n\r\n        const finalURL = this.baseBackendURL + this.bnfUserSpecifiedDataSlug + paramStr\r\n\r\n        console.log(finalURL)\r\n\r\n        this.setState({loading: true}, async () => {\r\n            fetch(finalURL)\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        this.cancelLoad();\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.periodicity !== \"n\" ? // dated axis or numbered axis\r\n                            DateS.createDate(this.state.periodicity, this.state.startDate).getDateArray(cycleRes.length).map(DateS.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    })\r\n\r\n                }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, periodicity,} = this.state;\r\n        const dataFormPageValues = {unprocessedY, startDate, periodicity,};\r\n\r\n        const {\r\n            step,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            errorMessage,\r\n            loading,\r\n            serverError,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            fixedDelta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            errorMessage,\r\n            loading,\r\n            serverError,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, dispCycleCI, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, periodicity, startDate,};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                values={dataFormPageValues}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading === null ?\r\n                                        <Error\r\n                                            tagName={\"During the running of the BN filter a problem occurred. Please check that the inputs are appropriate.\"}\r\n                                            close={() => {\r\n                                                this.setState({loading: false})\r\n                                            }}/>\r\n                                        : null}\r\n\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoad}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResults}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={errorMessage}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {(() => {\r\n                                        if (this.state.loading === true) {\r\n                                            return Loading();\r\n                                        } else if (this.state.loading === false) {\r\n                                            return (\r\n                                                <RenderedPlot\r\n                                                    prevStep={this.prevStep}\r\n                                                    plotPageValues={plotPageValues}\r\n                                                />)\r\n                                        } else {\r\n                                            // error\r\n                                            this.prevStep();\r\n                                        }\r\n                                    })()}\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>. Please note that this website is still in development so some\r\n                    features are yet to be implemented/completed.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://github.com/crstnn\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}