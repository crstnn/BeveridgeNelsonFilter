{"version":3,"sources":["components/StartMenu.js","utils/CreateMenuItem.js","components/Error.js","components/ParametersForm.js","pickers/CustomDatePicker.js","utils/Utils.js","components/FREDDataForm.js","components/UserDataForm.js","components/DataForm.js","components/RenderedPlot.js","components/Loading.js","utils/Date.js","components/BasePage.js","App.js","reportWebVitals.js","index.js"],"names":["StartMenu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","e","preventDefault","props","nextStep","inherits","createClass","key","value","react_default","a","createElement","className","Button","variant","style","styles","button","onClick","Component","minHeight","minWidth","margin","createMenuItems","option","map","item","MenuItem","text","Error","Alert","severity","onClose","close","tagName","ParametersForm","isDisabled","rollingWindow","values","demean","delta","isError","field","undefined","errors","isErrorDisplaying","errorsDisplayedCount","keys","filter","x","_this$props","getResults","getFREDResults","handlers","cancelLoad","dataInputType","handleChange","target","back","prevStep","preAnalysisTransformations","_this$props2","handleCheckboxChange","Fragment","Divider","fontSize","Grid","container","direction","justifyContent","alignItems","spacing","xs","FormControl","FormControlLabel","label","title","control","Checkbox","size","onChange","checked","takeLog","disabled","transform","sx","InputLabel","Select","dCode","optionField","pCode","bnFilterParameters","_this$props3","handleNumberFieldChange","handleIntegerNumberFieldChange","width","display","deltaSelect","TextField","error","helperText","iterativeDynamicDemeaning","_this2","loading","components_Error","alertErrors","alertErrorType","CustomDatePicker","date","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","minDate","maxDate","InputProps","newValue","console","log","updateDate","renderInput","params","assign","InputLabelProps","shrink","inputProps","objectSpread","placeholder","confIntZip","cycle","ci","bound","i","pairToParam","paramName","currPair","toString","pairArrayToParamStr","arr","reduce","fetchWithTimeout","_callee","url","controller","timeoutID","f","regenerator_default","wrap","_context","prev","next","AbortController","setTimeout","abort","fetch","signal","sent","clearTimeout","abrupt","stop","FREDDataForm","state","mnemonic","timeoutError","createFilteredFrequencies","items","frequencyFRED","availableFrequencies","includes","checkAvailability","paramStr","finalURL","URL","baseBackendURL","fredDataSlug","setState","asyncToGenerator","mark","setErrorMessage","deleteErrorMessage","responseSuccess","catch","then","response","status","json","result","startDate","Date","endDate","mnemonicInput","marginBottom","FormGroup","row","JoinedTextField","color","onKeyDown","keyCode","endAdornment","react_loader_spinner_esm","height","JoinedButton","FormHelperText","rel","href","pickers_CustomDatePicker","startDateFRED","endDateFRED","marginTop","dispCycleCI","withStyles","root","& fieldset","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","borderColor","UserDataForm","handleTimeSeriesChange","timeSeries","notNumberReg","RegExp","arrayFormReg","seriesFormReg","nonNumberTest","test","arrayFormTest","seriesFormTest","errorMessage","m","paddingRight","multiline","rows","join","unprocessedY","paddingTop","frequency","frequencyManual","DataForm","toggleDataInputType","valuesUserData","valuesFREDData","ToggleButtonGroup","exclusive","ToggleButton","UserDataForm_UserDataForm","FREDDataForm_FREDDataForm","headingFormControlLabel","RenderedPlot","fileName","plotPageValues","columns","rowLength","colLength","retArr","c","r","push","colsToRows","y","cycleCILB","cycleCIUB","react_plotly_default","layout","autosize","xaxis","automargin","yaxis","tickangle","window","screen","l","b","t","pad","data","type","mode","marker","name","showlegend","fill","fillcolor","line","hoverinfo","getPlot","deltaCalc","toFixed","react_csv","textDecoration","filename","getCSVData","Loading","DateAbstract","nextTimePeriod","getDateArray","len","currDate","assertThisInitialized","retDate","from","createDate","AnnualDate","QuarterlyDate","MonthlyDate","WeeklyDate","toFixedTwoDigits","d","getTruncatedDate","getFullYear","getMonth","getDate","oldDate","setDate","_this3","setMonth","_this4","_this5","setFullYear","BasePage","step","freeText","default","iterativeBackcasting","cycleCI","fieldErrorMessages","cancelLoading","input","defineProperty","message","fieldErrorMessagesTemp","isEmptyString","v","isNotANum","isNaN","isNotAnInt","isExceedsMinMax","min","max","handleErrorField","isCorrectEntry","validateField","isIncorrectEntry","total","currentValue","handleChangeValidation","validationArr","bnfParamArr","fetchResultWithErrorHandling","_ref","_x","getResultsForFREDData","_callee3","_context3","bnfFredDataSlug","_callee2","_context2","cycleRes","Number","ciRes","deltaRes","getResultsForUserSpecifiedData","_callee5","_context5","replace","split","bnfUserSpecifiedDataSlug","_callee4","_context4","_","_this$state","_this$state2","dataUserFormPageValues","dataFREDFormPageValues","_this$state3","parametersFormPageValues","serverError","_this$state4","components_DataForm","components_ParametersForm","components_RenderedPlot","components_StartMenu","footer","borderTop","textAlign","padding","position","overflowX","left","bottom","zIndex","feature","App","components_BasePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.09a95e95.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport '../styles/App.css';\r\n\r\nexport class StartMenu extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>You will be guided through the steps to perform trend-cycle decomposition on either:</p>\r\n                        <ol>\r\n                            <li>A time series from the Federal Reserve Economic Database (FRED) using its mnemonic, or</li>\r\n                            <li>A time series of your choosing, to be pasted into a field</li>\r\n                        </ol>\r\n                    <p>\r\n                        Note that there is additional information provided when hovering over the options in the\r\n                        subsequent pages. The cycle is reported and can be downloaded as a CSV.\r\n                    </p>\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Continue</Button>\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"30px 0 100px\",\r\n    }\r\n}\r\n\r\nexport default StartMenu","import {MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst createMenuItems = (option) => option.map((item) => <MenuItem value={item.value}>{item.text}</MenuItem>)\r\n\r\nexport default createMenuItems","import {Alert} from \"@mui/material\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport class Error extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: \"2px 20%\"}}>\r\n                <Alert variant=\"filled\" severity=\"error\"\r\n                       onClose={this.props.close}>\r\n                    {this.props.tagName}\r\n                </Alert>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {field, alertErrors} from \"../config.json\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport Error from \"./Error\";\r\n\r\nexport class ParametersForm extends Component {\r\n\r\n    isDisabled = {\r\n        rollingWindow: () => this.props.values.demean === \"sm\",\r\n        delta: () => false, // this.props.values.deltaSelect !== 0,\r\n    };\r\n\r\n    isError = field => this.props.errors[field] !== undefined;\r\n\r\n    isErrorDisplaying = field => this.isError(field) && (this.isDisabled[field] === undefined || !this.isDisabled[field]());\r\n\r\n    errorsDisplayedCount = () => Object.keys(this.props.errors).map(key => this.isErrorDisplaying(key)).filter(x => x).length;\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {getResults, getFREDResults, handlers, values, errors, cancelLoad} = this.props;\r\n\r\n        if (values.dataInputType === \"FRED\" && errors[\"mnemonic\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_M\"}});\r\n            cancelLoad();\r\n        } else if (values.dataInputType === \"USER\" && errors[\"unprocessedY\"] !== undefined) {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_USER_S\"}});\r\n            cancelLoad();\r\n        }\r\n        else if (this.errorsDisplayedCount() === 0) {\r\n            if (values.dataInputType === \"FRED\") getFREDResults();\r\n            else if (values.dataInputType === \"USER\") getResults();\r\n            this.props.nextStep();\r\n        } else {\r\n            handlers.handleChange(\"alertErrorType\")({target: {value: \"INPUT_PARAM\"}});\r\n            cancelLoad();\r\n        }\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    preAnalysisTransformations = () => {\r\n        const {values, handlers} = this.props;\r\n        const {handleChange, handleCheckboxChange} = handlers;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Transformations</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\">\r\n                            <FormControlLabel label=\"Natural Logarithm\"\r\n                                              title=\"Logarithm to the base of Euler's number\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('takeLog')}\r\n                                                  checked={values.takeLog}\r\n                                                  disabled={!values.transform}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Differencing Method</InputLabel>\r\n                            <Select\r\n                                title=\"Differencing method applied\"\r\n                                onChange={handleChange('dCode')}\r\n                                value={values.dCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.dCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 350}}>\r\n                            <InputLabel>Computed Percentages</InputLabel>\r\n                            <Select\r\n                                title=\"Multiple applied\"\r\n                                onChange={handleChange('pCode')}\r\n                                value={values.pCode}\r\n                                disabled={!values.transform}\r\n                            >{createMenuItems(field.optionField.pCode.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </>)\r\n    }\r\n\r\n    bnFilterParameters = () => {\r\n\r\n        const\r\n            {values, handlers} = this.props,\r\n            {handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange} = handlers,\r\n            errors = this.props.errors;\r\n\r\n        const handleRollingWindowChange = () => {\r\n            return handleIntegerNumberFieldChange('rollingWindow');\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"information\">\r\n                    <Divider style={{fontSize: 'x-large'}}>Filter Parameters</Divider>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    <Grid container alignItems=\"flex-start\" justifyContent=\"space-evenly\" spacing={3}>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{ width: 280 }}>\r\n                                <InputLabel>Signal-to-Noise Ratio (Delta)</InputLabel>\r\n                                <Select\r\n                                    label=\"Signal-to-Noise Ratio (Delta)\"\r\n                                    title={(() => {\r\n                                        if(values.deltaSelect === 0) {\r\n                                            return \"Signal-to-Noise Ratio according to user input\";\r\n                                        } else if(values.deltaSelect === 1) {\r\n                                            return \"Signal-to-Noise Ratio according to benchmark KMW approach\";\r\n                                        } else if(values.deltaSelect === 2) {\r\n                                            return \"Signal-to-Noise Ratio according to KMW refinement\";\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('deltaSelect')}\r\n                                    value={values.deltaSelect}\r\n                                >{createMenuItems(field.optionField.deltaSelect.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{width: 140}}>\r\n                                <TextField\r\n                                    label={values.deltaSelect === 0 ? \"Fixed Delta\" : \"Minimum Delta\"}\r\n                                    title={values.deltaSelect === 0 ? \"Fixed delta for estimation\" : \"Minimum threshold start point for grid search (with grid increments of 0.0005)\"}\r\n                                    onChange={handleNumberFieldChange('delta')}\r\n                                    value={values.delta}\r\n                                    disabled={this.isDisabled['delta']()}\r\n                                    error={this.isErrorDisplaying('delta')}\r\n                                    helperText={this.isErrorDisplaying('delta') ?\r\n                                        errors['delta'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7.75}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 280}}>\r\n                                <InputLabel>Demeaning</InputLabel>\r\n                                <Select\r\n                                    label=\"Demeaning\"\r\n                                    title={(() => {\r\n                                        if(values.demean === 'sm') {\r\n                                            return \"Estimate constant drift\";\r\n                                        } else if(values.demean === 'dm') {\r\n                                            return \"Estimate time-varying drift using rolling window\";\r\n                                        } else if(values.demean === 'idm') {\r\n                                            return \"Iteratively estimate time-varying drift removing cycle and using rolling window according to KMW refinement\";\r\n                                        }\r\n                                    })()}\r\n                                    onChange={handleChange('demean')}\r\n                                    value={values.demean}\r\n                                >{createMenuItems(field.optionField.iterativeDynamicDemeaning.option)}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={4.25}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 140}}>\r\n                                <TextField\r\n                                    label= \"Rolling Window\"\r\n                                    title=\"Only active when using dynamic demeaning. Upper bound is two less than the number of observations\"\r\n                                    onChange={handleRollingWindowChange()}\r\n                                    value={values.rollingWindow}\r\n                                    disabled={this.isDisabled['rollingWindow']()}\r\n                                    error={this.isErrorDisplaying('rollingWindow')}\r\n                                    helperText={this.isErrorDisplaying('rollingWindow') ?\r\n                                        errors['rollingWindow'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    {this.props.values.loading === null ?\r\n                        <Error\r\n                            tagName={alertErrors[this.props.values.alertErrorType]}\r\n                            close={() => {this.props.handlers.handleChange(\"loading\")({target: {value: false}})}}/>\r\n                        : null}\r\n                    {this.preAnalysisTransformations()}\r\n                    {this.bnFilterParameters()}\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={styles.button}\r\n                    onClick={this.continue}\r\n                >Get Trend Decomposition</Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default ParametersForm","import React from \"react\";\r\nimport {LocalizationProvider, DesktopDatePicker} from '@mui/x-date-pickers';\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nfunction CustomDatePicker(props) {\r\n    const date = props.date;\r\n\r\n    const handleDateChange = newValue => {\r\n        console.log(\"pre-handleDateChange: \", newValue)\r\n        props.updateDate({target: {value: newValue}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DesktopDatePicker\r\n                    label={props.label}\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={date}\r\n                    minDate={props.minDate}\r\n                    maxDate={props.maxDate}\r\n                    InputProps={{style: {width: 220}}}\r\n                    onChange={handleDateChange}\r\n                    disabled={props.isDisabled}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                                   title={props.title}\r\n                                   InputLabelProps={{shrink: true}}\r\n                                   inputProps={{...params.inputProps, placeholder: \"DD/MM/YYYY\"}}/>}\r\n                />\r\n            </LocalizationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomDatePicker;","const colsToRows = (...columns) => {\r\n\r\n    columns = columns.filter(x => x !== undefined)\r\n\r\n    // Pre-condition: All arrays are same length\r\n    const\r\n        rowLength = columns.length,\r\n        colLength = columns[0].length;\r\n\r\n    const retArr = [];\r\n\r\n    for (let c = 0; c < colLength; c++) {\r\n        const row = [];\r\n        for (let r = 0; r < rowLength; r++) {\r\n            row.push(columns[r][c]);\r\n        }\r\n        retArr.push(row);\r\n    }\r\n    return retArr;\r\n};\r\n\r\nconst confIntZip = (cycle, ci, bound) => cycle.map((x, i) => bound === \"lb\" ? x - ci[i] : /* ub */ x + ci[i]);\r\n\r\nconst pairToParam = (paramName, currPair) =>\r\n    paramName + currPair[0].toString() + '=' + currPair[1].toString() + '&';\r\n\r\nconst pairArrayToParamStr = arr => arr.reduce(pairToParam, '?');\r\n\r\nasync function fetchWithTimeout(url) {\r\n    const\r\n        controller = new AbortController(),\r\n        timeoutID = setTimeout(() => controller.abort(), 20000), // 20 second timeout\r\n        f = await fetch(url, {signal: controller.signal});\r\n    clearTimeout(timeoutID);\r\n    return f;\r\n}\r\n\r\nexport {colsToRows, confIntZip, fetchWithTimeout, pairArrayToParamStr}","import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel, FormGroup, FormHelperText,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {withStyles} from \"@mui/styles\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\nimport Error from \"./Error\";\r\nimport {ThreeDots} from \"react-loader-spinner\";\r\n\r\nexport class FREDDataForm extends Component {\r\n\r\n    state = {\r\n        mnemonic: this.props.values.mnemonic,\r\n        loading: false,\r\n        timeoutError: false,\r\n    }\r\n\r\n    createFilteredFrequencies = () => {\r\n        const items = field.optionField.frequencyFRED.option.filter(x => this.props.values.availableFrequencies.includes(x.value));\r\n        return createMenuItems(items);\r\n    }\r\n\r\n    checkAvailability = () => {\r\n        const\r\n            paramStr = pairArrayToParamStr([['fred_abbr', this.state.mnemonic]]),\r\n            finalURL = URL.baseBackendURL + URL.fredDataSlug + paramStr;\r\n\r\n        this.setState({loading: true}, async () => {\r\n\r\n            const {handleChange, setErrorMessage, deleteErrorMessage} = this.props;\r\n\r\n            const responseSuccess = () => {\r\n                this.setState(\r\n                    {\r\n                        timeoutError: false,\r\n                        loading: false,\r\n                    });\r\n            }\r\n\r\n            fetchWithTimeout(finalURL)\r\n                .catch(e => {\r\n                    this.setState(\r\n                        {\r\n                            timeoutError: true,\r\n                            loading: false,\r\n                        });\r\n                    setErrorMessage(\"mnemonic\", \"Internal error: Come back later\");\r\n                    throw e;\r\n                })\r\n                .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        responseSuccess();\r\n                        setErrorMessage(\"mnemonic\", \"mnemonic is not available\");\r\n                        throw new Error(\"bad status\");\r\n                    } else {\r\n                        return response;\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        startDate = new Date(result[\"start_date\"]),\r\n                        endDate = new Date(result[\"end_date\"]);\r\n\r\n                    console.log(\"response: startDate: \", startDate)\r\n                    console.log(\"response: endDate: \", endDate)\r\n\r\n                    deleteErrorMessage(\"mnemonic\");\r\n                    handleChange('availableFrequencies')({target: {value: result[\"available_frequencies\"]}});\r\n                    handleChange('frequencyFRED')({target: {value: result[\"available_frequencies\"][0]}});\r\n                    handleChange('mnemonic')({target: {value: this.state.mnemonic}});\r\n                    handleChange('startDateFRED')({target: {value: startDate}});\r\n                    handleChange('endDateFRED')({target: {value: endDate}});\r\n                    handleChange('minDate')({target: {value: startDate}});\r\n                    handleChange('maxDate')({target: {value: endDate}});\r\n                    responseSuccess();\r\n\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    mnemonicInput = () => {\r\n\r\n        const\r\n            {values, errors} = this.props,\r\n            showText = () => !(errors[\"mnemonic\"] === undefined && values.mnemonic === \"\") || this.state.timeoutError === true,\r\n            mnemonicHelperText = () => {\r\n                if (!showText()) return \"​\";\r\n                return errors['mnemonic'] !== undefined ? errors['mnemonic'] : \"mnemonic is available\";\r\n            };\r\n\r\n\r\n        return (\r\n            <Grid container direction=\"column\" sx={{minHeight: 100, marginBottom: 1}}\r\n                  justifyContent=\"space-evenly\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <FormGroup row>\r\n                        <JoinedTextField variant=\"outlined\" label=\"FRED mnemonic\"\r\n                                         title=\"Press enter or click 'check' to check the availability of the mnemonic\"\r\n                                         color={errors[\"mnemonic\"] === undefined && values.mnemonic !== \"\" ? \"success\" : null} placeholder=\"e.g. GDPC1\" sx={{width: 250}}\r\n                                         error={errors[\"mnemonic\"] !== undefined}\r\n                                         onChange={e => this.setState({mnemonic: e.target.value}) }\r\n                                         onKeyDown={e => e.keyCode === 13 /* 'enter' key */ ? this.checkAvailability(e) : null}\r\n                                         value={this.state.mnemonic}\r\n                                         InputProps={{\r\n                                             endAdornment: this.state.loading ? <ThreeDots height={30} width={30} color='grey'/> : null}}/>\r\n                        <JoinedButton onClick={this.checkAvailability} variant=\"outlined\">Check</JoinedButton>\r\n                    </FormGroup>\r\n                    <FormHelperText>{mnemonicHelperText()}</FormHelperText>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {values, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"information\">\r\n                    <p>Choose a <a target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href=\"https://fred.stlouisfed.org/tags/series\">\r\n                        FRED mnemonic</a> and check its availability before continuing.</p>\r\n                </div>\r\n                <div style={{\r\n                    width: \"420px\",\r\n                    alignItems: \"center\",\r\n                    display: \"inline-block\",\r\n                }}>\r\n                    {this.mnemonicInput()}\r\n                    <div className=\"dataInformation\">\r\n                        <Divider\r\n                                 title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                                 style={{fontSize: 'large'}}>Options</Divider>\r\n                    </div>\r\n                    <Grid container direction=\"column\" sx={{minHeight: 340,}}\r\n                          justifyContent=\"space-evenly\"\r\n                          alignItems=\"center\">\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"Start Date\"}\r\n                                              title={\"Series' start date (inclusive). Determined by FRED\"}\r\n                                              date={values.startDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('startDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <CustomDatePicker\r\n                                              label={\"End Date\"}\r\n                                              title={\"Series' end date (inclusive). Determined by FRED\"}\r\n                                              date={values.endDateFRED}\r\n                                              minDate={values.minDate}\r\n                                              maxDate={values.maxDate}\r\n                                              updateDate={handleChange('endDateFRED')}/>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                                <InputLabel>Frequency</InputLabel>\r\n                                <Select\r\n                                    title=\"Time-series frequency (default aggregation method: averaging)\"\r\n                                    onChange={handleChange('frequencyFRED')}\r\n                                    value={values.frequencyFRED}\r\n                                >{this.createFilteredFrequencies()}</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n                            <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                                <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                                  title=\"Choose to report 95% confidence intervals in graph and CSV\"\r\n                                                  control={<Checkbox\r\n                                                      size=\"small\"\r\n                                                      onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                      checked={values.dispCycleCI}/>}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst JoinedTextField = withStyles({\r\n    root: {\r\n        \"& fieldset\": {\r\n            borderTopRightRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nconst JoinedButton = withStyles({\r\n    root: {\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0,\r\n        backgroundColor: \"#ede8e8\",\r\n        borderColor: \"#454545\",\r\n        color: \"black\",\r\n    }\r\n})(Button);","import React, {Component} from \"react\";\r\nimport {\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../pickers/CustomDatePicker\";\r\nimport createMenuItems from \"../utils/CreateMenuItem\";\r\nimport {field} from \"../config.json\";\r\n\r\nexport class UserDataForm extends Component {\r\n\r\n    handleTimeSeriesChange = e => {\r\n        e.preventDefault();\r\n        const\r\n            timeSeries = e.target.value,\r\n            {setErrorMessage, deleteErrorMessage, handleChange} = this.props;\r\n\r\n        const\r\n            notNumberReg = new RegExp(/[^\\d.,\\s]+/),\r\n            arrayFormReg = new RegExp(/^((\\d*(.\\d+)?),\\s*)+(\\d*(.\\d+)?)\\s*$/),\r\n            seriesFormReg = new RegExp(/^((\\d*(.\\d+)?)(\\r\\n|\\n|\\r))*((\\d*(.\\d+)?)(\\r\\n|\\n|\\r)?)$/);\r\n\r\n        const\r\n            nonNumberTest = notNumberReg.test(timeSeries),\r\n            arrayFormTest = arrayFormReg.test(timeSeries),\r\n            seriesFormTest = seriesFormReg.test(timeSeries);\r\n\r\n        let errorMessage = null;\r\n\r\n        if (timeSeries === \"\" || arrayFormTest || seriesFormTest) {\r\n            deleteErrorMessage(\"unprocessedY\");\r\n        }\r\n        else if (nonNumberTest) {\r\n            errorMessage = \"only accepts numbers, commas, and periods\";\r\n        } else if (!arrayFormTest && !seriesFormTest) {\r\n            errorMessage = \"bad input format\";\r\n        }\r\n        if (errorMessage !== null) setErrorMessage(\"unprocessedY\", errorMessage);\r\n\r\n        handleChange('unprocessedY')(e);\r\n    }\r\n\r\n    render() {\r\n        const {values, errors, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n        <div>\r\n            <div className=\"information\">\r\n                <p>Enter or paste in your chosen time series below.\r\n                    Pasting a time series from a CSV or array will achieve the appropriate formatting.\r\n                </p>\r\n            </div>\r\n            <FormControl variant=\"standard\" sx={{m: 1, minWidth: 300, paddingRight: 2}}>\r\n                <TextField\r\n                    multiline\r\n                    rows={16}\r\n                    label=\"Time Series (y)\"\r\n                    title=\"Paste your chosen time series here\"\r\n                    onChange={this.handleTimeSeriesChange}\r\n                    InputLabelProps={{shrink: true}}\r\n                    // Hacky newline fix that works for all browsers (newline/line break not functioning in Safari)\r\n                    placeholder={\"e.g. \" + (new Array(100).join(\" \")) +\r\n                                \"101.2, 104.8, 102.4, ...\" + (new Array(100).join(\" \")) +\r\n                                \"e.g.\" + (new Array(100).join(\" \")) +\r\n                                \"101.2\" + (new Array(100).join(\" \")) +\r\n                                \"104.8\" + (new Array(100).join(\" \")) +\r\n                                \"102.4\" + (new Array(100).join(\" \")) +\r\n                                \"...\"}\r\n                    value={values.unprocessedY}\r\n                    error={errors[\"unprocessedY\"] !== undefined}\r\n                    helperText={errors[\"unprocessedY\"] !== undefined ?\r\n                        errors['unprocessedY'] : \"​\" /* zero whitespace to prevent height difference when error displays */}\r\n                />\r\n            </FormControl>\r\n            <div style={{\r\n                width: \"420px\",\r\n                alignItems: \"center\",\r\n                display: \"inline-block\",\r\n            }}>\r\n                <div className=\"dataInformation\">\r\n                <Divider\r\n                         title=\"This option does not make alterations to the data but changes the display of the graph output\"\r\n                         style={{fontSize: 'large'}}>Display Options</Divider>\r\n                </div>\r\n                <Grid container direction=\"column\" sx={{minHeight: 400, paddingTop: 2}}\r\n                      justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={4}>\r\n                        <CustomDatePicker\r\n                                      label={\"Start Date\"}\r\n                                      title={\"Series' start date (inclusive). The end date is determined based on frequency\"}\r\n                                      date={values.startDate}\r\n                                      updateDate={this.props.handleChange('startDate')}\r\n                                      isDisabled={values.frequency === \"n\"}/>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl variant=\"standard\" sx={{minWidth: 220}}>\r\n                            <InputLabel>Frequency</InputLabel>\r\n                            <Select\r\n                                title=\"Time-series frequency\"\r\n                                onChange={handleChange('frequency')}\r\n                                value={values.frequency}\r\n                            >{createMenuItems(field.optionField.frequencyManual.option)}</Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                        <FormControl sx={{marginBottom: 3, marginTop: 2}} variant=\"standard\">\r\n                            <FormControlLabel label=\"95% Confidence Intervals\"\r\n                                              title=\"Choose to display 95% confidence intervals in graph output\"\r\n                                              control={<Checkbox\r\n                                                  size=\"small\"\r\n                                                  onChange={handleCheckboxChange('dispCycleCI')}\r\n                                                  checked={values.dispCycleCI}/>}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Divider, Grid, Button,\r\n} from \"@mui/material\";\r\nimport '../styles/App.css';\r\nimport {FREDDataForm} from \"./FREDDataForm\";\r\nimport {UserDataForm} from \"./UserDataForm\";\r\n\r\nexport class DataForm extends Component {\r\n\r\n    toggleDataInputType = e => {\r\n        const {errors, valuesUserData, valuesFREDData, handleChange, deleteErrorMessage,} = this.props;\r\n\r\n        const\r\n            isMnemonicErrorDisplaying =\r\n            () => errors[\"mnemonic\"] !== undefined && valuesFREDData.dataInputType === \"FRED\",\r\n            isUserSeriesErrorDisplaying =\r\n            () => errors[\"unprocessedY\"] !== undefined && valuesUserData.dataInputType === \"USER\";\r\n\r\n        if (isMnemonicErrorDisplaying()) deleteErrorMessage(\"mnemonic\");\r\n        if (isUserSeriesErrorDisplaying()) deleteErrorMessage(\"unprocessedY\");\r\n\r\n        handleChange('dataInputType')(e);\r\n    }\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        const {valuesUserData, valuesFREDData, setErrorMessage, nextStep,} = this.props;\r\n        nextStep();\r\n        if (valuesFREDData.dataInputType === \"FRED\" && valuesFREDData.mnemonic === \"\") {\r\n            setErrorMessage(\"mnemonic\", \"mnemonic cannot be empty\");\r\n        }\r\n        if (valuesUserData.dataInputType === \"USER\" && valuesUserData.unprocessedY === \"\") {\r\n            setErrorMessage(\"unprocessedY\", \"time series field cannot be empty\");\r\n        }\r\n        console.log(valuesUserData)\r\n    }\r\n\r\n    render() {\r\n        const {valuesUserData, errors, valuesFREDData, setErrorMessage, deleteErrorMessage, handleChange, handleCheckboxChange} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div className=\"information\">\r\n                        <Divider style={{fontSize: 'x-large'}}>\r\n                            <ToggleButtonGroup\r\n                                color=\"primary\"\r\n                                value={valuesUserData.dataInputType}\r\n                                exclusive\r\n                                onChange={this.toggleDataInputType}\r\n                            >\r\n                                <ToggleButton value=\"FRED\">FRED Series</ToggleButton>\r\n                                <ToggleButton value=\"USER\">User Series</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Divider>\r\n                    </div>\r\n                    {(() => {\r\n                        if (valuesUserData.dataInputType === \"USER\")\r\n                            return <UserDataForm\r\n                                        setErrorMessage={setErrorMessage}\r\n                                        deleteErrorMessage={deleteErrorMessage}\r\n                                        handleChange={handleChange}\r\n                                        handleCheckboxChange={handleCheckboxChange}\r\n                                        values={valuesUserData}\r\n                                        errors={errors}\r\n                                    />\r\n                        else if (valuesUserData.dataInputType === \"FRED\")\r\n                            return <FREDDataForm\r\n                                    setErrorMessage={setErrorMessage}\r\n                                    deleteErrorMessage={deleteErrorMessage}\r\n                                    handleChange={handleChange}\r\n                                    handleCheckboxChange={handleCheckboxChange}\r\n                                    values={valuesFREDData}\r\n                                    errors={errors}\r\n                                    />\r\n                    })()}\r\n                </div>\r\n                <Grid container direction=\"column\" justifyContent=\"space-evenly\"\r\n                      alignItems=\"center\">\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            style={styles.button}\r\n                            onClick={this.props.prevStep}\r\n                        >Back</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={styles.button}\r\n                            onClick={this.continue}\r\n                        >Continue</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataForm\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    },\r\n    headingFormControlLabel: {fontSize: 'large'}\r\n}","import React, {Component} from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport {Button} from \"@mui/material\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {colsToRows} from \"../utils/Utils\";\r\n\r\nexport class RenderedPlot extends Component {\r\n\r\n    fileName = \"BNF_cycle.csv\"\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n\r\n    getCSVData() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        return colsToRows(\r\n            [\"date\"].concat(plotPageValues.x),\r\n            [(plotPageValues.dataInputType === \"FRED\" ? `${plotPageValues.mnemonic}_` : \"\" ) + \"original_y\"].concat(plotPageValues.y),\r\n            [\"cycle\"].concat(plotPageValues.cycle),\r\n            plotPageValues.dispCycleCI ? [\"conf_int_lower_bound\"].concat(plotPageValues.cycleCILB) : undefined,\r\n            plotPageValues.dispCycleCI ? [\"conf_int_upper_bound\"].concat(plotPageValues.cycleCIUB) : undefined);\r\n    }\r\n\r\n\r\n    getPlot() {\r\n        const {plotPageValues} = this.props;\r\n\r\n        console.log(plotPageValues.x)\r\n        console.log(plotPageValues.y)\r\n\r\n        return (\r\n            <Plot layout={{autosize: true, xaxis: {automargin: true}, yaxis: {automargin: true, tickangle: 'auto'},\r\n                width: window.screen.width <= 700 ? 450 : 700, // fit to window size\r\n                margin: {l: 20, r: 20, b: 20, t: 20, pad: 5}\r\n                }}\r\n                  data={[\r\n                      {\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycle,\r\n                          type: 'scatter',\r\n                          mode: 'lines+markers',\r\n                          marker: {color: 'blue'},\r\n                          name: \"cycle\",\r\n                          showlegend: false,\r\n                      },\r\n                      plotPageValues.dispCycleCI ? {\r\n                          // confint lower bound: enclosing line (which is hidden) hence 0 opacity (using properties of 'tonexty')\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCILB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0, 0, 0, 0)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                      plotPageValues.dispCycleCI ? { // confint upper bound\r\n                          x: plotPageValues.x,\r\n                          y: plotPageValues.cycleCIUB,\r\n                          fill: \"tonexty\",\r\n                          fillcolor: \"rgba(0,100,80,0.2)\",\r\n                          line: {color: \"transparent\"},\r\n                          showlegend: false,\r\n                          type: \"scatter\",\r\n                          hoverinfo: 'skip',\r\n                      } : {},\r\n                  ]}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {plotPageValues} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{minHeight: 600,}}>\r\n                    <div>\r\n                        {this.getPlot()}\r\n                        <p> Delta: {plotPageValues.deltaCalc.toFixed(4) /* delta reported to 4 d.p. */} </p>\r\n                    </div>\r\n                    <CSVLink style={{textDecoration: \"underline\"}}\r\n                             filename={this.fileName} data={this.getCSVData()}>Download as CSV</CSVLink>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    style={styles.button}\r\n                    onClick={this.back}\r\n                >Back</Button>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        minHeight: \"45px\",\r\n        minWidth: \"100px\",\r\n        margin: \"0 20px 100px\",\r\n    }\r\n}\r\n\r\nexport default RenderedPlot","import {Circles} from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            paddingTop: \"30vh\"\r\n        }}>\r\n            <Circles height={75} width={75} color='grey'/>\r\n        </div>)\r\n}\r\n\r\nexport default Loading;","class DateAbstract extends Date {\r\n\r\n    static createDate = (key, date) => {\r\n        switch (key) {\r\n            case \"a\":\r\n                return new AnnualDate(date);\r\n            case \"q\":\r\n                return new QuarterlyDate(date);\r\n            case \"m\":\r\n                return new MonthlyDate(date);\r\n            case \"w\":\r\n                return new WeeklyDate(date);\r\n            default:\r\n                throw new Error(\"Non-existent key\");\r\n        }\r\n    };\r\n\r\n    static toFixedTwoDigits = d => d.toString().length === 1 ? '0' + d : d;\r\n\r\n    static getTruncatedDate = date => `${date.getFullYear()}-${DateAbstract.toFixedTwoDigits(date.getMonth() + 1)}-${DateAbstract.toFixedTwoDigits(date.getDate())}`;\r\n\r\n    nextTimePeriod = () => {throw new Error(\"Child class must implement this method\");};\r\n\r\n    getDateArray = len => {\r\n        let currDate = this, retDate = this;\r\n        return Array.from({length: len}).map(() => {\r\n            retDate = currDate;\r\n            currDate = currDate.nextTimePeriod();\r\n            return retDate;\r\n        })\r\n    };\r\n}\r\n\r\nclass WeeklyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new WeeklyDate(this);\r\n        return new WeeklyDate(oldDate.setDate(this.getDate() + 7));\r\n    };\r\n}\r\n\r\nclass MonthlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new MonthlyDate(this);\r\n        return new MonthlyDate(oldDate.setMonth(this.getMonth() + 1));\r\n    };\r\n}\r\n\r\nclass QuarterlyDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new QuarterlyDate(this);\r\n        return new QuarterlyDate(oldDate.setMonth(this.getMonth() + 3));\r\n    };\r\n}\r\n\r\nclass AnnualDate extends DateAbstract {\r\n    nextTimePeriod = () => {\r\n        const oldDate = new AnnualDate(this);\r\n        return new AnnualDate(oldDate.setFullYear(this.getFullYear() + 1));\r\n    };\r\n}\r\n\r\nexport {DateAbstract, WeeklyDate, MonthlyDate, QuarterlyDate, AnnualDate}\r\n","import React, {Component} from 'react';\r\nimport StartMenu from './StartMenu';\r\nimport ParametersForm from \"./ParametersForm\";\r\nimport DataForm from \"./DataForm\";\r\nimport RenderedPlot from \"./RenderedPlot\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\nimport {field, URL} from \"../config.json\";\r\nimport {DateAbstract} from \"../utils/Date\";\r\nimport {confIntZip, fetchWithTimeout, pairArrayToParamStr} from \"../utils/Utils\";\r\n\r\nexport class BasePage extends Component {\r\n    state = {\r\n        step: 1,\r\n        dataInputType: \"FRED\",\r\n        mnemonic: \"\",\r\n        unprocessedY: '',\r\n        x: [], // dates\r\n        y: [], // processed time series\r\n        delta: field.freeText.delta.default,\r\n        deltaSelect: 2,\r\n        demean: field.optionField.iterativeDynamicDemeaning.default,\r\n        iterativeBackcasting: true,\r\n        rollingWindow: field.freeText.rollingWindow.default,\r\n        frequency: field.optionField.frequencyManual.default, // periodicity\r\n        startDate: null,\r\n        endDate: null,\r\n        startDateFRED: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        endDateFRED: null,\r\n        availableFrequencies: [],\r\n        frequencyFRED: field.optionField.frequencyFRED.default,\r\n        transform: true, // transforms to data before bnf\r\n        dCode: field.optionField.dCode.default,\r\n        pCode: field.optionField.pCode.default,\r\n        takeLog: false,\r\n        // bnf output (from API)\r\n        cycle: [],\r\n        dispCycleCI: false,\r\n        cycleCI: [],\r\n        deltaCalc: undefined,\r\n        cycleCILB: [],\r\n        cycleCIUB: [],\r\n        loading: true,\r\n        alertErrorType: null, // overarching alert text\r\n        fieldErrorMessages: {},\r\n    }\r\n\r\n    nextStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    prevStep = () => {\r\n        const {step} = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    cancelLoading = () => {\r\n        this.setState({loading: null});\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({[input]: e.target.value});\r\n    }\r\n\r\n    handleCheckboxChange = input => e => {\r\n        this.setState({[input]: e.target.checked});\r\n    }\r\n\r\n    setErrorMessage = (input, message) => {\r\n        this.setState({\r\n            fieldErrorMessages: {\r\n                ...this.state.fieldErrorMessages,\r\n                [input]: message\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteErrorMessage = input => {\r\n        let fieldErrorMessagesTemp = {...this.state.fieldErrorMessages};\r\n        delete fieldErrorMessagesTemp[input];\r\n        this.setState({fieldErrorMessages : fieldErrorMessagesTemp});\r\n    }\r\n\r\n    isEmptyString = (v, input) => {\r\n        if (v === \"\") {\r\n            this.setErrorMessage(input, \"must not be empty\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotANum = (v, input) => {\r\n        if (isNaN(v)) {\r\n            this.setErrorMessage(input, \"must be numeric\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isNotAnInt = (v, input) => {\r\n        if ((v % 1) !== 0) {\r\n            this.setErrorMessage(input, \"must be an integer\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isExceedsMinMax = (v, input) => {\r\n        if (field.freeText[input].min !== null && v < field.freeText[input].min) {\r\n            this.setErrorMessage(input, `must be ≥ ${field.freeText[input].min}`);\r\n            return true;\r\n        }\r\n        if (field.freeText[input].max !== null && v > field.freeText[input].max) {\r\n            this.setErrorMessage(input, `must be ≤ ${field.freeText[input].max}`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleErrorField = isCorrectEntry => (input, v) => {\r\n        if (isCorrectEntry) this.deleteErrorMessage(input);\r\n        this.setState({[input]: v});\r\n    }\r\n\r\n    validateField = (arr, input, e) => {\r\n        // functions earlier in the array take precedence. [first_validated...last_validated]\r\n        const v = e.target.value;\r\n        const isIncorrectEntry = arr.reduce((total, currentValue) =>\r\n            total ? true : currentValue(v, input) || total, false)\r\n        this.handleErrorField(!isIncorrectEntry)(input, v)\r\n    }\r\n\r\n    handleNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleIntegerNumberFieldChange = input => e => {\r\n        this.validateField([this.isEmptyString, this.isNotAnInt, this.isNotANum, this.isExceedsMinMax,], input, e);\r\n    }\r\n\r\n    handleChangeValidation = input => e => validationArr => {\r\n        this.validateField(validationArr, input, e);\r\n    }\r\n\r\n    bnfParamArr = () => [['window', this.state.rollingWindow],\r\n        ['delta_select', this.state.deltaSelect],\r\n        ['delta', this.state.delta],\r\n        ['ib', this.state.iterativeBackcasting],\r\n        ['demean', this.state.demean],].concat(\r\n        [['transform', this.state.transform]].concat(\r\n            this.state.transform ? [\r\n                    ['p_code', this.state.pCode],\r\n                    ['d_code', this.state.dCode],\r\n                    ['take_log', this.state.takeLog]]\r\n                : []\r\n        )\r\n    )\r\n\r\n    fetchResultWithErrorHandling = async (finalURL) => {\r\n        return fetchWithTimeout(finalURL)\r\n            .catch(e => {\r\n                this.setState({alertErrorType: \"TIMEOUT\"});\r\n                this.prevStep();\r\n                this.cancelLoading();\r\n                throw e;\r\n            })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    this.setState({alertErrorType: \"SERVER\"});\r\n                    this.prevStep();\r\n                    this.cancelLoading();\r\n                    throw new Error(\"bad status\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getResultsForFREDData = async () => {\r\n\r\n        const paramStr = pairArrayToParamStr(\r\n            [['fred_abbr', this.state.mnemonic],\r\n                ['freq', this.state.frequencyFRED],\r\n                ['obs_start', DateAbstract.getTruncatedDate(this.state.startDateFRED)],\r\n                ['obs_end', DateAbstract.getTruncatedDate(this.state.endDateFRED)],\r\n                ].concat(this.bnfParamArr())\r\n            );\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfFredDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: result[\"dates\"],\r\n                        y: result[\"y\"],\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    getResultsForUserSpecifiedData = async () => {\r\n\r\n        // dealing with all operating system's newline characters\r\n        this.state.y = this.state.unprocessedY.replace(/(,?(\\r\\n|\\n|\\r))|(,\\s)/gm, \",\")\r\n            .split(\",\")\r\n            .filter(x => x !== \"\");\r\n\r\n        const paramStr = pairArrayToParamStr([['processed_y', this.state.y]].concat(this.bnfParamArr()));\r\n\r\n        const finalURL = URL.baseBackendURL + URL.bnfUserSpecifiedDataSlug + paramStr;\r\n\r\n        console.log(finalURL);\r\n\r\n        this.setState({loading: true}, async () => {\r\n            this.fetchResultWithErrorHandling(finalURL)\r\n                .then(result => {\r\n                    console.log('Success:', result);\r\n\r\n                    const\r\n                        cycleRes = result[\"cycle\"].map(x => Number(x)),\r\n                        ciRes = result[\"ci\"].map(x => Number(x)),\r\n                        deltaRes = Number(result[\"delta\"]);\r\n\r\n                    this.setState({\r\n                        x: this.state.frequency !== \"n\" ? // dated axis or numbered axis\r\n                            DateAbstract.createDate(this.state.frequency, this.state.startDate).getDateArray(cycleRes.length).map(DateAbstract.getTruncatedDate)\r\n                            : Array.from({length: cycleRes.length}, (_, i) => i + 1),\r\n                        cycle: cycleRes,\r\n                        cycleCI: ciRes,\r\n                        deltaCalc: deltaRes,\r\n                        cycleCILB: confIntZip(cycleRes, ciRes, \"lb\"),\r\n                        cycleCIUB: confIntZip(cycleRes, ciRes, \"ub\"),\r\n                        loading: false,\r\n                    });\r\n                }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI} = this.state;\r\n        const {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, availableFrequencies} = this.state;\r\n        const dataUserFormPageValues = {unprocessedY, startDate, endDate, frequency, dataInputType, dispCycleCI};\r\n        const dataFREDFormPageValues = {startDateFRED, endDateFRED, minDate, maxDate, mnemonic, frequencyFRED, dataInputType, availableFrequencies, dispCycleCI};\r\n\r\n        const {\r\n            step,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            cycle,\r\n            deltaCalc,\r\n            fieldErrorMessages,\r\n            loading,\r\n            serverError,\r\n            alertErrorType,\r\n        } = this.state;\r\n        const parametersFormPageValues = {\r\n            unprocessedY,\r\n            delta,\r\n            deltaSelect,\r\n            demean,\r\n            iterativeBackcasting,\r\n            rollingWindow,\r\n            transform,\r\n            dCode,\r\n            pCode,\r\n            takeLog,\r\n            loading,\r\n            serverError,\r\n            dataInputType,\r\n            alertErrorType,\r\n        };\r\n\r\n        const {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        } = this;\r\n        const handlers = {\r\n            handleChange, handleNumberFieldChange, handleIntegerNumberFieldChange,\r\n            handleCheckboxChange, handleErrorField\r\n        };\r\n\r\n        const {x, y, cycleCILB, cycleCIUB,} = this.state;\r\n        const plotPageValues = {x, y, cycle, deltaCalc, dispCycleCI, cycleCILB, cycleCIUB, frequency, startDate, dataInputType, mnemonic};\r\n\r\n        return (\r\n            <>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 2:\r\n                            return <DataForm\r\n                                nextStep={this.nextStep}\r\n                                prevStep={this.prevStep}\r\n                                setErrorMessage={this.setErrorMessage}\r\n                                deleteErrorMessage={this.deleteErrorMessage}\r\n                                handleChange={this.handleChange}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                valuesUserData={dataUserFormPageValues}\r\n                                valuesFREDData={dataFREDFormPageValues}\r\n                                errors={fieldErrorMessages}\r\n                            />\r\n                        case 3:\r\n                            return (\r\n                                <>\r\n                                    <ParametersForm\r\n                                        nextStep={this.nextStep}\r\n                                        prevStep={this.prevStep}\r\n                                        cancelLoad={this.cancelLoading}\r\n                                        handlers={handlers}\r\n                                        getResults={this.getResultsForUserSpecifiedData}\r\n                                        getFREDResults={this.getResultsForFREDData}\r\n                                        values={parametersFormPageValues}\r\n                                        errors={fieldErrorMessages}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        case 4:\r\n                            return (\r\n                                <>\r\n                                    {this.state.loading ? Loading() : <RenderedPlot\r\n                                                                            prevStep={this.prevStep}\r\n                                                                            plotPageValues={plotPageValues}\r\n                                                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n                        default: // case 1\r\n                            return <StartMenu\r\n                                nextStep={this.nextStep}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                    }\r\n                })()}\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BasePage","import './styles/App.css';\r\nimport BasePage from './components/BasePage';\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"App\">\r\n            <header className=\"appHeader\">\r\n                BN Filter Trend-Cycle Decomposition\r\n            </header>\r\n\r\n            <div className=\"information welcomeInformation\">\r\n                <p>This tool performs trend-cycle decomposition.\r\n                    It is implemented using the Beveridge-Nelson filter method described in <a target=\"_blank\"\r\n                                                                                               rel=\"noopener noreferrer\"\r\n                                                                                               href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3434174\">\r\n                        Kamber, Morley, and Wong</a>.\r\n                </p>\r\n\r\n            </div>\r\n            <BasePage/>\r\n        </div>\r\n        <div style={styles.footer}>\r\n            <a href=\"https://sites.google.com/site/guneskamber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                Gunes Kamber</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/jamescmorley\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                James Morley</a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <a href=\"https://sites.google.com/site/benjaminwongshijie\" rel=\"noopener noreferrer\"\r\n               target=\"_blank\">\r\n                Benjamin Wong</a>\r\n            <br/>\r\n            <div style={styles.feature}>\r\n                <a href=\"https://crstnn.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">@cristian</a>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    footer: {\r\n        fontSize: \"small\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderTop: \"1px solid #E7E7E7\",\r\n        textAlign: \"center\",\r\n        padding: \"10px\",\r\n        marginTop: \"10px\",\r\n        position: \"fixed\",\r\n        overflowX: \"hidden\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        width: \"100%\",\r\n        zIndex: 1,\r\n    },\r\n    feature: {\r\n        marginTop: \"5px\",\r\n        fontSize: \"x-small\",\r\n    }\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}